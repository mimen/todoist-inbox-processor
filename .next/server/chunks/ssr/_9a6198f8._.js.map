{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/lib/mock-data.ts"],"sourcesContent":["import { TodoistTask, TodoistProject, TodoistLabel, MockAISuggestion } from './types'\n\n// Mock projects data\nexport const mockProjects: TodoistProject[] = [\n  {\n    id: '1',\n    name: 'Work',\n    color: 'blue',\n    order: 1,\n    commentCount: 0,\n    isShared: false,\n    isFavorite: true,\n    isInboxProject: false,\n    isTeamInbox: false,\n    viewStyle: 'list',\n    url: '',\n  },\n  {\n    id: '2',\n    name: 'Personal',\n    color: 'green',\n    order: 2,\n    commentCount: 0,\n    isShared: false,\n    isFavorite: false,\n    isInboxProject: false,\n    isTeamInbox: false,\n    viewStyle: 'list',\n    url: '',\n  },\n  {\n    id: '3',\n    name: 'Shopping',\n    color: 'orange',\n    order: 3,\n    commentCount: 0,\n    isShared: false,\n    isFavorite: false,\n    isInboxProject: false,\n    isTeamInbox: false,\n    viewStyle: 'list',\n    url: '',\n  },\n  {\n    id: 'inbox',\n    name: 'Inbox',\n    color: 'grey',\n    order: 0,\n    commentCount: 0,\n    isShared: false,\n    isFavorite: false,\n    isInboxProject: true,\n    isTeamInbox: false,\n    viewStyle: 'list',\n    url: '',\n  },\n]\n\n// Mock labels data\nexport const mockLabels: TodoistLabel[] = [\n  { id: '1', name: 'urgent', color: 'red', order: 1, isFavorite: true },\n  { id: '2', name: 'waiting', color: 'yellow', order: 2, isFavorite: false },\n  { id: '3', name: 'someday', color: 'grey', order: 3, isFavorite: false },\n  { id: '4', name: 'email', color: 'blue', order: 4, isFavorite: false },\n  { id: '5', name: 'phone', color: 'green', order: 5, isFavorite: false },\n]\n\n// Mock inbox tasks\nexport const mockInboxTasks: TodoistTask[] = [\n  {\n    id: '1',\n    content: 'call mom about weekend plans',\n    projectId: 'inbox',\n    order: 1,\n    priority: 1,\n    labels: [],\n    url: '',\n    commentCount: 0,\n    createdAt: '2024-01-15T10:00:00Z',\n    isCompleted: false,\n  },\n  {\n    id: '2',\n    content: 'review quarterly budget report',\n    description: 'Need to check the Q4 numbers and prepare for the board meeting',\n    projectId: 'inbox',\n    order: 2,\n    priority: 1,\n    labels: [],\n    url: '',\n    commentCount: 0,\n    createdAt: '2024-01-15T10:30:00Z',\n    isCompleted: false,\n  },\n  {\n    id: '3',\n    content: 'buy groceries',\n    projectId: 'inbox',\n    order: 3,\n    priority: 1,\n    labels: [],\n    url: '',\n    commentCount: 0,\n    createdAt: '2024-01-15T11:00:00Z',\n    isCompleted: false,\n  },\n  {\n    id: '4',\n    content: 'fix the broken link on website',\n    description: 'Users are reporting 404 error on the contact page',\n    projectId: 'inbox',\n    order: 4,\n    priority: 1,\n    labels: [],\n    url: '',\n    commentCount: 0,\n    createdAt: '2024-01-15T11:30:00Z',\n    isCompleted: false,\n  },\n  {\n    id: '5',\n    content: 'schedule dentist appointment',\n    projectId: 'inbox',\n    order: 5,\n    priority: 1,\n    labels: [],\n    url: '',\n    commentCount: 0,\n    createdAt: '2024-01-15T12:00:00Z',\n    isCompleted: false,\n  },\n]\n\n// Mock AI suggestions generator\nexport function generateMockSuggestions(taskContent: string): MockAISuggestion[] {\n  const suggestions: MockAISuggestion[] = []\n  const content = taskContent.toLowerCase()\n\n  // Project suggestions\n  if (content.includes('call') || content.includes('phone') || content.includes('mom') || content.includes('family')) {\n    suggestions.push({\n      type: 'project',\n      suggestion: 'Personal',\n      confidence: 0.85,\n      reasoning: 'Personal communication task'\n    })\n  } else if (content.includes('work') || content.includes('meeting') || content.includes('report') || content.includes('budget')) {\n    suggestions.push({\n      type: 'project',\n      suggestion: 'Work',\n      confidence: 0.9,\n      reasoning: 'Work-related task'\n    })\n  } else if (content.includes('buy') || content.includes('shop') || content.includes('groceries')) {\n    suggestions.push({\n      type: 'project',\n      suggestion: 'Shopping',\n      confidence: 0.95,\n      reasoning: 'Shopping or purchasing task'\n    })\n  }\n\n  // Label suggestions\n  if (content.includes('call') || content.includes('phone')) {\n    suggestions.push({\n      type: 'label',\n      suggestion: 'phone',\n      confidence: 0.9,\n      reasoning: 'Phone communication required'\n    })\n  }\n  if (content.includes('urgent') || content.includes('asap') || content.includes('important')) {\n    suggestions.push({\n      type: 'label',\n      suggestion: 'urgent',\n      confidence: 0.8,\n      reasoning: 'Task indicates urgency'\n    })\n  }\n\n  // Priority suggestions\n  if (content.includes('urgent') || content.includes('asap') || content.includes('critical')) {\n    suggestions.push({\n      type: 'priority',\n      suggestion: '4',\n      confidence: 0.85,\n      reasoning: 'High priority language detected'\n    })\n  } else if (content.includes('important') || content.includes('deadline')) {\n    suggestions.push({\n      type: 'priority',\n      suggestion: '3',\n      confidence: 0.75,\n      reasoning: 'Medium-high priority indicated'\n    })\n  }\n\n  // Task rewrite suggestions\n  if (content.length < 30 || !content.includes(' ')) {\n    suggestions.push({\n      type: 'rewrite',\n      suggestion: makeTaskMoreActionable(taskContent),\n      confidence: 0.7,\n      reasoning: 'Make task more specific and actionable'\n    })\n  }\n\n  return suggestions\n}\n\nfunction makeTaskMoreActionable(content: string): string {\n  const lower = content.toLowerCase()\n  \n  if (lower.includes('call mom')) {\n    return 'Call mom to discuss weekend plans and confirm dinner time'\n  } else if (lower.includes('buy groceries')) {\n    return 'Go to grocery store and buy milk, bread, eggs, and vegetables for the week'\n  } else if (lower.includes('fix') && lower.includes('website')) {\n    return 'Investigate and fix the 404 error on website contact page'\n  } else if (lower.includes('dentist')) {\n    return 'Call dentist office to schedule routine cleaning appointment'\n  } else if (lower.includes('review') && lower.includes('budget')) {\n    return 'Review Q4 budget report and prepare summary for board meeting'\n  }\n  \n  return `Complete task: ${content} - add specific details and next actions`\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/lib/suggestions-cache.ts"],"sourcesContent":["interface ProjectSuggestion {\n  projectId: string\n  projectName: string\n  confidence: number\n  reasoning: string\n}\n\ninterface CachedSuggestions {\n  taskId: string\n  taskContent: string\n  taskDescription: string\n  suggestions: ProjectSuggestion[]\n  timestamp: number\n}\n\nclass SuggestionsCache {\n  private cache = new Map<string, CachedSuggestions>()\n  private readonly CACHE_DURATION = 5 * 60 * 1000 // 5 minutes\n  private readonly MAX_CACHE_SIZE = 50 // Keep cache reasonable size\n\n  private generateCacheKey(taskId: string, content: string, description: string): string {\n    // Create a hash-like key based on task content for change detection\n    const contentHash = btoa(content + (description || '')).replace(/[^a-zA-Z0-9]/g, '').slice(0, 16)\n    return `${taskId}_${contentHash}`\n  }\n\n  private isExpired(timestamp: number): boolean {\n    return Date.now() - timestamp > this.CACHE_DURATION\n  }\n\n  private cleanExpired(): void {\n    const now = Date.now()\n    for (const [key, cached] of this.cache.entries()) {\n      if (this.isExpired(cached.timestamp)) {\n        this.cache.delete(key)\n      }\n    }\n  }\n\n  private ensureCacheSize(): void {\n    if (this.cache.size > this.MAX_CACHE_SIZE) {\n      // Remove oldest entries\n      const entries = Array.from(this.cache.entries())\n        .sort((a, b) => a[1].timestamp - b[1].timestamp)\n      \n      const toRemove = entries.slice(0, this.cache.size - this.MAX_CACHE_SIZE + 10)\n      toRemove.forEach(([key]) => this.cache.delete(key))\n    }\n  }\n\n  getSuggestions(taskId: string, content: string, description: string = ''): ProjectSuggestion[] | null {\n    this.cleanExpired()\n    \n    const key = this.generateCacheKey(taskId, content, description)\n    const cached = this.cache.get(key)\n    \n    if (cached && !this.isExpired(cached.timestamp)) {\n      return cached.suggestions\n    }\n    \n    return null\n  }\n\n  setSuggestions(\n    taskId: string, \n    content: string, \n    description: string = '', \n    suggestions: ProjectSuggestion[]\n  ): void {\n    this.cleanExpired()\n    this.ensureCacheSize()\n    \n    const key = this.generateCacheKey(taskId, content, description)\n    this.cache.set(key, {\n      taskId,\n      taskContent: content,\n      taskDescription: description,\n      suggestions,\n      timestamp: Date.now()\n    })\n  }\n\n  async generateSuggestions(\n    taskId: string,\n    content: string,\n    description: string = '',\n    projectHierarchy: any,\n    currentProjectId?: string\n  ): Promise<ProjectSuggestion[]> {\n    // Check cache first\n    const cached = this.getSuggestions(taskId, content, description)\n    if (cached) {\n      return cached\n    }\n\n    try {\n      const response = await fetch('/api/llm/generate-project-suggestions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          taskContent: content,\n          taskDescription: description,\n          projectHierarchy,\n          currentProjectId,\n        }),\n      })\n\n      if (response.ok) {\n        const data = await response.json()\n        const suggestions = data.suggestions || []\n        \n        // Cache the result\n        this.setSuggestions(taskId, content, description, suggestions)\n        \n        return suggestions\n      } else {\n        console.error('Failed to generate suggestions:', response.statusText)\n        return []\n      }\n    } catch (error) {\n      console.error('Error generating suggestions:', error)\n      return []\n    }\n  }\n\n  async prefetchSuggestions(\n    tasks: Array<{ id: string; content: string; description?: string; projectId: string }>,\n    projectHierarchy: any\n  ): Promise<void> {\n    const prefetchPromises = tasks.map(task => \n      this.generateSuggestions(\n        task.id,\n        task.content,\n        task.description || '',\n        projectHierarchy,\n        task.projectId\n      )\n    )\n\n    try {\n      await Promise.all(prefetchPromises)\n    } catch (error) {\n      console.error('Error prefetching suggestions:', error)\n    }\n  }\n\n  invalidateTask(taskId: string): void {\n    // Remove all cache entries for this task ID\n    const keysToDelete = Array.from(this.cache.keys()).filter(key => \n      this.cache.get(key)?.taskId === taskId\n    )\n    keysToDelete.forEach(key => this.cache.delete(key))\n  }\n\n  clear(): void {\n    this.cache.clear()\n  }\n\n  getStats() {\n    return {\n      size: this.cache.size,\n      entries: Array.from(this.cache.values()).map(v => ({\n        taskId: v.taskId,\n        content: v.taskContent.slice(0, 30) + '...',\n        suggestionsCount: v.suggestions.length,\n        age: Math.round((Date.now() - v.timestamp) / 1000)\n      }))\n    }\n  }\n}\n\n// Export singleton instance\nexport const suggestionsCache = new SuggestionsCache()\nexport type { ProjectSuggestion }"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/TaskCard.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useCallback, useRef, useEffect } from 'react'\nimport { TodoistTask, TodoistProject, TodoistLabel } from '@/lib/types'\n\ninterface TaskCardProps {\n  task: TodoistTask\n  projects: TodoistProject[]\n  labels: TodoistLabel[]\n  onContentChange?: (newContent: string) => void\n  onDescriptionChange?: (newDescription: string) => void\n  onProjectClick?: () => void\n  onPriorityClick?: () => void\n  onLabelAdd?: () => void\n  onLabelRemove?: (labelName: string) => void\n}\n\nexport default function TaskCard({ \n  task, \n  projects, \n  labels, \n  onContentChange, \n  onDescriptionChange,\n  onProjectClick,\n  onPriorityClick,\n  onLabelAdd,\n  onLabelRemove \n}: TaskCardProps) {\n  const [content, setContent] = useState(task.content)\n  const [description, setDescription] = useState(task.description || '')\n  const [saveTimeout, setSaveTimeout] = useState<NodeJS.Timeout | null>(null)\n  const contentRef = useRef<HTMLTextAreaElement>(null)\n  const descriptionRef = useRef<HTMLTextAreaElement>(null)\n\n  // Update local state when task changes\n  useEffect(() => {\n    setContent(task.content)\n    setDescription(task.description || '')\n  }, [task.id, task.content, task.description])\n\n  // Auto-save with debounce\n  const debouncedSave = useCallback((type: 'content' | 'description', value: string) => {\n    if (saveTimeout) {\n      clearTimeout(saveTimeout)\n    }\n    \n    const timeout = setTimeout(() => {\n      if (type === 'content' && value !== task.content && onContentChange) {\n        onContentChange(value)\n      } else if (type === 'description' && value !== (task.description || '') && onDescriptionChange) {\n        onDescriptionChange(value)\n      }\n    }, 1000)\n    \n    setSaveTimeout(timeout)\n  }, [saveTimeout, task.content, task.description, onContentChange, onDescriptionChange])\n\n  const handleContentChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const newContent = e.target.value\n    setContent(newContent)\n    debouncedSave('content', newContent)\n  }\n\n  const handleDescriptionChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const newDescription = e.target.value\n    setDescription(newDescription)\n    debouncedSave('description', newDescription)\n  }\n\n  // Auto-resize textarea\n  useEffect(() => {\n    const adjustHeight = (textarea: HTMLTextAreaElement | null) => {\n      if (textarea) {\n        textarea.style.height = 'auto'\n        textarea.style.height = `${textarea.scrollHeight}px`\n      }\n    }\n    adjustHeight(contentRef.current)\n    adjustHeight(descriptionRef.current)\n  }, [content, description])\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric',\n    })\n  }\n\n  const getTodoistColor = (colorName: string) => {\n    const colorMap: { [key: string]: string } = {\n      'berry_red': '#b8256f',\n      'red': '#db4035',\n      'orange': '#ff9933',\n      'yellow': '#fad000',\n      'olive_green': '#afb83b',\n      'lime_green': '#7ecc49',\n      'green': '#299438',\n      'mint_green': '#6accbc',\n      'teal': '#158fad',\n      'sky_blue': '#14aaf5',\n      'light_blue': '#96c3eb',\n      'blue': '#4073ff',\n      'grape': '#884dff',\n      'violet': '#af38eb',\n      'lavender': '#eb96eb',\n      'magenta': '#e05194',\n      'salmon': '#ff8d85',\n      'charcoal': '#808080',\n      'grey': '#b8b8b8',\n      'taupe': '#ccac93'\n    }\n    return colorMap[colorName] || '#299fe6'\n  }\n\n  // Convert API priority (1-4) to UI priority (P4-P1)\n  const getUIPriority = (apiPriority: number) => {\n    return 5 - apiPriority // 4→P1, 3→P2, 2→P3, 1→P4\n  }\n\n  const getPriorityColor = (apiPriority: number) => {\n    const uiPriority = getUIPriority(apiPriority)\n    switch (uiPriority) {\n      case 1: return 'text-red-600 bg-red-50 border-red-200'    // P1 = Urgent\n      case 2: return 'text-orange-600 bg-orange-50 border-orange-200' // P2 = High\n      case 3: return 'text-blue-600 bg-blue-50 border-blue-200'  // P3 = Medium\n      default: return 'text-gray-600 bg-gray-50 border-gray-200' // P4 = Normal\n    }\n  }\n\n  const getPriorityLabel = (apiPriority: number) => {\n    const uiPriority = getUIPriority(apiPriority)\n    switch (uiPriority) {\n      case 1: return 'Urgent'  // P1\n      case 2: return 'High'    // P2\n      case 3: return 'Medium'  // P3\n      default: return 'Normal' // P4\n    }\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm p-6 task-card-enter\">\n      {/* Header */}\n      <div className=\"flex items-start justify-between mb-4\">\n        <div className=\"flex-1\">\n          <div className=\"flex items-center gap-2 mb-2\">\n            <button\n              onClick={onPriorityClick}\n              className={`px-2 py-1 text-xs font-medium rounded-md border transition-colors hover:opacity-80 cursor-pointer ${getPriorityColor(task.priority)}`}\n              title=\"Click to change priority\"\n            >\n              P{getUIPriority(task.priority)} • {getPriorityLabel(task.priority)}\n            </button>\n            <button\n              onClick={onProjectClick}\n              className=\"inline-flex items-center space-x-2 bg-gray-100 hover:bg-gray-200 px-2 py-1 rounded text-xs transition-colors cursor-pointer\"\n              title=\"Click to change project\"\n            >\n              {(() => {\n                const project = projects.find(p => p.id === task.projectId)\n                const projectColor = project ? getTodoistColor(project.color) : '#299fe6'\n                return (\n                  <>\n                    <div \n                      className=\"w-2.5 h-2.5 rounded-full flex-shrink-0\"\n                      style={{ backgroundColor: projectColor }}\n                    ></div>\n                    <span className=\"text-gray-700\">\n                      {project?.name || 'Unknown Project'}\n                    </span>\n                  </>\n                )\n              })()}\n            </button>\n          </div>\n          \n          {/* Always-Editable Task Content */}\n          <textarea\n            ref={contentRef}\n            value={content}\n            onChange={handleContentChange}\n            className=\"w-full text-xl font-semibold text-gray-900 leading-tight bg-transparent hover:bg-gray-50 rounded-md px-2 py-1 focus:outline-none focus:bg-white focus:ring-2 focus:ring-todoist-blue resize-none transition-all overflow-hidden\"\n            style={{ minHeight: '2rem' }}\n            placeholder=\"Task name...\"\n          />\n        </div>\n      </div>\n\n      {/* Always-Editable Description */}\n      <div className=\"mb-4\">\n        <textarea\n          ref={descriptionRef}\n          value={description}\n          onChange={handleDescriptionChange}\n          className=\"w-full text-gray-600 bg-gray-50 hover:bg-gray-100 focus:bg-white rounded-md p-3 text-sm leading-relaxed focus:outline-none focus:ring-2 focus:ring-todoist-blue resize-none transition-all overflow-hidden\"\n          placeholder=\"Add a description...\"\n          style={{ minHeight: '3rem' }}\n        />\n      </div>\n\n      {/* Current Assignment */}\n      <div className=\"space-y-3 mb-6\">\n        <div>\n          <span className=\"text-sm font-medium text-gray-700\">Labels:</span>\n          <div className=\"flex flex-wrap gap-2 mt-2\">\n            {task.labels.map((labelName) => {\n              const label = labels.find(l => l.name === labelName)\n              const labelColor = label ? getTodoistColor(label.color) : '#299fe6'\n              return (\n                <div\n                  key={labelName}\n                  className=\"text-xs px-2 py-1 rounded-full flex items-center group relative transition-all\"\n                  style={{ backgroundColor: `${labelColor}20`, color: labelColor }}\n                >\n                  <div className=\"flex items-center\">\n                    <div \n                      className=\"w-2 h-2 rounded-full flex-shrink-0 mr-1 group-hover:hidden\"\n                      style={{ backgroundColor: labelColor }}\n                    ></div>\n                    <button\n                      onClick={() => onLabelRemove?.(labelName)}\n                      className=\"w-2 h-2 mr-1 rounded-full items-center justify-center hidden group-hover:flex hover:scale-125 transition-transform\"\n                      title=\"Remove label\"\n                    >\n                      <span className=\"text-xs font-bold leading-none\">×</span>\n                    </button>\n                    <span>{labelName}</span>\n                  </div>\n                </div>\n              )\n            })}\n            <button\n              onClick={onLabelAdd}\n              className=\"text-xs px-2 py-1 rounded-full flex items-center transition-colors bg-gray-100 text-gray-600 hover:bg-gray-200\"\n              title=\"Add labels\"\n            >\n              <span className=\"font-medium\">+ Add Label</span>\n            </button>\n          </div>\n        </div>\n\n        {task.due && (\n          <div>\n            <span className=\"text-sm font-medium text-gray-700\">Due:</span>\n            <span className=\"ml-2 text-sm text-gray-600\">\n              {formatDate(task.due.date)}\n            </span>\n          </div>\n        )}\n      </div>\n\n      {/* Metadata */}\n      <div className=\"pt-4 border-t border-gray-100\">\n        <div className=\"flex items-center justify-between text-xs text-gray-500\">\n          <span>Created: {formatDate(task.createdAt)}</span>\n          <span>ID: {task.id}</span>\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 815, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/ProjectDropdown.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, useRef } from 'react'\nimport { TodoistProject } from '@/lib/types'\n\ninterface ProjectDropdownProps {\n  projects: TodoistProject[]\n  selectedProjectId: string\n  onProjectChange: (projectId: string) => void\n  placeholder?: string\n  includeInbox?: boolean\n  className?: string\n}\n\nexport default function ProjectDropdown({ \n  projects, \n  selectedProjectId, \n  onProjectChange,\n  placeholder = \"Select project...\",\n  includeInbox = true,\n  className = \"\"\n}: ProjectDropdownProps) {\n  const [isOpen, setIsOpen] = useState(false)\n  const [searchTerm, setSearchTerm] = useState('')\n  const dropdownRef = useRef<HTMLDivElement>(null)\n  const searchInputRef = useRef<HTMLInputElement>(null)\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setIsOpen(false)\n        setSearchTerm('')\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside)\n    return () => document.removeEventListener('mousedown', handleClickOutside)\n  }, [])\n\n  // Focus search input when dropdown opens\n  useEffect(() => {\n    if (isOpen && searchInputRef.current) {\n      searchInputRef.current.focus()\n    }\n  }, [isOpen])\n\n  const getTodoistColor = (colorName: string) => {\n    const colorMap: { [key: string]: string } = {\n      'berry_red': '#b8256f',\n      'red': '#db4035',\n      'orange': '#ff9933',\n      'yellow': '#fad000',\n      'olive_green': '#afb83b',\n      'lime_green': '#7ecc49',\n      'green': '#299438',\n      'mint_green': '#6accbc',\n      'teal': '#158fad',\n      'sky_blue': '#14aaf5',\n      'light_blue': '#96c3eb',\n      'blue': '#4073ff',\n      'grape': '#884dff',\n      'violet': '#af38eb',\n      'lavender': '#eb96eb',\n      'magenta': '#e05194',\n      'salmon': '#ff8d85',\n      'charcoal': '#808080',\n      'grey': '#b8b8b8',\n      'taupe': '#ccac93'\n    }\n    return colorMap[colorName] || '#299fe6'\n  }\n\n  // Create project hierarchy\n  const createProjectHierarchy = () => {\n    const rootProjects = projects.filter(p => !p.parentId && !p.isInboxProject)\n    const childProjects = projects.filter(p => p.parentId && !p.isInboxProject)\n    \n    const hierarchy: any[] = []\n    \n    // Add inbox if requested\n    if (includeInbox) {\n      const inboxProject = projects.find(p => p.isInboxProject)\n      hierarchy.push({\n        id: inboxProject?.id || 'inbox',\n        name: 'Inbox',\n        color: inboxProject ? getTodoistColor(inboxProject.color) : '#299fe6',\n        indent: 0\n      })\n    }\n    \n    // Add root projects and their children\n    const addProjectWithChildren = (project: TodoistProject, indent: number = 0) => {\n      hierarchy.push({\n        id: project.id,\n        name: project.name,\n        color: getTodoistColor(project.color),\n        indent\n      })\n      \n      // Add children\n      const children = childProjects.filter(p => p.parentId === project.id)\n      children.forEach(child => addProjectWithChildren(child, indent + 1))\n    }\n    \n    rootProjects.forEach(project => addProjectWithChildren(project))\n    \n    return hierarchy\n  }\n\n  const projectHierarchy = createProjectHierarchy()\n  \n  // Filter projects based on search term\n  const filteredProjects = projectHierarchy.filter(project =>\n    project.name.toLowerCase().includes(searchTerm.toLowerCase())\n  )\n\n  const selectedProject = projectHierarchy.find(p => p.id === selectedProjectId)\n\n  const handleProjectSelect = (projectId: string, event: React.MouseEvent) => {\n    event.preventDefault()\n    event.stopPropagation()\n    onProjectChange(projectId)\n    setIsOpen(false)\n    setSearchTerm('')\n  }\n\n  const handleDropdownClick = (event: React.MouseEvent) => {\n    event.preventDefault()\n    event.stopPropagation()\n    setIsOpen(!isOpen)\n  }\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault()\n    event.stopPropagation()\n    setSearchTerm(event.target.value)\n  }\n\n  const handleDropdownContainerClick = (event: React.MouseEvent) => {\n    // Prevent any event bubbling from the dropdown container\n    event.preventDefault()\n    event.stopPropagation()\n  }\n\n  return (\n    <div className={`relative ${className}`} ref={dropdownRef}>\n      <button\n        type=\"button\"\n        onClick={handleDropdownClick}\n        className=\"w-full flex items-center justify-between p-3 bg-gray-50 hover:bg-gray-100 border border-gray-200 rounded-md transition-colors\"\n      >\n        <div className=\"flex items-center space-x-3\">\n          {selectedProject ? (\n            <>\n              <div \n                className=\"w-4 h-4 rounded-full flex-shrink-0\"\n                style={{ backgroundColor: selectedProject.color }}\n              ></div>\n              <span className=\"font-medium text-gray-900\">{selectedProject.name}</span>\n            </>\n          ) : (\n            <span className=\"text-gray-500\">{placeholder}</span>\n          )}\n        </div>\n        <svg \n          className={`w-4 h-4 text-gray-500 transition-transform ${isOpen ? 'rotate-180' : ''}`}\n          fill=\"none\" \n          stroke=\"currentColor\" \n          viewBox=\"0 0 24 24\"\n        >\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\" />\n        </svg>\n      </button>\n\n      {isOpen && (\n        <div \n          className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-200 rounded-md shadow-lg z-50 dropdown-open\"\n          onClick={handleDropdownContainerClick}\n        >\n          {/* Search Input */}\n          <div className=\"p-3 border-b border-gray-200\">\n            <input\n              ref={searchInputRef}\n              type=\"text\"\n              placeholder=\"Search projects...\"\n              value={searchTerm}\n              onChange={handleSearchChange}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-todoist-blue focus:border-transparent text-sm\"\n            />\n          </div>\n          \n          {/* Project List */}\n          <div className=\"max-h-64 overflow-y-auto\">\n            {filteredProjects.length > 0 ? (\n              filteredProjects.map((project) => (\n                <button\n                  type=\"button\"\n                  key={project.id}\n                  onClick={(e) => handleProjectSelect(project.id, e)}\n                  className={`w-full flex items-center space-x-3 p-3 text-left hover:bg-gray-50 transition-colors ${\n                    selectedProjectId === project.id ? 'bg-blue-50 text-blue-900' : 'text-gray-900'\n                  }`}\n                  style={{ paddingLeft: `${12 + (project.indent * 20)}px` }}\n                >\n                  <div \n                    className=\"w-4 h-4 rounded-full flex-shrink-0\"\n                    style={{ backgroundColor: project.color }}\n                  ></div>\n                  <span className=\"font-medium flex-1\">{project.name}</span>\n                  {selectedProjectId === project.id && (\n                    <svg className=\"w-4 h-4 text-blue-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                    </svg>\n                  )}\n                </button>\n              ))\n            ) : (\n              <div className=\"p-3 text-center text-gray-500 text-sm\">\n                No projects found\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1105, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/TaskForm.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, useCallback, useRef } from 'react'\nimport { TodoistTask, TodoistProject, TodoistLabel, TaskUpdate, MockAISuggestion } from '@/lib/types'\nimport ProjectDropdown from './ProjectDropdown'\n\ninterface TaskFormProps {\n  task: TodoistTask\n  projects: TodoistProject[]\n  labels: TodoistLabel[]\n  suggestions: MockAISuggestion[]\n  onAutoSave: (updates: TaskUpdate) => void\n  onNext: () => void\n  onPrevious: () => void\n  canGoNext: boolean\n  canGoPrevious: boolean\n}\n\nexport default function TaskForm({ task, projects, labels, suggestions, onAutoSave, onNext, onPrevious, canGoNext, canGoPrevious }: TaskFormProps) {\n  const [formData, setFormData] = useState<TaskUpdate>({\n    content: task.content,\n    description: task.description || '',\n    projectId: task.projectId,\n    labels: [...task.labels],\n    dueString: '',\n  })\n\n  const [selectedLabels, setSelectedLabels] = useState<Set<string>>(new Set(task.labels))\n  const saveTimeoutRef = useRef<NodeJS.Timeout | null>(null)\n  const lastSavedDataRef = useRef<TaskUpdate | null>(null)\n\n  // Auto-save with debounce\n  const debouncedSave = useCallback((updates: TaskUpdate) => {\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current)\n    }\n    \n    saveTimeoutRef.current = setTimeout(() => {\n      // Only save if data has actually changed\n      const dataToSave = { ...updates, labels: Array.from(selectedLabels) }\n      const currentDataString = JSON.stringify(dataToSave)\n      const lastSavedString = JSON.stringify(lastSavedDataRef.current)\n      \n      if (currentDataString !== lastSavedString) {\n        console.log('Auto-saving changes:', dataToSave)\n        onAutoSave(dataToSave)\n        lastSavedDataRef.current = dataToSave\n      }\n    }, 2000)\n  }, [onAutoSave, selectedLabels])\n\n  // Reset form data when task changes\n  useEffect(() => {\n    const newFormData = {\n      content: task.content,\n      description: task.description || '',\n      projectId: task.projectId,\n      labels: [...task.labels],\n      dueString: '',\n    }\n    setFormData(newFormData)\n    setSelectedLabels(new Set(task.labels))\n    lastSavedDataRef.current = { ...newFormData, labels: task.labels }\n    \n    // Clear any pending saves when task changes\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current)\n    }\n  }, [task.id, task.content, task.description, task.projectId, task.labels])\n\n  // Trigger auto-save when form data changes\n  useEffect(() => {\n    debouncedSave(formData)\n  }, [formData, debouncedSave])\n\n  // Cleanup timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (saveTimeoutRef.current) {\n        clearTimeout(saveTimeoutRef.current)\n      }\n    }\n  }, [])\n\n  // No longer need handleSubmit since we auto-save\n\n  const handleProjectChange = (projectId: string) => {\n    setFormData(prev => ({ ...prev, projectId }))\n  }\n\n  // Priority is now handled by the overlay, no longer needed here\n\n  const toggleLabel = (labelName: string) => {\n    const newLabels = new Set(selectedLabels)\n    if (newLabels.has(labelName)) {\n      newLabels.delete(labelName)\n    } else {\n      newLabels.add(labelName)\n    }\n    setSelectedLabels(newLabels)\n    // Trigger auto-save for label changes\n    debouncedSave({ ...formData, labels: Array.from(newLabels) })\n  }\n\n  const applySuggestion = (suggestion: MockAISuggestion) => {\n    switch (suggestion.type) {\n      case 'project':\n        const project = projects.find(p => p.name === suggestion.suggestion)\n        if (project) {\n          handleProjectChange(project.id)\n        }\n        break\n      case 'label':\n        toggleLabel(suggestion.suggestion)\n        break\n      case 'rewrite':\n        setFormData(prev => ({ ...prev, content: suggestion.suggestion }))\n        break\n      case 'priority':\n        // Priority is now handled by the overlay, suggestions disabled\n        break\n    }\n  }\n\n  const getTodoistColor = (colorName: string) => {\n    const colorMap: { [key: string]: string } = {\n      'berry_red': '#b8256f',\n      'red': '#db4035',\n      'orange': '#ff9933',\n      'yellow': '#fad000',\n      'olive_green': '#afb83b',\n      'lime_green': '#7ecc49',\n      'green': '#299438',\n      'mint_green': '#6accbc',\n      'teal': '#158fad',\n      'sky_blue': '#14aaf5',\n      'light_blue': '#96c3eb',\n      'blue': '#4073ff',\n      'grape': '#884dff',\n      'violet': '#af38eb',\n      'lavender': '#eb96eb',\n      'magenta': '#e05194',\n      'salmon': '#ff8d85',\n      'charcoal': '#808080',\n      'grey': '#b8b8b8',\n      'taupe': '#ccac93'\n    }\n    return colorMap[colorName] || '#299fe6'\n  }\n\n  const projectSuggestions = suggestions.filter(s => s.type === 'project')\n  const labelSuggestions = suggestions.filter(s => s.type === 'label')\n  const rewriteSuggestions = suggestions.filter(s => s.type === 'rewrite')\n  // prioritySuggestions removed - priority is now handled by overlay\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Task Modification Controls */}\n      <div className=\"space-y-4\">\n        {/* Description */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Description\n          </label>\n          <textarea\n            value={formData.description}\n            onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-todoist-blue focus:border-transparent resize-none\"\n            rows={2}\n            placeholder=\"Add additional details...\"\n          />\n        </div>\n\n        {/* Project Selection */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Project\n          </label>\n          <ProjectDropdown\n            projects={projects}\n            selectedProjectId={formData.projectId || ''}\n            onProjectChange={handleProjectChange}\n            placeholder=\"Select project...\"\n            includeInbox={false}\n            className=\"mb-2\"\n          />\n          {projectSuggestions.length > 0 && (\n            <div className=\"flex flex-wrap gap-1\">\n              {projectSuggestions.map((suggestion, index) => (\n                <button\n                  key={index}\n                  type=\"button\"\n                  onClick={() => applySuggestion(suggestion)}\n                  className=\"text-xs bg-green-50 text-green-700 px-2 py-1 rounded border border-green-200 hover:bg-green-100 transition-colors\"\n                >\n                  🤖 Suggest: {suggestion.suggestion} ({Math.round(suggestion.confidence * 100)}%)\n                </button>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* Priority is now handled via P key + 1-4 overlay */}\n\n        {/* Labels */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Labels\n          </label>\n          <div className=\"flex flex-wrap gap-2 mb-2\">\n            {labels.map((label) => {\n              const labelColor = getTodoistColor(label.color)\n              const isSelected = selectedLabels.has(label.name)\n              return (\n                <button\n                  key={label.id}\n                  type=\"button\"\n                  onClick={() => toggleLabel(label.name)}\n                  className={`px-3 py-1 rounded-full text-sm border transition-colors flex items-center space-x-2 ${\n                    isSelected\n                      ? 'text-white border-transparent'\n                      : 'bg-gray-50 hover:bg-gray-100 border-gray-200 text-gray-700'\n                  }`}\n                  style={isSelected ? { backgroundColor: labelColor } : {}}\n                >\n                  <div \n                    className=\"w-3 h-3 rounded-full flex-shrink-0\"\n                    style={{ backgroundColor: labelColor }}\n                  ></div>\n                  <span>{label.name}</span>\n                </button>\n              )\n            })}\n          </div>\n          {labelSuggestions.length > 0 && (\n            <div className=\"flex flex-wrap gap-1\">\n              {labelSuggestions.map((suggestion, index) => (\n                <button\n                  key={index}\n                  type=\"button\"\n                  onClick={() => applySuggestion(suggestion)}\n                  className=\"text-xs bg-blue-50 text-blue-700 px-2 py-1 rounded border border-blue-200 hover:bg-blue-100 transition-colors\"\n                >\n                  🏷️ Suggest: {suggestion.suggestion} ({Math.round(suggestion.confidence * 100)}%)\n                </button>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* Due Date */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Due Date\n          </label>\n          <input\n            type=\"text\"\n            value={formData.dueString}\n            onChange={(e) => setFormData(prev => ({ ...prev, dueString: e.target.value }))}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-todoist-blue focus:border-transparent\"\n            placeholder=\"e.g., tomorrow, next friday, in 2 weeks...\"\n          />\n          <p className=\"mt-1 text-xs text-gray-500\">\n            Use natural language like &quot;tomorrow&quot;, &quot;next Friday&quot;, &quot;in 2 weeks&quot;\n          </p>\n        </div>\n      </div>\n\n      {/* Navigation Buttons */}\n      <div className=\"pt-4 border-t border-gray-200\">\n        <div className=\"flex gap-3\">\n          <button\n            type=\"button\"\n            onClick={onPrevious}\n            disabled={!canGoPrevious}\n            className={`flex-1 py-3 px-4 rounded-md font-medium transition-colors focus:ring-2 focus:ring-offset-2 ${\n              canGoPrevious\n                ? 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50 focus:ring-gray-500'\n                : 'bg-gray-100 text-gray-400 border border-gray-200 cursor-not-allowed'\n            }`}\n          >\n            ← Previous\n          </button>\n          <button\n            type=\"button\"\n            onClick={onNext}\n            disabled={!canGoNext}\n            className={`flex-1 py-3 px-4 rounded-md font-medium transition-colors focus:ring-2 focus:ring-offset-2 ${\n              canGoNext\n                ? 'bg-todoist-blue text-white hover:bg-blue-600 focus:ring-todoist-blue'\n                : 'bg-gray-100 text-gray-400 border border-gray-200 cursor-not-allowed'\n            }`}\n          >\n            Next Task →\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAEA;AAEA;AAJA;;;;AAkBe,SAAS,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,aAAa,EAAiB;IAC/I,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc;QACnD,SAAS,KAAK,OAAO;QACrB,aAAa,KAAK,WAAW,IAAI;QACjC,WAAW,KAAK,SAAS;QACzB,QAAQ;eAAI,KAAK,MAAM;SAAC;QACxB,WAAW;IACb;IAEA,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe,IAAI,IAAI,KAAK,MAAM;IACrF,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAyB;IACrD,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAqB;IAEnD,0BAA0B;IAC1B,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QACjC,IAAI,eAAe,OAAO,EAAE;YAC1B,aAAa,eAAe,OAAO;QACrC;QAEA,eAAe,OAAO,GAAG,WAAW;YAClC,yCAAyC;YACzC,MAAM,aAAa;gBAAE,GAAG,OAAO;gBAAE,QAAQ,MAAM,IAAI,CAAC;YAAgB;YACpE,MAAM,oBAAoB,KAAK,SAAS,CAAC;YACzC,MAAM,kBAAkB,KAAK,SAAS,CAAC,iBAAiB,OAAO;YAE/D,IAAI,sBAAsB,iBAAiB;gBACzC,QAAQ,GAAG,CAAC,wBAAwB;gBACpC,WAAW;gBACX,iBAAiB,OAAO,GAAG;YAC7B;QACF,GAAG;IACL,GAAG;QAAC;QAAY;KAAe;IAE/B,oCAAoC;IACpC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,cAAc;YAClB,SAAS,KAAK,OAAO;YACrB,aAAa,KAAK,WAAW,IAAI;YACjC,WAAW,KAAK,SAAS;YACzB,QAAQ;mBAAI,KAAK,MAAM;aAAC;YACxB,WAAW;QACb;QACA,YAAY;QACZ,kBAAkB,IAAI,IAAI,KAAK,MAAM;QACrC,iBAAiB,OAAO,GAAG;YAAE,GAAG,WAAW;YAAE,QAAQ,KAAK,MAAM;QAAC;QAEjE,4CAA4C;QAC5C,IAAI,eAAe,OAAO,EAAE;YAC1B,aAAa,eAAe,OAAO;QACrC;IACF,GAAG;QAAC,KAAK,EAAE;QAAE,KAAK,OAAO;QAAE,KAAK,WAAW;QAAE,KAAK,SAAS;QAAE,KAAK,MAAM;KAAC;IAEzE,2CAA2C;IAC3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,cAAc;IAChB,GAAG;QAAC;QAAU;KAAc;IAE5B,6BAA6B;IAC7B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,OAAO;YACL,IAAI,eAAe,OAAO,EAAE;gBAC1B,aAAa,eAAe,OAAO;YACrC;QACF;IACF,GAAG,EAAE;IAEL,iDAAiD;IAEjD,MAAM,sBAAsB,CAAC;QAC3B,YAAY,CAAA,OAAQ,CAAC;gBAAE,GAAG,IAAI;gBAAE;YAAU,CAAC;IAC7C;IAEA,gEAAgE;IAEhE,MAAM,cAAc,CAAC;QACnB,MAAM,YAAY,IAAI,IAAI;QAC1B,IAAI,UAAU,GAAG,CAAC,YAAY;YAC5B,UAAU,MAAM,CAAC;QACnB,OAAO;YACL,UAAU,GAAG,CAAC;QAChB;QACA,kBAAkB;QAClB,sCAAsC;QACtC,cAAc;YAAE,GAAG,QAAQ;YAAE,QAAQ,MAAM,IAAI,CAAC;QAAW;IAC7D;IAEA,MAAM,kBAAkB,CAAC;QACvB,OAAQ,WAAW,IAAI;YACrB,KAAK;gBACH,MAAM,UAAU,SAAS,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,WAAW,UAAU;gBACnE,IAAI,SAAS;oBACX,oBAAoB,QAAQ,EAAE;gBAChC;gBACA;YACF,KAAK;gBACH,YAAY,WAAW,UAAU;gBACjC;YACF,KAAK;gBACH,YAAY,CAAA,OAAQ,CAAC;wBAAE,GAAG,IAAI;wBAAE,SAAS,WAAW,UAAU;oBAAC,CAAC;gBAChE;YACF,KAAK;gBAEH;QACJ;IACF;IAEA,MAAM,kBAAkB,CAAC;QACvB,MAAM,WAAsC;YAC1C,aAAa;YACb,OAAO;YACP,UAAU;YACV,UAAU;YACV,eAAe;YACf,cAAc;YACd,SAAS;YACT,cAAc;YACd,QAAQ;YACR,YAAY;YACZ,cAAc;YACd,QAAQ;YACR,SAAS;YACT,UAAU;YACV,YAAY;YACZ,WAAW;YACX,UAAU;YACV,YAAY;YACZ,QAAQ;YACR,SAAS;QACX;QACA,OAAO,QAAQ,CAAC,UAAU,IAAI;IAChC;IAEA,MAAM,qBAAqB,YAAY,MAAM,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK;IAC9D,MAAM,mBAAmB,YAAY,MAAM,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK;IAC5D,MAAM,qBAAqB,YAAY,MAAM,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK;IAC9D,mEAAmE;IAEnE,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAA+C;;;;;;0CAGhE,8OAAC;gCACC,OAAO,SAAS,WAAW;gCAC3B,UAAU,CAAC,IAAM,YAAY,CAAA,OAAQ,CAAC;4CAAE,GAAG,IAAI;4CAAE,aAAa,EAAE,MAAM,CAAC,KAAK;wCAAC,CAAC;gCAC9E,WAAU;gCACV,MAAM;gCACN,aAAY;;;;;;;;;;;;kCAKhB,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAA+C;;;;;;0CAGhE,8OAAC,8HAAA,CAAA,UAAe;gCACd,UAAU;gCACV,mBAAmB,SAAS,SAAS,IAAI;gCACzC,iBAAiB;gCACjB,aAAY;gCACZ,cAAc;gCACd,WAAU;;;;;;4BAEX,mBAAmB,MAAM,GAAG,mBAC3B,8OAAC;gCAAI,WAAU;0CACZ,mBAAmB,GAAG,CAAC,CAAC,YAAY,sBACnC,8OAAC;wCAEC,MAAK;wCACL,SAAS,IAAM,gBAAgB;wCAC/B,WAAU;;4CACX;4CACc,WAAW,UAAU;4CAAC;4CAAG,KAAK,KAAK,CAAC,WAAW,UAAU,GAAG;4CAAK;;uCALzE;;;;;;;;;;;;;;;;kCAef,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAA+C;;;;;;0CAGhE,8OAAC;gCAAI,WAAU;0CACZ,OAAO,GAAG,CAAC,CAAC;oCACX,MAAM,aAAa,gBAAgB,MAAM,KAAK;oCAC9C,MAAM,aAAa,eAAe,GAAG,CAAC,MAAM,IAAI;oCAChD,qBACE,8OAAC;wCAEC,MAAK;wCACL,SAAS,IAAM,YAAY,MAAM,IAAI;wCACrC,WAAW,CAAC,oFAAoF,EAC9F,aACI,kCACA,8DACJ;wCACF,OAAO,aAAa;4CAAE,iBAAiB;wCAAW,IAAI,CAAC;;0DAEvD,8OAAC;gDACC,WAAU;gDACV,OAAO;oDAAE,iBAAiB;gDAAW;;;;;;0DAEvC,8OAAC;0DAAM,MAAM,IAAI;;;;;;;uCAdZ,MAAM,EAAE;;;;;gCAiBnB;;;;;;4BAED,iBAAiB,MAAM,GAAG,mBACzB,8OAAC;gCAAI,WAAU;0CACZ,iBAAiB,GAAG,CAAC,CAAC,YAAY,sBACjC,8OAAC;wCAEC,MAAK;wCACL,SAAS,IAAM,gBAAgB;wCAC/B,WAAU;;4CACX;4CACe,WAAW,UAAU;4CAAC;4CAAG,KAAK,KAAK,CAAC,WAAW,UAAU,GAAG;4CAAK;;uCAL1E;;;;;;;;;;;;;;;;kCAaf,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAA+C;;;;;;0CAGhE,8OAAC;gCACC,MAAK;gCACL,OAAO,SAAS,SAAS;gCACzB,UAAU,CAAC,IAAM,YAAY,CAAA,OAAQ,CAAC;4CAAE,GAAG,IAAI;4CAAE,WAAW,EAAE,MAAM,CAAC,KAAK;wCAAC,CAAC;gCAC5E,WAAU;gCACV,aAAY;;;;;;0CAEd,8OAAC;gCAAE,WAAU;0CAA6B;;;;;;;;;;;;;;;;;;0BAO9C,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,MAAK;4BACL,SAAS;4BACT,UAAU,CAAC;4BACX,WAAW,CAAC,2FAA2F,EACrG,gBACI,uFACA,uEACJ;sCACH;;;;;;sCAGD,8OAAC;4BACC,MAAK;4BACL,SAAS;4BACT,UAAU,CAAC;4BACX,WAAW,CAAC,2FAA2F,EACrG,YACI,yEACA,uEACJ;sCACH;;;;;;;;;;;;;;;;;;;;;;;AAOX","debugId":null}},
    {"offset": {"line": 1529, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/KeyboardShortcuts.tsx"],"sourcesContent":["'use client'\n\ninterface KeyboardShortcutsProps {\n  onClose: () => void\n}\n\nexport default function KeyboardShortcuts({ onClose }: KeyboardShortcutsProps) {\n  const shortcuts = [\n    { key: 'Enter', description: 'Process current task' },\n    { key: 'S', description: 'Skip current task' },\n    { key: '?', description: 'Toggle this help' },\n    { key: 'Esc', description: 'Close this help' },\n    { key: 'Tab', description: 'Navigate between form fields' },\n    { key: '1-4', description: 'Set priority (P1-P4)' },\n  ]\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full p-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-lg font-semibold text-gray-900\">Keyboard Shortcuts</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 rounded\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n        \n        <div className=\"space-y-3\">\n          {shortcuts.map((shortcut, index) => (\n            <div key={index} className=\"flex items-center justify-between\">\n              <span className=\"text-sm text-gray-600\">{shortcut.description}</span>\n              <span className=\"kbd\">{shortcut.key}</span>\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"mt-6 pt-4 border-t border-gray-200\">\n          <p className=\"text-xs text-gray-500\">\n            Press <span className=\"kbd\">?</span> anytime to toggle this help\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAAA;;AAMe,SAAS,kBAAkB,EAAE,OAAO,EAA0B;IAC3E,MAAM,YAAY;QAChB;YAAE,KAAK;YAAS,aAAa;QAAuB;QACpD;YAAE,KAAK;YAAK,aAAa;QAAoB;QAC7C;YAAE,KAAK;YAAK,aAAa;QAAmB;QAC5C;YAAE,KAAK;YAAO,aAAa;QAAkB;QAC7C;YAAE,KAAK;YAAO,aAAa;QAA+B;QAC1D;YAAE,KAAK;YAAO,aAAa;QAAuB;KACnD;IAED,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAsC;;;;;;sCACpD,8OAAC;4BACC,SAAS;4BACT,WAAU;sCAEV,cAAA,8OAAC;gCAAI,WAAU;gCAAU,MAAK;gCAAO,QAAO;gCAAe,SAAQ;0CACjE,cAAA,8OAAC;oCAAK,eAAc;oCAAQ,gBAAe;oCAAQ,aAAY;oCAAI,GAAE;;;;;;;;;;;;;;;;;;;;;;8BAK3E,8OAAC;oBAAI,WAAU;8BACZ,UAAU,GAAG,CAAC,CAAC,UAAU,sBACxB,8OAAC;4BAAgB,WAAU;;8CACzB,8OAAC;oCAAK,WAAU;8CAAyB,SAAS,WAAW;;;;;;8CAC7D,8OAAC;oCAAK,WAAU;8CAAO,SAAS,GAAG;;;;;;;2BAF3B;;;;;;;;;;8BAOd,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAE,WAAU;;4BAAwB;0CAC7B,8OAAC;gCAAK,WAAU;0CAAM;;;;;;4BAAQ;;;;;;;;;;;;;;;;;;;;;;;AAMhD","debugId":null}},
    {"offset": {"line": 1688, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/ProgressIndicator.tsx"],"sourcesContent":["'use client'\n\ninterface ProgressIndicatorProps {\n  current: number\n  total: number\n  progress: number\n}\n\nexport default function ProgressIndicator({ current, total, progress }: ProgressIndicatorProps) {\n  return (\n    <div className=\"py-2\">\n      <div className=\"flex items-center justify-between mb-1\">\n        <span className=\"text-sm font-medium text-gray-700\">\n          Progress: {current} of {total}\n        </span>\n        <span className=\"text-sm text-gray-600\">\n          {Math.round(progress)}%\n        </span>\n      </div>\n      \n      <div className=\"w-full bg-gray-200 rounded-full h-2\">\n        <div\n          className=\"bg-todoist-blue h-2 rounded-full transition-all duration-300 ease-out\"\n          style={{ width: `${progress}%` }}\n        />\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAAA;;AAQe,SAAS,kBAAkB,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAA0B;IAC5F,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAK,WAAU;;4BAAoC;4BACvC;4BAAQ;4BAAK;;;;;;;kCAE1B,8OAAC;wBAAK,WAAU;;4BACb,KAAK,KAAK,CAAC;4BAAU;;;;;;;;;;;;;0BAI1B,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,WAAU;oBACV,OAAO;wBAAE,OAAO,GAAG,SAAS,CAAC,CAAC;oBAAC;;;;;;;;;;;;;;;;;AAKzC","debugId":null}},
    {"offset": {"line": 1761, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/ProjectSwitcher.tsx"],"sourcesContent":["'use client'\n\nimport { TodoistProject } from '@/lib/types'\nimport ProjectDropdown from './ProjectDropdown'\n\ninterface ProjectSwitcherProps {\n  projects: TodoistProject[]\n  selectedProjectId: string\n  onProjectChange: (projectId: string) => void\n  taskCount?: number\n}\n\nexport default function ProjectSwitcher({ \n  projects, \n  selectedProjectId, \n  onProjectChange,\n  taskCount = 0\n}: ProjectSwitcherProps) {\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border p-4 mb-6\">\n      <div className=\"flex items-center justify-between mb-3\">\n        <h3 className=\"text-sm font-medium text-gray-700\">Processing Project</h3>\n        <span className=\"text-xs text-gray-500\">\n          {taskCount} tasks\n        </span>\n      </div>\n      \n      <ProjectDropdown\n        projects={projects}\n        selectedProjectId={selectedProjectId}\n        onProjectChange={onProjectChange}\n        placeholder=\"Select project to process...\"\n        includeInbox={true}\n      />\n\n      <div className=\"mt-3 text-xs text-gray-500\">\n        💡 Select a project to process its tasks. Use keyboard shortcuts: S to skip, Enter to process.\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAYe,SAAS,gBAAgB,EACtC,QAAQ,EACR,iBAAiB,EACjB,eAAe,EACf,YAAY,CAAC,EACQ;IACrB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAoC;;;;;;kCAClD,8OAAC;wBAAK,WAAU;;4BACb;4BAAU;;;;;;;;;;;;;0BAIf,8OAAC,8HAAA,CAAA,UAAe;gBACd,UAAU;gBACV,mBAAmB;gBACnB,iBAAiB;gBACjB,aAAY;gBACZ,cAAc;;;;;;0BAGhB,8OAAC;gBAAI,WAAU;0BAA6B;;;;;;;;;;;;AAKlD","debugId":null}},
    {"offset": {"line": 1833, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/PriorityOverlay.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect } from 'react'\n\ninterface PriorityOverlayProps {\n  currentPriority: 1 | 2 | 3 | 4\n  onPrioritySelect: (priority: 1 | 2 | 3 | 4) => void\n  onClose: () => void\n  isVisible: boolean\n}\n\nexport default function PriorityOverlay({ currentPriority, onPrioritySelect, onClose, isVisible }: PriorityOverlayProps) {\n  // Convert API priority (1-4) to UI priority (P4-P1)\n  const getUIPriority = (apiPriority: number) => {\n    return 5 - apiPriority // 4→P1, 3→P2, 2→P3, 1→P4\n  }\n\n  const getPriorityColor = (apiPriority: number) => {\n    const uiPriority = getUIPriority(apiPriority)\n    switch (uiPriority) {\n      case 1: return 'bg-red-500 border-red-500 text-white'    // P1 = Urgent\n      case 2: return 'bg-orange-500 border-orange-500 text-white' // P2 = High\n      case 3: return 'bg-blue-500 border-blue-500 text-white'  // P3 = Medium\n      default: return 'bg-gray-500 border-gray-500 text-white' // P4 = Normal\n    }\n  }\n\n  const getPriorityLabel = (apiPriority: number) => {\n    const uiPriority = getUIPriority(apiPriority)\n    switch (uiPriority) {\n      case 1: return 'Urgent'  // P1\n      case 2: return 'High'    // P2\n      case 3: return 'Medium'  // P3\n      default: return 'Normal' // P4\n    }\n  }\n\n  // Handle keyboard input for priority selection\n  useEffect(() => {\n    if (!isVisible) return\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      e.preventDefault()\n      e.stopPropagation()\n\n      switch (e.key) {\n        case '1':\n          onPrioritySelect(4) // P1 = API priority 4\n          break\n        case '2':\n          onPrioritySelect(3) // P2 = API priority 3\n          break\n        case '3':\n          onPrioritySelect(2) // P3 = API priority 2\n          break\n        case '4':\n          onPrioritySelect(1) // P4 = API priority 1\n          break\n        case 'Escape':\n          onClose()\n          break\n      }\n    }\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (e.key === 'p' || e.key === 'P') {\n        onClose()\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyDown)\n    window.addEventListener('keyup', handleKeyUp)\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [isVisible, onPrioritySelect, onClose])\n\n  if (!isVisible) return null\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-2xl p-8 shadow-2xl max-w-lg w-full mx-4\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Set Priority</h2>\n          <p className=\"text-gray-600 mb-8\">Press 1, 2, 3, or 4 to select priority</p>\n          \n          <div className=\"grid grid-cols-2 gap-4\">\n            {[4, 3, 2, 1].map((apiPriority) => {\n              const uiPriority = getUIPriority(apiPriority)\n              const isSelected = currentPriority === apiPriority\n              \n              return (\n                <button\n                  key={apiPriority}\n                  onClick={() => onPrioritySelect(apiPriority as 1 | 2 | 3 | 4)}\n                  className={`\n                    p-6 rounded-xl border-2 font-bold text-lg transition-all duration-200 transform\n                    ${isSelected \n                      ? `${getPriorityColor(apiPriority)} scale-105 shadow-lg` \n                      : 'bg-gray-100 border-gray-300 text-gray-700 hover:bg-gray-200 hover:scale-102'\n                    }\n                  `}\n                >\n                  <div className=\"text-3xl font-black mb-2\">P{uiPriority}</div>\n                  <div className=\"text-sm opacity-90\">{getPriorityLabel(apiPriority)}</div>\n                  <div className=\"text-xs mt-2 opacity-75\">Press {uiPriority}</div>\n                </button>\n              )\n            })}\n          </div>\n          \n          <div className=\"mt-8 text-sm text-gray-500\">\n            Release <kbd className=\"px-2 py-1 bg-gray-100 rounded\">P</kbd> key to close\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAWe,SAAS,gBAAgB,EAAE,eAAe,EAAE,gBAAgB,EAAE,OAAO,EAAE,SAAS,EAAwB;IACrH,oDAAoD;IACpD,MAAM,gBAAgB,CAAC;QACrB,OAAO,IAAI,YAAY,yBAAyB;;IAClD;IAEA,MAAM,mBAAmB,CAAC;QACxB,MAAM,aAAa,cAAc;QACjC,OAAQ;YACN,KAAK;gBAAG,OAAO,uCAA0C,cAAc;;YACvE,KAAK;gBAAG,OAAO,6CAA6C,YAAY;;YACxE,KAAK;gBAAG,OAAO,yCAA0C,cAAc;;YACvE;gBAAS,OAAO,yCAAyC,cAAc;;QACzE;IACF;IAEA,MAAM,mBAAmB,CAAC;QACxB,MAAM,aAAa,cAAc;QACjC,OAAQ;YACN,KAAK;gBAAG,OAAO,SAAU,KAAK;;YAC9B,KAAK;gBAAG,OAAO,OAAU,KAAK;;YAC9B,KAAK;gBAAG,OAAO,SAAU,KAAK;;YAC9B;gBAAS,OAAO,SAAS,KAAK;;QAChC;IACF;IAEA,+CAA+C;IAC/C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,WAAW;QAEhB,MAAM,gBAAgB,CAAC;YACrB,EAAE,cAAc;YAChB,EAAE,eAAe;YAEjB,OAAQ,EAAE,GAAG;gBACX,KAAK;oBACH,iBAAiB,GAAG,sBAAsB;;oBAC1C;gBACF,KAAK;oBACH,iBAAiB,GAAG,sBAAsB;;oBAC1C;gBACF,KAAK;oBACH,iBAAiB,GAAG,sBAAsB;;oBAC1C;gBACF,KAAK;oBACH,iBAAiB,GAAG,sBAAsB;;oBAC1C;gBACF,KAAK;oBACH;oBACA;YACJ;QACF;QAEA,MAAM,cAAc,CAAC;YACnB,IAAI,EAAE,GAAG,KAAK,OAAO,EAAE,GAAG,KAAK,KAAK;gBAClC;YACF;QACF;QAEA,OAAO,gBAAgB,CAAC,WAAW;QACnC,OAAO,gBAAgB,CAAC,SAAS;QAEjC,OAAO;YACL,OAAO,mBAAmB,CAAC,WAAW;YACtC,OAAO,mBAAmB,CAAC,SAAS;QACtC;IACF,GAAG;QAAC;QAAW;QAAkB;KAAQ;IAEzC,IAAI,CAAC,WAAW,OAAO;IAEvB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAwC;;;;;;kCACtD,8OAAC;wBAAE,WAAU;kCAAqB;;;;;;kCAElC,8OAAC;wBAAI,WAAU;kCACZ;4BAAC;4BAAG;4BAAG;4BAAG;yBAAE,CAAC,GAAG,CAAC,CAAC;4BACjB,MAAM,aAAa,cAAc;4BACjC,MAAM,aAAa,oBAAoB;4BAEvC,qBACE,8OAAC;gCAEC,SAAS,IAAM,iBAAiB;gCAChC,WAAW,CAAC;;oBAEV,EAAE,aACE,GAAG,iBAAiB,aAAa,oBAAoB,CAAC,GACtD,8EACH;kBACH,CAAC;;kDAED,8OAAC;wCAAI,WAAU;;4CAA2B;4CAAE;;;;;;;kDAC5C,8OAAC;wCAAI,WAAU;kDAAsB,iBAAiB;;;;;;kDACtD,8OAAC;wCAAI,WAAU;;4CAA0B;4CAAO;;;;;;;;+BAZ3C;;;;;wBAeX;;;;;;kCAGF,8OAAC;wBAAI,WAAU;;4BAA6B;0CAClC,8OAAC;gCAAI,WAAU;0CAAgC;;;;;;4BAAO;;;;;;;;;;;;;;;;;;;;;;;AAM1E","debugId":null}},
    {"offset": {"line": 2050, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/TaskProcessor.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, useCallback } from 'react'\nimport { TodoistTask, TodoistProject, TodoistLabel, ProcessingState, TaskUpdate } from '@/lib/types'\nimport { generateMockSuggestions } from '@/lib/mock-data'\nimport { suggestionsCache } from '@/lib/suggestions-cache'\nimport TaskCard from './TaskCard'\nimport TaskForm from './TaskForm'\nimport KeyboardShortcuts from './KeyboardShortcuts'\nimport ProgressIndicator from './ProgressIndicator'\nimport ProjectSwitcher from './ProjectSwitcher'\nimport PriorityOverlay from './PriorityOverlay'\nimport ProjectSelectionOverlay from './ProjectSelectionOverlay'\nimport LabelSelectionOverlay from './LabelSelectionOverlay'\nimport ProjectSuggestions from './ProjectSuggestions'\n\nexport default function TaskProcessor() {\n  const [state, setState] = useState<ProcessingState>({\n    currentTask: null,\n    queuedTasks: [],\n    processedTasks: [],\n    skippedTasks: [],\n  })\n  \n  const [projects, setProjects] = useState<TodoistProject[]>([])\n  const [labels, setLabels] = useState<TodoistLabel[]>([])\n  const [projectHierarchy, setProjectHierarchy] = useState<any>(null)\n  const [showShortcuts, setShowShortcuts] = useState(false)\n  const [loading, setLoading] = useState(true)\n  const [loadingTasks, setLoadingTasks] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [selectedProjectId, setSelectedProjectId] = useState<string>('')\n  const [allTasks, setAllTasks] = useState<TodoistTask[]>([])\n  const [taskKey, setTaskKey] = useState(0) // Force re-render of TaskForm\n  const [showPriorityOverlay, setShowPriorityOverlay] = useState(false)\n  const [showProjectOverlay, setShowProjectOverlay] = useState(false)\n  const [showLabelOverlay, setShowLabelOverlay] = useState(false)\n\n  // Load initial data (projects and labels)\n  useEffect(() => {\n    async function loadInitialData() {\n      try {\n        setLoading(true)\n        setError(null)\n\n        // Fetch projects and labels\n        const [projectsRes, labelsRes] = await Promise.all([\n          fetch('/api/todoist/projects'),\n          fetch('/api/todoist/labels'),\n        ])\n\n        if (!projectsRes.ok || !labelsRes.ok) {\n          throw new Error('Failed to fetch data from Todoist API')\n        }\n\n        const [projectsData, labelsData] = await Promise.all([\n          projectsRes.json(),\n          labelsRes.json(),\n        ])\n\n        setProjects(projectsData)\n        setLabels(labelsData)\n        \n        // Set default to actual inbox project if it exists\n        const inboxProject = projectsData.find((p: any) => p.isInboxProject)\n        setSelectedProjectId(inboxProject?.id || 'inbox')\n      } catch (err) {\n        console.error('Error loading initial data:', err)\n        setError(err instanceof Error ? err.message : 'Failed to load data')\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    loadInitialData()\n  }, [])\n\n  // Load tasks for selected project\n  const loadProjectTasks = useCallback(async (projectId: string) => {\n    if (!projectId) return\n    \n    try {\n      setLoadingTasks(true)\n      setError(null)\n      console.log('Loading tasks for project:', projectId)\n      \n      const tasksRes = await fetch(`/api/todoist/tasks?projectId=${projectId}`)\n      \n      if (!tasksRes.ok) {\n        throw new Error('Failed to fetch tasks')\n      }\n\n      const tasksData = await tasksRes.json()\n      console.log('Loaded tasks:', tasksData)\n      setAllTasks(tasksData)\n\n      // Set up task processing queue and force form re-render\n      if (tasksData.length > 0) {\n        setState({\n          currentTask: tasksData[0],\n          queuedTasks: tasksData.slice(1),\n          processedTasks: [],\n          skippedTasks: [],\n        })\n        setTaskKey(prev => prev + 1) // Force TaskForm to re-render with new task\n      } else {\n        setState({\n          currentTask: null,\n          queuedTasks: [],\n          processedTasks: [],\n          skippedTasks: [],\n        })\n      }\n    } catch (err) {\n      console.error('Error loading project tasks:', err)\n      setError(err instanceof Error ? err.message : 'Failed to load tasks')\n    } finally {\n      setLoadingTasks(false)\n    }\n  }, [])\n\n  // Load tasks when project changes\n  useEffect(() => {\n    if (projects.length > 0 && selectedProjectId) {\n      loadProjectTasks(selectedProjectId)\n    }\n  }, [selectedProjectId, projects.length, loadProjectTasks])\n  \n  // Update task key when current task changes to force form re-render\n  const moveToNext = useCallback(() => {\n    setState(prev => {\n      const nextTask = prev.queuedTasks[0] || null\n      const remainingQueue = prev.queuedTasks.slice(1)\n      \n      // Force form re-render when task changes\n      if (nextTask) {\n        setTaskKey(prevKey => prevKey + 1)\n      }\n      \n      return {\n        ...prev,\n        currentTask: nextTask,\n        queuedTasks: remainingQueue,\n      }\n    })\n  }, [])\n\n  const autoSaveTask = useCallback(async (taskId: string, updates: TaskUpdate) => {\n    try {\n      console.log('TaskProcessor.autoSaveTask called with:', { taskId, updates })\n      \n      // Update the task via API\n      const response = await fetch(`/api/todoist/tasks/${taskId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updates),\n      })\n\n      console.log('API Response status:', response.status)\n      \n      if (!response.ok) {\n        const errorData = await response.json()\n        console.error('API Response error:', errorData)\n        throw new Error(`Failed to update task: ${errorData.error || response.statusText}`)\n      }\n\n      const responseData = await response.json()\n      console.log('API Response data:', responseData)\n    } catch (err) {\n      console.error('Error auto-saving task:', err)\n      setError(err instanceof Error ? err.message : 'Failed to auto-save task')\n    }\n  }, [])\n\n  const handleContentChange = useCallback(async (newContent: string) => {\n    if (state.currentTask) {\n      await autoSaveTask(state.currentTask.id, { content: newContent })\n    }\n  }, [state.currentTask, autoSaveTask])\n\n  const handleNext = useCallback(() => {\n    if (!state.currentTask) return\n    \n    setState(prev => ({\n      ...prev,\n      processedTasks: [...prev.processedTasks, prev.currentTask!.id],\n    }))\n    \n    moveToNext()\n  }, [state.currentTask, moveToNext])\n\n  const handlePrioritySelect = useCallback((priority: 1 | 2 | 3 | 4) => {\n    if (state.currentTask) {\n      // Update the task immediately in the UI\n      setState(prev => ({\n        ...prev,\n        currentTask: prev.currentTask ? { ...prev.currentTask, priority } : null\n      }))\n      \n      // Queue the auto-save\n      autoSaveTask(state.currentTask.id, { priority })\n    }\n    setShowPriorityOverlay(false)\n  }, [state.currentTask, autoSaveTask])\n\n  const handleProjectSelect = useCallback((projectId: string) => {\n    if (state.currentTask) {\n      // Update the task immediately in the UI\n      setState(prev => ({\n        ...prev,\n        currentTask: prev.currentTask ? { ...prev.currentTask, projectId } : null\n      }))\n      \n      // Queue the auto-save\n      autoSaveTask(state.currentTask.id, { projectId })\n    }\n    setShowProjectOverlay(false)\n  }, [state.currentTask, autoSaveTask])\n\n  const handleLabelsChange = useCallback((labels: string[]) => {\n    if (state.currentTask) {\n      // Update the task immediately in the UI\n      setState(prev => ({\n        ...prev,\n        currentTask: prev.currentTask ? { ...prev.currentTask, labels } : null\n      }))\n      \n      // Queue the auto-save\n      autoSaveTask(state.currentTask.id, { labels })\n    }\n  }, [state.currentTask, autoSaveTask])\n\n  const handleDescriptionChange = useCallback(async (newDescription: string) => {\n    if (state.currentTask) {\n      // Invalidate suggestions cache since description changed\n      suggestionsCache.invalidateTask(state.currentTask.id)\n      \n      // Update the task immediately in the UI\n      setState(prev => ({\n        ...prev,\n        currentTask: prev.currentTask ? { ...prev.currentTask, description: newDescription } : null\n      }))\n      \n      await autoSaveTask(state.currentTask.id, { description: newDescription })\n    }\n  }, [state.currentTask, autoSaveTask])\n\n  const handleLabelRemove = useCallback((labelName: string) => {\n    if (state.currentTask) {\n      const newLabels = state.currentTask.labels.filter(l => l !== labelName)\n      handleLabelsChange(newLabels)\n    }\n  }, [state.currentTask, handleLabelsChange])\n\n  const navigateToNextTask = useCallback(() => {\n    if (!state.currentTask) return\n    \n    setState(prev => ({\n      ...prev,\n      processedTasks: [...prev.processedTasks, prev.currentTask!.id],\n    }))\n    \n    moveToNext()\n  }, [state.currentTask, moveToNext])\n\n  const navigateToPrevTask = useCallback(() => {\n    if (state.processedTasks.length === 0) return\n    \n    // Move the last processed task back to current\n    setState(prev => {\n      const lastProcessedId = prev.processedTasks[prev.processedTasks.length - 1]\n      const lastProcessedTask = allTasks.find(task => task.id === lastProcessedId)\n      \n      if (!lastProcessedTask) return prev\n      \n      return {\n        ...prev,\n        currentTask: lastProcessedTask,\n        queuedTasks: prev.currentTask ? [prev.currentTask, ...prev.queuedTasks] : prev.queuedTasks,\n        processedTasks: prev.processedTasks.slice(0, -1)\n      }\n    })\n    \n    setTaskKey(prev => prev + 1) // Force re-render\n  }, [state.processedTasks, allTasks])\n\n  const skipTask = useCallback(() => {\n    if (!state.currentTask) return\n    \n    setState(prev => ({\n      ...prev,\n      skippedTasks: [...prev.skippedTasks, prev.currentTask!.id],\n    }))\n    \n    moveToNext()\n  }, [state.currentTask, moveToNext])\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      // Don't handle shortcuts when overlays are open - they handle their own keys\n      if (showPriorityOverlay || showProjectOverlay || showLabelOverlay) {\n        return\n      }\n\n      // Only handle shortcuts when not typing in an input or when dropdowns are open\n      if (e.target instanceof HTMLInputElement || \n          e.target instanceof HTMLTextAreaElement ||\n          document.querySelector('[role=\"listbox\"]') ||\n          document.querySelector('.dropdown-open')) {\n        return\n      }\n\n      switch (e.key) {\n        case 'p':\n        case 'P':\n          e.preventDefault()\n          setShowPriorityOverlay(true)\n          break\n        case '#':\n          e.preventDefault()\n          setShowProjectOverlay(true)\n          break\n        case '@':\n          e.preventDefault()\n          setShowLabelOverlay(true)\n          break\n        case 'Enter':\n          e.preventDefault()\n          navigateToNextTask()\n          break\n        case '?':\n          e.preventDefault()\n          setShowShortcuts(!showShortcuts)\n          break\n        case 'Escape':\n          setShowShortcuts(false)\n          setShowPriorityOverlay(false)\n          setShowProjectOverlay(false)\n          setShowLabelOverlay(false)\n          break\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyDown)\n    return () => window.removeEventListener('keydown', handleKeyDown)\n  }, [navigateToNextTask, showShortcuts, showPriorityOverlay, showProjectOverlay, showLabelOverlay])\n\n  const totalTasks = allTasks.length\n  const completedTasks = state.processedTasks.length + state.skippedTasks.length\n  const progress = totalTasks > 0 ? (completedTasks / totalTasks) * 100 : 0\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-todoist-blue mx-auto\"></div>\n          <h1 className=\"text-2xl font-bold text-gray-900 mt-4\">Loading Todoist Data...</h1>\n          <p className=\"text-gray-600\">Fetching your inbox tasks, projects, and labels</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"text-6xl mb-4\">❌</div>\n          <h1 className=\"text-3xl font-bold text-red-600 mb-2\">Error Loading Data</h1>\n          <p className=\"text-gray-600 mb-4\">{error}</p>\n          <button\n            onClick={() => window.location.reload()}\n            className=\"px-4 py-2 bg-todoist-blue text-white rounded-md hover:bg-blue-600 transition-colors\"\n          >\n            Retry\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  if (!state.currentTask && state.queuedTasks.length === 0 && !loading) {\n    const projectName = selectedProjectId === 'inbox' ? 'Inbox' : \n                       projects.find(p => p.id === selectedProjectId)?.name || 'Project'\n    \n    return (\n      <div className=\"min-h-screen p-4\">\n        <div className=\"max-w-4xl mx-auto\">\n          {/* Header */}\n          <div className=\"mb-8\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h1 className=\"text-3xl font-bold text-gray-900\">Task Processor</h1>\n              <button\n                onClick={() => setShowShortcuts(!showShortcuts)}\n                className=\"px-3 py-1 text-sm bg-gray-100 hover:bg-gray-200 rounded-md transition-colors\"\n              >\n                Shortcuts <span className=\"kbd\">?</span>\n              </button>\n            </div>\n            \n            {/* Project Switcher */}\n            <ProjectSwitcher\n              projects={projects}\n              selectedProjectId={selectedProjectId}\n              onProjectChange={setSelectedProjectId}\n              taskCount={totalTasks}\n            />\n            \n            {/* Loading State for Task Switching */}\n            {loadingTasks && (\n              <div className=\"bg-white rounded-lg shadow-sm border p-4 mb-6\">\n                <div className=\"flex items-center justify-center space-x-3\">\n                  <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-todoist-blue\"></div>\n                  <span className=\"text-gray-600\">Loading tasks...</span>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Empty State */}\n          {!loadingTasks && (\n            <div className=\"flex items-center justify-center\" style={{ minHeight: '50vh' }}>\n              <div className=\"text-center\">\n                <div className=\"text-6xl mb-4\">\n                  {totalTasks === 0 ? '📭' : '🎉'}\n                </div>\n                <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n                  {totalTasks === 0 ? `${projectName} is Empty` : `${projectName} Complete!`}\n                </h1>\n                <p className=\"text-gray-600 mb-4\">\n                  {totalTasks === 0 \n                    ? `No tasks found in ${projectName}. Try selecting a different project.`\n                    : 'All tasks have been processed.'\n                  }\n                </p>\n                {totalTasks > 0 && (\n                  <div className=\"text-sm text-gray-500\">\n                    Processed: {state.processedTasks.length} • Skipped: {state.skippedTasks.length}\n                  </div>\n                )}\n                <button\n                  onClick={() => loadProjectTasks(selectedProjectId)}\n                  className=\"mt-4 px-4 py-2 bg-todoist-blue text-white rounded-md hover:bg-blue-600 transition-colors\"\n                >\n                  Refresh Tasks\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n        \n        {/* Keyboard Shortcuts Modal */}\n        {showShortcuts && (\n          <KeyboardShortcuts onClose={() => setShowShortcuts(false)} />\n        )}\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen p-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h1 className=\"text-3xl font-bold text-gray-900\">Task Processor</h1>\n            <button\n              onClick={() => setShowShortcuts(!showShortcuts)}\n              className=\"px-3 py-1 text-sm bg-gray-100 hover:bg-gray-200 rounded-md transition-colors\"\n            >\n              Shortcuts <span className=\"kbd\">?</span>\n            </button>\n          </div>\n          \n          {/* Project Switcher */}\n          <ProjectSwitcher\n            projects={projects}\n            selectedProjectId={selectedProjectId}\n            onProjectChange={setSelectedProjectId}\n            taskCount={totalTasks}\n          />\n          \n          {/* Loading State for Task Switching */}\n          {loadingTasks && (\n            <div className=\"bg-white rounded-lg shadow-sm border p-4 mb-6\">\n              <div className=\"flex items-center justify-center space-x-3\">\n                <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-todoist-blue\"></div>\n                <span className=\"text-gray-600\">Loading tasks...</span>\n              </div>\n            </div>\n          )}\n          \n          {totalTasks > 0 && (\n            <ProgressIndicator\n              current={completedTasks + 1}\n              total={totalTasks}\n              progress={progress}\n            />\n          )}\n        </div>\n\n        {/* Main Processing Area */}\n        {state.currentTask && !loadingTasks && (\n          <div className=\"space-y-6\">\n            {/* Full-width Task Card */}\n            <TaskCard \n              task={state.currentTask} \n              projects={projects} \n              labels={labels} \n              onContentChange={handleContentChange}\n              onDescriptionChange={handleDescriptionChange}\n              onProjectClick={() => setShowProjectOverlay(true)}\n              onPriorityClick={() => setShowPriorityOverlay(true)}\n              onLabelAdd={() => setShowLabelOverlay(true)}\n              onLabelRemove={handleLabelRemove}\n            />\n\n            {/* Task Form Controls */}\n            <TaskForm\n              key={taskKey} // Force re-render when task changes\n              task={state.currentTask}\n              projects={projects}\n              labels={labels}\n              suggestions={generateMockSuggestions(state.currentTask.content)}\n              onAutoSave={(updates) => autoSaveTask(state.currentTask!.id, updates)}\n              onNext={navigateToNextTask}\n              onPrevious={navigateToPrevTask}\n              canGoNext={state.queuedTasks.length > 0}\n              canGoPrevious={state.processedTasks.length > 0}\n            />\n          </div>\n        )}\n\n        {/* Queue Preview */}\n        {state.queuedTasks.length > 0 && (\n          <div className=\"mt-8 p-4 bg-gray-50 rounded-lg\">\n            <h3 className=\"text-sm font-medium text-gray-700 mb-3\">\n              Next in queue ({state.queuedTasks.length} remaining)\n            </h3>\n            <div className=\"space-y-2\">\n              {state.queuedTasks.slice(0, 3).map((task, index) => (\n                <div key={task.id} className=\"text-sm text-gray-600 truncate\">\n                  {index + 1}. {task.content}\n                </div>\n              ))}\n              {state.queuedTasks.length > 3 && (\n                <div className=\"text-sm text-gray-400\">\n                  + {state.queuedTasks.length - 3} more...\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Keyboard Shortcuts Modal */}\n      {showShortcuts && (\n        <KeyboardShortcuts onClose={() => setShowShortcuts(false)} />\n      )}\n\n      {/* Priority Overlay */}\n      {state.currentTask && (\n        <PriorityOverlay\n          currentPriority={state.currentTask.priority}\n          onPrioritySelect={handlePrioritySelect}\n          onClose={() => setShowPriorityOverlay(false)}\n          isVisible={showPriorityOverlay}\n        />\n      )}\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}