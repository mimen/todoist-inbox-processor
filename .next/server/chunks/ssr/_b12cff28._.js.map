{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/EnhancedProjectCard.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useCallback, useRef, useEffect } from 'react'\nimport { TodoistProject } from '@/lib/types'\n\ninterface ProjectWithMetadata extends TodoistProject {\n  description: string\n  category: 'area' | 'project' | null\n  priority: 1 | 2 | 3 | 4 | null\n  due?: { date: string; string: string }\n  deadline?: { date: string; string: string }\n}\n\ninterface EnhancedProjectCardProps {\n  project: ProjectWithMetadata\n  nestingDepth?: number\n  isCollapsed?: boolean\n  onMetadataChange?: (projectId: string, metadata: {\n    description?: string\n    category?: 'area' | 'project' | null\n    priority?: 1 | 2 | 3 | 4 | null\n    dueString?: string\n    deadline?: string\n  }) => void\n}\n\nexport default function EnhancedProjectCard({ \n  project, \n  nestingDepth = 0, \n  isCollapsed = false,\n  onMetadataChange \n}: EnhancedProjectCardProps) {\n  const [description, setDescription] = useState(project.description)\n  const [category, setCategory] = useState<'area' | 'project' | null>(project.category)\n  const [priority, setPriority] = useState<1 | 2 | 3 | 4 | null>(project.priority)\n  const [dueString, setDueString] = useState(project.due?.string || '')\n  const [deadline, setDeadline] = useState(project.deadline?.string || '')\n  const [saveTimeout, setSaveTimeout] = useState<NodeJS.Timeout | null>(null)\n  const [isGeneratingSuggestion, setIsGeneratingSuggestion] = useState(false)\n  const [suggestionError, setSuggestionError] = useState<string | null>(null)\n  const descriptionRef = useRef<HTMLTextAreaElement>(null)\n\n  // Update local state when project changes\n  useEffect(() => {\n    setDescription(project.description)\n    setCategory(project.category)\n    setPriority(project.priority)\n    setDueString(project.due?.string || '')\n    setDeadline(project.deadline?.string || '')\n  }, [project])\n\n  // Auto-save with debounce\n  const debouncedSave = useCallback((metadata: any) => {\n    if (saveTimeout) {\n      clearTimeout(saveTimeout)\n    }\n    \n    const timeout = setTimeout(() => {\n      if (onMetadataChange) {\n        onMetadataChange(project.id, metadata)\n      }\n    }, 1000)\n    \n    setSaveTimeout(timeout)\n  }, [saveTimeout, project.id, onMetadataChange])\n\n  const handleDescriptionChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const newDescription = e.target.value\n    setDescription(newDescription)\n    debouncedSave({ description: newDescription })\n  }\n\n  const handleCategoryChange = (newCategory: 'area' | 'project' | null) => {\n    setCategory(newCategory)\n    debouncedSave({ category: newCategory })\n  }\n\n  const handlePriorityChange = (newPriority: 1 | 2 | 3 | 4 | null) => {\n    setPriority(newPriority)\n    debouncedSave({ priority: newPriority })\n  }\n\n  const handleDueChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newDueString = e.target.value\n    setDueString(newDueString)\n    debouncedSave({ dueString: newDueString })\n  }\n\n  const handleDeadlineChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newDeadline = e.target.value\n    setDeadline(newDeadline)\n    debouncedSave({ deadline: newDeadline })\n  }\n\n  const generateSuggestion = useCallback(async () => {\n    if (isGeneratingSuggestion) return\n    \n    setIsGeneratingSuggestion(true)\n    setSuggestionError(null)\n    \n    try {\n      const response = await fetch(`/api/projects/${project.id}/suggest-description`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          currentDescription: description,\n        }),\n      })\n\n      if (!response.ok) {\n        throw new Error('Failed to generate suggestion')\n      }\n\n      const data = await response.json()\n      setDescription(data.suggestion)\n      debouncedSave({ description: data.suggestion })\n    } catch (err) {\n      console.error('Error generating suggestion:', err)\n      setSuggestionError(err instanceof Error ? err.message : 'Failed to generate suggestion')\n    } finally {\n      setIsGeneratingSuggestion(false)\n    }\n  }, [project.id, description, debouncedSave, isGeneratingSuggestion])\n\n  // Auto-resize textarea\n  useEffect(() => {\n    const adjustHeight = () => {\n      if (descriptionRef.current) {\n        descriptionRef.current.style.height = 'auto'\n        descriptionRef.current.style.height = `${descriptionRef.current.scrollHeight}px`\n      }\n    }\n    adjustHeight()\n  }, [description])\n\n  const getTodoistColor = (colorName: string) => {\n    const colorMap: { [key: string]: string } = {\n      'berry_red': '#b8256f',\n      'red': '#db4035',\n      'orange': '#ff9933',\n      'yellow': '#fad000',\n      'olive_green': '#afb83b',\n      'lime_green': '#7ecc49',\n      'green': '#299438',\n      'mint_green': '#6accbc',\n      'teal': '#158fad',\n      'sky_blue': '#14aaf5',\n      'light_blue': '#96c3eb',\n      'blue': '#4073ff',\n      'grape': '#884dff',\n      'violet': '#af38eb',\n      'lavender': '#eb96eb',\n      'magenta': '#e05194',\n      'salmon': '#ff8d85',\n      'charcoal': '#808080',\n      'grey': '#b8b8b8',\n      'taupe': '#ccac93'\n    }\n    return colorMap[colorName] || '#299fe6'\n  }\n\n  const getPriorityColor = (priority: number) => {\n    switch (priority) {\n      case 4: return 'text-red-600 bg-red-50 border-red-200'\n      case 3: return 'text-yellow-600 bg-yellow-50 border-yellow-200'\n      case 2: return 'text-blue-600 bg-blue-50 border-blue-200'\n      case 1: return 'text-gray-600 bg-gray-50 border-gray-200'\n      default: return 'text-gray-400 bg-gray-50 border-gray-200'\n    }\n  }\n\n  const getCategoryColor = (category: string | null) => {\n    switch (category) {\n      case 'area': return 'text-purple-600 bg-purple-50 border-purple-200'\n      case 'project': return 'text-green-600 bg-green-50 border-green-200'\n      default: return 'text-gray-400 bg-gray-50 border-gray-200'\n    }\n  }\n\n  const getPriorityDisplayName = (priority: number) => {\n    // Map internal priority values to display names\n    // Internal: 4=P1, 3=P2, 2=P3, 1=P4\n    switch (priority) {\n      case 4: return 'P1'\n      case 3: return 'P2'\n      case 2: return 'P3'\n      case 1: return 'P4'\n      default: return `P${priority}`\n    }\n  }\n\n  const projectColor = getTodoistColor(project.color)\n  const isNested = nestingDepth > 0\n  const leftMargin = nestingDepth * 32 // 32px per level of nesting\n\n  return (\n    <div \n      className={`bg-white rounded-lg shadow-sm border transition-all hover:shadow-md ${isNested ? 'border-l-4' : ''} ${isCollapsed ? 'p-4' : 'p-6'}`}\n      style={{ \n        marginLeft: `${leftMargin}px`,\n        ...(isNested ? { borderLeftColor: projectColor } : {})\n      }}>\n      \n      {/* Project Header */}\n      <div className={`flex items-center gap-3 ${isCollapsed ? 'mb-0' : 'mb-4'}`}>\n        {/* Nesting indicator */}\n        {isNested && (\n          <div className=\"flex items-center\">\n            {Array.from({ length: nestingDepth }, (_, i) => (\n              <div\n                key={i}\n                className=\"w-0.5 h-4 bg-gray-300 mr-2\"\n                style={{ backgroundColor: i === nestingDepth - 1 ? projectColor : '#e5e7eb' }}\n              />\n            ))}\n          </div>\n        )}\n        \n        <div \n          className=\"w-4 h-4 rounded-full flex-shrink-0\"\n          style={{ backgroundColor: projectColor }}\n        ></div>\n        <h2 className=\"text-xl font-semibold text-gray-900 flex-1\">\n          {project.name}\n        </h2>\n        \n        {/* Badges */}\n        <div className=\"flex items-center gap-2\">\n          {category && (\n            <span className={`px-2 py-1 text-xs font-medium rounded-md border ${getCategoryColor(category)}`}>\n              {category === 'area' ? 'Area of Responsibility' : 'Project'}\n            </span>\n          )}\n          {priority && (\n            <span className={`px-2 py-1 text-xs font-medium rounded-md border ${getPriorityColor(priority)}`}>\n              {getPriorityDisplayName(priority)}\n            </span>\n          )}\n          {nestingDepth > 0 && (\n            <span className=\"px-2 py-1 text-xs font-medium rounded-md bg-purple-50 text-purple-700 border border-purple-200\">\n              Level {nestingDepth}\n            </span>\n          )}\n          {project.isInboxProject && (\n            <span className=\"px-2 py-1 text-xs font-medium rounded-md bg-blue-50 text-blue-700 border border-blue-200\">\n              Inbox\n            </span>\n          )}\n        </div>\n      </div>\n\n      {/* Expanded Content - Only show when not collapsed */}\n      {!isCollapsed && (\n        <>\n          {/* Metadata Section */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n        {/* Category Selection */}\n        <div>\n          <label className=\"text-sm font-medium text-gray-700 mb-2 block\">\n            Type\n          </label>\n          <div className=\"flex gap-2\">\n            <button\n              onClick={() => handleCategoryChange(category === 'area' ? null : 'area')}\n              className={`px-3 py-1 text-xs rounded-md border transition-colors ${\n                category === 'area' \n                  ? 'bg-purple-100 text-purple-700 border-purple-300' \n                  : 'bg-gray-50 text-gray-600 border-gray-200 hover:bg-gray-100'\n              }`}\n            >\n              Area of Responsibility\n            </button>\n            <button\n              onClick={() => handleCategoryChange(category === 'project' ? null : 'project')}\n              className={`px-3 py-1 text-xs rounded-md border transition-colors ${\n                category === 'project' \n                  ? 'bg-green-100 text-green-700 border-green-300' \n                  : 'bg-gray-50 text-gray-600 border-gray-200 hover:bg-gray-100'\n              }`}\n            >\n              Project\n            </button>\n          </div>\n        </div>\n\n        {/* Priority Selection */}\n        <div>\n          <label className=\"text-sm font-medium text-gray-700 mb-2 block\">\n            Priority\n          </label>\n          <div className=\"flex gap-1\">\n            {[4, 3, 2, 1].map((p) => (\n              <button\n                key={p}\n                onClick={() => handlePriorityChange(priority === p ? null : p as 1 | 2 | 3 | 4)}\n                className={`px-2 py-1 text-xs rounded border transition-colors ${\n                  priority === p \n                    ? getPriorityColor(p) \n                    : 'bg-gray-50 text-gray-600 border-gray-200 hover:bg-gray-100'\n                }`}\n              >\n                {getPriorityDisplayName(p)}\n              </button>\n            ))}\n            {priority && (\n              <button\n                onClick={() => handlePriorityChange(null)}\n                className=\"px-2 py-1 text-xs rounded border bg-gray-50 text-gray-400 border-gray-200 hover:bg-red-50 hover:text-red-600\"\n              >\n                ✕\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Dates Section - Only show for Projects, not Areas */}\n      {category === 'project' && (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n          <div>\n            <label className=\"text-sm font-medium text-gray-700 mb-2 block\">\n              Scheduled Date\n            </label>\n            <input\n              type=\"text\"\n              value={dueString}\n              onChange={handleDueChange}\n              className=\"w-full px-3 py-2 text-sm text-gray-900 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"e.g., today, next week, Jan 15\"\n            />\n          </div>\n          <div>\n            <label className=\"text-sm font-medium text-gray-700 mb-2 block\">\n              Deadline\n            </label>\n            <input\n              type=\"text\"\n              value={deadline}\n              onChange={handleDeadlineChange}\n              className=\"w-full px-3 py-2 text-sm text-gray-900 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"e.g., end of month, Dec 31\"\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Project Description */}\n      <div className=\"mb-4\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <label className=\"text-sm font-medium text-gray-700\">\n            Description\n          </label>\n          <button\n            onClick={generateSuggestion}\n            disabled={isGeneratingSuggestion}\n            className=\"px-3 py-1 text-xs bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors shadow-md\"\n          >\n            {isGeneratingSuggestion ? 'Generating...' : 'AI Suggest'}\n          </button>\n        </div>\n        \n        <textarea\n          ref={descriptionRef}\n          value={description}\n          onChange={handleDescriptionChange}\n          className=\"w-full p-3 border border-gray-300 rounded-md resize-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm leading-relaxed text-gray-900\"\n          placeholder=\"Add a description for this project...\"\n          rows={3}\n        />\n        \n        {suggestionError && (\n          <p className=\"mt-2 text-xs text-red-600\">{suggestionError}</p>\n        )}\n      </div>\n\n          {/* Project Metadata */}\n          <div className=\"flex items-center justify-between text-xs text-gray-500 pt-3 border-t border-gray-100\">\n            <span>\n              {project.isShared ? 'Shared Project' : 'Personal Project'}\n            </span>\n            <span>ID: {project.id}</span>\n          </div>\n        </>\n      )}\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 560, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/app/projects/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, useCallback } from 'react'\nimport Link from 'next/link'\nimport { TodoistProject } from '@/lib/types'\nimport EnhancedProjectCard from '@/components/EnhancedProjectCard'\n\ninterface ProjectWithMetadata extends TodoistProject {\n  description: string\n  category: 'area' | 'project' | null\n  priority: 1 | 2 | 3 | 4 | null\n  due?: { date: string; string: string }\n  deadline?: { date: string; string: string }\n}\n\ntype FilterType = 'all' | 'without-descriptions' | 'areas' | 'projects' | 'no-type' | 'need-priority' | 'need-dates'\ntype SortType = 'name' | 'priority' | 'scheduled-date' | 'deadline'\n\nexport default function ProjectsPage() {\n  const [projects, setProjects] = useState<ProjectWithMetadata[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [activeFilter, setActiveFilter] = useState<FilterType>('all')\n  const [sortBy, setSortBy] = useState<SortType>('name')\n  const [allCollapsed, setAllCollapsed] = useState(false)\n\n  // Load projects with descriptions\n  useEffect(() => {\n    async function loadProjects() {\n      try {\n        setLoading(true)\n        setError(null)\n\n        const response = await fetch('/api/projects/with-metadata')\n        if (!response.ok) {\n          throw new Error('Failed to fetch projects')\n        }\n\n        const projectsData = await response.json()\n        // Filter out inbox projects\n        const filteredProjects = projectsData.filter((project: ProjectWithMetadata) => !project.isInboxProject)\n        setProjects(filteredProjects)\n      } catch (err) {\n        console.error('Error loading projects:', err)\n        setError(err instanceof Error ? err.message : 'Failed to load projects')\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    loadProjects()\n  }, [])\n\n  const handleMetadataChange = useCallback(async (projectId: string, metadata: {\n    description?: string\n    category?: 'area' | 'project' | null\n    priority?: 1 | 2 | 3 | 4 | null\n    dueString?: string\n    deadline?: string\n  }) => {\n    try {\n      console.log('Updating project metadata:', { projectId, metadata })\n      \n      // Update the project metadata via API\n      const response = await fetch(`/api/projects/${projectId}/metadata`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(metadata),\n      })\n\n      if (!response.ok) {\n        const errorData = await response.json()\n        console.error('API Response error:', errorData)\n        throw new Error(`Failed to update project metadata: ${errorData.error || response.statusText}`)\n      }\n\n      // Update local state\n      setProjects(prev => prev.map(project => \n        project.id === projectId \n          ? { \n              ...project, \n              ...metadata,\n              // Handle date parsing for display\n              ...(metadata.dueString && { due: { date: '', string: metadata.dueString } }),\n              ...(metadata.deadline && { deadline: { date: '', string: metadata.deadline } })\n            }\n          : project\n      ))\n\n      console.log('Project metadata updated successfully')\n    } catch (err) {\n      console.error('Error updating project metadata:', err)\n      setError(err instanceof Error ? err.message : 'Failed to update project metadata')\n    }\n  }, [])\n\n  // Group projects by hierarchy (handles unlimited nesting depth)\n  const organizeProjects = (projects: ProjectWithMetadata[]) => {\n    const projectMap = new Map(projects.map(p => [p.id, p]))\n    const organizedProjects: Array<ProjectWithMetadata & { nestingDepth: number }> = []\n    const processedIds = new Set<string>()\n    \n    // Calculate nesting depth for a project\n    const calculateDepth = (project: ProjectWithMetadata, visited = new Set<string>()): number => {\n      if (!project.parentId) return 0\n      if (visited.has(project.id)) return 0 // Avoid circular references\n      \n      const parent = projectMap.get(project.parentId)\n      if (!parent) return 0\n      \n      visited.add(project.id)\n      return 1 + calculateDepth(parent, visited)\n    }\n    \n    // Recursive function to add a project and all its descendants\n    const addProjectAndChildren = (project: ProjectWithMetadata, depth: number = 0) => {\n      if (processedIds.has(project.id)) return\n      \n      organizedProjects.push({ ...project, nestingDepth: depth })\n      processedIds.add(project.id)\n      \n      // Find and add all direct children\n      const children = projects.filter(p => p.parentId === project.id)\n      children.forEach(child => addProjectAndChildren(child, depth + 1))\n    }\n    \n    // Start with root projects (those without parents)\n    const rootProjects = projects.filter(p => !p.parentId)\n    rootProjects.forEach(rootProject => addProjectAndChildren(rootProject, 0))\n    \n    // Add any orphaned projects (projects whose parents might not exist)\n    const remainingProjects = projects.filter(p => !processedIds.has(p.id))\n    remainingProjects.forEach(project => {\n      const depth = calculateDepth(project)\n      addProjectAndChildren(project, depth)\n    })\n    \n    return organizedProjects\n  }\n\n  // Filter projects based on active filter\n  const filteredProjects = projects.filter(project => {\n    switch (activeFilter) {\n      case 'without-descriptions':\n        return !project.description.trim()\n      case 'areas':\n        return project.category === 'area'\n      case 'projects':\n        return project.category === 'project'\n      case 'no-type':\n        return !project.category\n      case 'need-priority':\n        return !project.priority\n      case 'need-dates':\n        return project.category === 'project' && (!project.due || !project.deadline)\n      case 'all':\n      default:\n        return true\n    }\n  })\n\n  // Sort projects\n  const sortedProjects = [...filteredProjects].sort((a, b) => {\n    if (sortBy === 'priority') {\n      // Sort by priority (4=P1 highest, 1=P4 lowest, null last)\n      const aPriority = a.priority || 0\n      const bPriority = b.priority || 0\n      if (aPriority === bPriority) {\n        return a.name.localeCompare(b.name) // Secondary sort by name\n      }\n      return bPriority - aPriority // Higher number = higher priority\n    } else if (sortBy === 'scheduled-date') {\n      // Sort by scheduled date (earliest first, null last)\n      const aDate = a.due?.date ? new Date(a.due.date).getTime() : Infinity\n      const bDate = b.due?.date ? new Date(b.due.date).getTime() : Infinity\n      if (aDate === bDate) {\n        return a.name.localeCompare(b.name)\n      }\n      return aDate - bDate\n    } else if (sortBy === 'deadline') {\n      // Sort by deadline (earliest first, null last)\n      const aDeadline = a.deadline?.date ? new Date(a.deadline.date).getTime() : Infinity\n      const bDeadline = b.deadline?.date ? new Date(b.deadline.date).getTime() : Infinity\n      if (aDeadline === bDeadline) {\n        return a.name.localeCompare(b.name)\n      }\n      return aDeadline - bDeadline\n    } else {\n      // Sort by name (default)\n      return a.name.localeCompare(b.name)\n    }\n  })\n\n  const organizedProjects = organizeProjects(sortedProjects)\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-todoist-blue mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading projects...</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"text-red-500 mb-4\">\n            <svg className=\"w-12 h-12 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} \n                    d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n          </div>\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Error Loading Projects</h2>\n          <p className=\"text-gray-600 mb-4\">{error}</p>\n          <button\n            onClick={() => window.location.reload()}\n            className=\"px-4 py-2 bg-todoist-blue text-white rounded-md hover:bg-blue-600 transition-colors\"\n          >\n            Retry\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-4xl mx-auto px-4 py-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h1 className=\"text-3xl font-bold text-gray-900\">Project Management</h1>\n            <Link\n              href=\"/\"\n              className=\"px-3 py-1 text-sm bg-white text-gray-700 border border-gray-300 hover:bg-gray-50 rounded-md transition-colors\"\n            >\n              Task Processor\n            </Link>\n          </div>\n          <p className=\"text-gray-600\">\n            Manage your Todoist projects and their descriptions. Descriptions are stored as special tasks \n            within each project for compatibility with other Todoist clients.\n          </p>\n        </div>\n\n        {/* Project Filters & Sort */}\n        <div className=\"mb-8\">\n          <div className=\"flex flex-wrap items-center justify-between mb-6\">\n            <h2 className=\"text-lg font-semibold text-gray-900\">Filter & Sort</h2>\n            <div className=\"flex items-center gap-4\">\n              <button\n                onClick={() => setAllCollapsed(!allCollapsed)}\n                className=\"px-3 py-1 text-sm text-gray-700 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\"\n              >\n                {allCollapsed ? 'Expand All' : 'Collapse All'}\n              </button>\n              <div className=\"flex items-center gap-2\">\n                <label className=\"text-sm font-medium text-gray-700\">Sort by:</label>\n                <select\n                  value={sortBy}\n                  onChange={(e) => setSortBy(e.target.value as SortType)}\n                  className=\"px-3 py-1 text-sm text-gray-900 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                >\n                  <option value=\"name\">Name</option>\n                  <option value=\"priority\">Priority</option>\n                  <option value=\"scheduled-date\">Scheduled Date</option>\n                  <option value=\"deadline\">Deadline</option>\n                </select>\n              </div>\n            </div>\n          </div>\n          \n          {/* Actionable Filters */}\n          <div className=\"mb-6\">\n            <h3 className=\"text-sm font-medium text-gray-700 mb-3\">Actionable Items</h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <button\n                onClick={() => setActiveFilter('without-descriptions')}\n                className={`p-4 rounded-lg shadow-sm border transition-all ${\n                  activeFilter === 'without-descriptions' \n                    ? 'bg-orange-50 border-orange-300 ring-2 ring-orange-200' \n                    : 'bg-white border-gray-200 hover:bg-gray-50'\n                }`}\n              >\n                <div className=\"text-2xl font-bold text-orange-600\">\n                  {projects.filter(p => !p.description.trim()).length}\n                </div>\n                <div className=\"text-sm text-gray-600\">Without Descriptions</div>\n              </button>\n              \n              <button\n                onClick={() => setActiveFilter('need-priority')}\n                className={`p-4 rounded-lg shadow-sm border transition-all ${\n                  activeFilter === 'need-priority' \n                    ? 'bg-red-50 border-red-300 ring-2 ring-red-200' \n                    : 'bg-white border-gray-200 hover:bg-gray-50'\n                }`}\n              >\n                <div className=\"text-2xl font-bold text-red-600\">\n                  {projects.filter(p => !p.priority).length}\n                </div>\n                <div className=\"text-sm text-gray-600\">Need Priority</div>\n              </button>\n              \n              <button\n                onClick={() => setActiveFilter('need-dates')}\n                className={`p-4 rounded-lg shadow-sm border transition-all ${\n                  activeFilter === 'need-dates' \n                    ? 'bg-yellow-50 border-yellow-300 ring-2 ring-yellow-200' \n                    : 'bg-white border-gray-200 hover:bg-gray-50'\n                }`}\n              >\n                <div className=\"text-2xl font-bold text-yellow-600\">\n                  {projects.filter(p => p.category === 'project' && (!p.due || !p.deadline)).length}\n                </div>\n                <div className=\"text-sm text-gray-600\">Need Dates</div>\n              </button>\n              \n              <button\n                onClick={() => setActiveFilter('no-type')}\n                className={`p-4 rounded-lg shadow-sm border transition-all ${\n                  activeFilter === 'no-type' \n                    ? 'bg-gray-50 border-gray-400 ring-2 ring-gray-300' \n                    : 'bg-white border-gray-200 hover:bg-gray-50'\n                }`}\n              >\n                <div className=\"text-2xl font-bold text-gray-600\">\n                  {projects.filter(p => !p.category).length}\n                </div>\n                <div className=\"text-sm text-gray-600\">No Type</div>\n              </button>\n            </div>\n          </div>\n\n          {/* Organizational Filters */}\n          <div>\n            <h3 className=\"text-sm font-medium text-gray-700 mb-3\">Browse by Category</h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n              <button\n                onClick={() => setActiveFilter('all')}\n                className={`p-4 rounded-lg shadow-sm border transition-all ${\n                  activeFilter === 'all' \n                    ? 'bg-blue-50 border-blue-300 ring-2 ring-blue-200' \n                    : 'bg-white border-gray-200 hover:bg-gray-50'\n                }`}\n              >\n                <div className=\"text-2xl font-bold text-blue-600\">{projects.length}</div>\n                <div className=\"text-sm text-gray-600\">Total Projects</div>\n              </button>\n              \n              <button\n                onClick={() => setActiveFilter('areas')}\n                className={`p-4 rounded-lg shadow-sm border transition-all ${\n                  activeFilter === 'areas' \n                    ? 'bg-purple-50 border-purple-300 ring-2 ring-purple-200' \n                    : 'bg-white border-gray-200 hover:bg-gray-50'\n                }`}\n              >\n                <div className=\"text-2xl font-bold text-purple-600\">\n                  {projects.filter(p => p.category === 'area').length}\n                </div>\n                <div className=\"text-sm text-gray-600\">Areas of Responsibility</div>\n              </button>\n              \n              <button\n                onClick={() => setActiveFilter('projects')}\n                className={`p-4 rounded-lg shadow-sm border transition-all ${\n                  activeFilter === 'projects' \n                    ? 'bg-green-50 border-green-300 ring-2 ring-green-200' \n                    : 'bg-white border-gray-200 hover:bg-gray-50'\n                }`}\n              >\n                <div className=\"text-2xl font-bold text-green-600\">\n                  {projects.filter(p => p.category === 'project').length}\n                </div>\n                <div className=\"text-sm text-gray-600\">Projects</div>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Projects List */}\n        <div className=\"mb-4\">\n          <h2 className=\"text-lg font-semibold text-gray-900\">\n            {activeFilter === 'all' ? 'All Projects' :\n             activeFilter === 'without-descriptions' ? 'Projects Without Descriptions' :\n             activeFilter === 'areas' ? 'Areas of Responsibility' :\n             activeFilter === 'projects' ? 'Projects' :\n             activeFilter === 'no-type' ? 'Projects Without Type' :\n             activeFilter === 'need-priority' ? 'Projects Needing Priority' :\n             activeFilter === 'need-dates' ? 'Projects Needing Dates' : 'Projects'}\n            <span className=\"text-sm font-normal text-gray-500 ml-2\">\n              ({organizedProjects.length} {organizedProjects.length === 1 ? 'project' : 'projects'})\n            </span>\n          </h2>\n        </div>\n\n        {organizedProjects.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <div className=\"text-gray-400 mb-4\">\n              <svg className=\"w-16 h-16 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} \n                      d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n              </svg>\n            </div>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Projects Found</h3>\n            <p className=\"text-gray-600\">\n              {activeFilter === 'all' ? 'No projects are available at the moment.' :\n               activeFilter === 'without-descriptions' ? 'All projects have descriptions.' :\n               activeFilter === 'areas' ? 'No areas of responsibility found.' :\n               activeFilter === 'projects' ? 'No projects found.' :\n               activeFilter === 'no-type' ? 'All projects have been categorized.' :\n               activeFilter === 'need-priority' ? 'All projects have priorities assigned.' :\n               activeFilter === 'need-dates' ? 'All projects have dates set.' : 'No projects match the current filter.'}\n            </p>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {organizedProjects.map((project) => (\n              <EnhancedProjectCard\n                key={project.id}\n                project={project}\n                nestingDepth={project.nestingDepth}\n                onMetadataChange={handleMetadataChange}\n                isCollapsed={allCollapsed}\n              />\n            ))}\n          </div>\n        )}\n\n        {/* Instructions */}\n        <div className=\"mt-12 p-6 bg-blue-50 rounded-lg border border-blue-200\">\n          <h3 className=\"text-lg font-medium text-blue-900 mb-2\">How Project Metadata Works</h3>\n          <ul className=\"text-sm text-blue-800 space-y-1\">\n            <li>• Project metadata is stored as special tasks within each project</li>\n            <li>• These tasks use the project name as content and have the \"project-metadata\" label</li>\n            <li>• The description field contains the actual project description</li>\n            <li>• Project type (Area/Project) is stored using additional labels</li>\n            <li>• Priority, due dates, and deadlines are stored in the task fields</li>\n            <li>• All metadata auto-saves after 1 second of inactivity</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}