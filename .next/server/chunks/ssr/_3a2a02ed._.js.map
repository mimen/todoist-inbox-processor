{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/ProjectCard.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useCallback, useRef, useEffect } from 'react'\nimport { TodoistProject } from '@/lib/types'\n\ninterface ProjectWithDescription extends TodoistProject {\n  description: string\n}\n\ninterface ProjectCardProps {\n  project: ProjectWithDescription\n  nestingDepth?: number\n  onDescriptionChange?: (projectId: string, newDescription: string) => void\n}\n\nexport default function ProjectCard({ project, nestingDepth = 0, onDescriptionChange }: ProjectCardProps) {\n  const [description, setDescription] = useState(project.description)\n  const [saveTimeout, setSaveTimeout] = useState<NodeJS.Timeout | null>(null)\n  const [isGeneratingSuggestion, setIsGeneratingSuggestion] = useState(false)\n  const [suggestionError, setSuggestionError] = useState<string | null>(null)\n  const descriptionRef = useRef<HTMLTextAreaElement>(null)\n\n  // Update local state when project changes\n  useEffect(() => {\n    setDescription(project.description)\n  }, [project.id, project.description])\n\n  // Auto-save with debounce\n  const debouncedSave = useCallback((value: string) => {\n    if (saveTimeout) {\n      clearTimeout(saveTimeout)\n    }\n    \n    const timeout = setTimeout(() => {\n      if (value !== project.description && onDescriptionChange) {\n        onDescriptionChange(project.id, value)\n      }\n    }, 1000)\n    \n    setSaveTimeout(timeout)\n  }, [saveTimeout, project.description, project.id, onDescriptionChange])\n\n  const handleDescriptionChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const newDescription = e.target.value\n    setDescription(newDescription)\n    debouncedSave(newDescription)\n  }\n\n  const generateSuggestion = useCallback(async () => {\n    if (isGeneratingSuggestion) return\n    \n    setIsGeneratingSuggestion(true)\n    setSuggestionError(null)\n    \n    try {\n      const response = await fetch(`/api/projects/${project.id}/suggest-description`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          currentDescription: description,\n        }),\n      })\n\n      if (!response.ok) {\n        throw new Error('Failed to generate suggestion')\n      }\n\n      const data = await response.json()\n      setDescription(data.suggestion)\n      debouncedSave(data.suggestion)\n    } catch (err) {\n      console.error('Error generating suggestion:', err)\n      setSuggestionError(err instanceof Error ? err.message : 'Failed to generate suggestion')\n    } finally {\n      setIsGeneratingSuggestion(false)\n    }\n  }, [project.id, description, debouncedSave, isGeneratingSuggestion])\n\n  // Auto-resize textarea\n  useEffect(() => {\n    const adjustHeight = () => {\n      if (descriptionRef.current) {\n        descriptionRef.current.style.height = 'auto'\n        descriptionRef.current.style.height = `${descriptionRef.current.scrollHeight}px`\n      }\n    }\n    adjustHeight()\n  }, [description])\n\n  const getTodoistColor = (colorName: string) => {\n    const colorMap: { [key: string]: string } = {\n      'berry_red': '#b8256f',\n      'red': '#db4035',\n      'orange': '#ff9933',\n      'yellow': '#fad000',\n      'olive_green': '#afb83b',\n      'lime_green': '#7ecc49',\n      'green': '#299438',\n      'mint_green': '#6accbc',\n      'teal': '#158fad',\n      'sky_blue': '#14aaf5',\n      'light_blue': '#96c3eb',\n      'blue': '#4073ff',\n      'grape': '#884dff',\n      'violet': '#af38eb',\n      'lavender': '#eb96eb',\n      'magenta': '#e05194',\n      'salmon': '#ff8d85',\n      'charcoal': '#808080',\n      'grey': '#b8b8b8',\n      'taupe': '#ccac93'\n    }\n    return colorMap[colorName] || '#299fe6'\n  }\n\n  const projectColor = getTodoistColor(project.color)\n  const isNested = nestingDepth > 0\n  const leftMargin = nestingDepth * 32 // 32px per level of nesting\n\n  return (\n    <div \n      className={`bg-white rounded-lg shadow-sm border p-6 transition-all hover:shadow-md ${isNested ? 'border-l-4' : ''}`}\n      style={{ \n        marginLeft: `${leftMargin}px`,\n        ...(isNested ? { borderLeftColor: projectColor } : {})\n      }}>\n      \n      {/* Project Header */}\n      <div className=\"flex items-center gap-3 mb-4\">\n        {/* Nesting indicator */}\n        {isNested && (\n          <div className=\"flex items-center\">\n            {Array.from({ length: nestingDepth }, (_, i) => (\n              <div\n                key={i}\n                className=\"w-0.5 h-4 bg-gray-300 mr-2\"\n                style={{ backgroundColor: i === nestingDepth - 1 ? projectColor : '#e5e7eb' }}\n              />\n            ))}\n          </div>\n        )}\n        \n        <div \n          className=\"w-4 h-4 rounded-full flex-shrink-0\"\n          style={{ backgroundColor: projectColor }}\n        ></div>\n        <h2 className=\"text-xl font-semibold text-gray-900 flex-1\">\n          {project.name}\n        </h2>\n        \n        {/* Badges */}\n        <div className=\"flex items-center gap-2\">\n          {nestingDepth > 0 && (\n            <span className=\"px-2 py-1 text-xs font-medium rounded-md bg-purple-50 text-purple-700 border border-purple-200\">\n              Level {nestingDepth}\n            </span>\n          )}\n          {project.isInboxProject && (\n            <span className=\"px-2 py-1 text-xs font-medium rounded-md bg-blue-50 text-blue-700 border border-blue-200\">\n              Inbox\n            </span>\n          )}\n        </div>\n      </div>\n\n      {/* Project Description */}\n      <div className=\"mb-4\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <label className=\"text-sm font-medium text-gray-700\">\n            Description\n          </label>\n          <button\n            onClick={generateSuggestion}\n            disabled={isGeneratingSuggestion}\n            className=\"px-3 py-1 text-xs bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors shadow-md\"\n          >\n            {isGeneratingSuggestion ? 'Generating...' : 'AI Suggest'}\n          </button>\n        </div>\n        \n        <textarea\n          ref={descriptionRef}\n          value={description}\n          onChange={handleDescriptionChange}\n          className=\"w-full p-3 border border-gray-300 rounded-md resize-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm leading-relaxed\"\n          placeholder=\"Add a description for this project...\"\n          rows={3}\n        />\n        \n        {suggestionError && (\n          <p className=\"mt-2 text-xs text-red-600\">{suggestionError}</p>\n        )}\n        \n        <p className=\"mt-2 text-xs text-gray-500\">\n          Descriptions are stored as special tasks with \"*\" prefix and auto-save after 1 second.\n        </p>\n      </div>\n\n      {/* Project Metadata */}\n      <div className=\"flex items-center justify-between text-xs text-gray-500 pt-3 border-t border-gray-100\">\n        <span>\n          {project.isShared ? 'Shared Project' : 'Personal Project'}\n        </span>\n        <span>ID: {project.id}</span>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/app/projects/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, useCallback } from 'react'\nimport { TodoistProject } from '@/lib/types'\nimport ProjectCard from '@/components/ProjectCard'\n\ninterface ProjectWithDescription extends TodoistProject {\n  description: string\n}\n\nexport default function ProjectsPage() {\n  const [projects, setProjects] = useState<ProjectWithDescription[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  // Load projects with descriptions\n  useEffect(() => {\n    async function loadProjects() {\n      try {\n        setLoading(true)\n        setError(null)\n\n        const response = await fetch('/api/projects/with-descriptions')\n        if (!response.ok) {\n          throw new Error('Failed to fetch projects')\n        }\n\n        const projectsData = await response.json()\n        setProjects(projectsData)\n      } catch (err) {\n        console.error('Error loading projects:', err)\n        setError(err instanceof Error ? err.message : 'Failed to load projects')\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    loadProjects()\n  }, [])\n\n  const handleDescriptionChange = useCallback(async (projectId: string, newDescription: string) => {\n    try {\n      console.log('Updating project description:', { projectId, newDescription })\n      \n      // Update the project description via API\n      const response = await fetch(`/api/projects/${projectId}/description`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ description: newDescription }),\n      })\n\n      if (!response.ok) {\n        const errorData = await response.json()\n        console.error('API Response error:', errorData)\n        throw new Error(`Failed to update project description: ${errorData.error || response.statusText}`)\n      }\n\n      // Update local state\n      setProjects(prev => prev.map(project => \n        project.id === projectId \n          ? { ...project, description: newDescription }\n          : project\n      ))\n\n      console.log('Project description updated successfully')\n    } catch (err) {\n      console.error('Error updating project description:', err)\n      setError(err instanceof Error ? err.message : 'Failed to update project description')\n    }\n  }, [])\n\n  // Group projects by hierarchy (handles unlimited nesting depth)\n  const organizeProjects = (projects: ProjectWithDescription[]) => {\n    const projectMap = new Map(projects.map(p => [p.id, p]))\n    const organizedProjects: Array<ProjectWithDescription & { nestingDepth: number }> = []\n    const processedIds = new Set<string>()\n    \n    // Calculate nesting depth for a project\n    const calculateDepth = (project: ProjectWithDescription, visited = new Set<string>()): number => {\n      if (!project.parentId) return 0\n      if (visited.has(project.id)) return 0 // Avoid circular references\n      \n      const parent = projectMap.get(project.parentId)\n      if (!parent) return 0\n      \n      visited.add(project.id)\n      return 1 + calculateDepth(parent, visited)\n    }\n    \n    // Recursive function to add a project and all its descendants\n    const addProjectAndChildren = (project: ProjectWithDescription, depth: number = 0) => {\n      if (processedIds.has(project.id)) return\n      \n      organizedProjects.push({ ...project, nestingDepth: depth })\n      processedIds.add(project.id)\n      \n      // Find and add all direct children\n      const children = projects.filter(p => p.parentId === project.id)\n      children.forEach(child => addProjectAndChildren(child, depth + 1))\n    }\n    \n    // Start with root projects (those without parents)\n    const rootProjects = projects.filter(p => !p.parentId)\n    rootProjects.forEach(rootProject => addProjectAndChildren(rootProject, 0))\n    \n    // Add any orphaned projects (projects whose parents might not exist)\n    const remainingProjects = projects.filter(p => !processedIds.has(p.id))\n    remainingProjects.forEach(project => {\n      const depth = calculateDepth(project)\n      addProjectAndChildren(project, depth)\n    })\n    \n    return organizedProjects\n  }\n\n  const organizedProjects = organizeProjects(projects)\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-todoist-blue mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading projects...</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"text-red-500 mb-4\">\n            <svg className=\"w-12 h-12 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} \n                    d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n          </div>\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Error Loading Projects</h2>\n          <p className=\"text-gray-600 mb-4\">{error}</p>\n          <button\n            onClick={() => window.location.reload()}\n            className=\"px-4 py-2 bg-todoist-blue text-white rounded-md hover:bg-blue-600 transition-colors\"\n          >\n            Retry\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-4xl mx-auto px-4 py-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Project Management</h1>\n          <p className=\"text-gray-600\">\n            Manage your Todoist projects and their descriptions. Descriptions are stored as special tasks \n            within each project for compatibility with other Todoist clients.\n          </p>\n        </div>\n\n        {/* Project Stats */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\">\n          <div className=\"bg-white p-4 rounded-lg shadow-sm border\">\n            <div className=\"text-2xl font-bold text-todoist-blue\">{projects.length}</div>\n            <div className=\"text-sm text-gray-600\">Total Projects</div>\n          </div>\n          <div className=\"bg-white p-4 rounded-lg shadow-sm border\">\n            <div className=\"text-2xl font-bold text-green-600\">\n              {projects.filter(p => p.description.trim()).length}\n            </div>\n            <div className=\"text-sm text-gray-600\">With Descriptions</div>\n          </div>\n          <div className=\"bg-white p-4 rounded-lg shadow-sm border\">\n            <div className=\"text-2xl font-bold text-purple-600\">\n              {projects.filter(p => p.parentId).length}\n            </div>\n            <div className=\"text-sm text-gray-600\">Nested Projects</div>\n          </div>\n        </div>\n\n        {/* Projects List */}\n        {organizedProjects.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <div className=\"text-gray-400 mb-4\">\n              <svg className=\"w-16 h-16 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} \n                      d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n              </svg>\n            </div>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Projects Found</h3>\n            <p className=\"text-gray-600\">No projects are available at the moment.</p>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {organizedProjects.map((project) => (\n              <ProjectCard\n                key={project.id}\n                project={project}\n                nestingDepth={project.nestingDepth}\n                onDescriptionChange={handleDescriptionChange}\n              />\n            ))}\n          </div>\n        )}\n\n        {/* Instructions */}\n        <div className=\"mt-12 p-6 bg-blue-50 rounded-lg border border-blue-200\">\n          <h3 className=\"text-lg font-medium text-blue-900 mb-2\">How Project Descriptions Work</h3>\n          <ul className=\"text-sm text-blue-800 space-y-1\">\n            <li>• Project descriptions are stored as special tasks within each project</li>\n            <li>• These tasks start with \"*\" and have the \"project description\" label</li>\n            <li>• They appear at the top of the project due to highest priority (P1)</li>\n            <li>• This approach ensures compatibility with all Todoist clients and LLM integrations</li>\n            <li>• Descriptions auto-save after 1 second of inactivity</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 780, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}}]
}