{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/app/projects/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, useCallback } from 'react'\nimport Link from 'next/link'\nimport { TodoistProject } from '@/lib/types'\nimport EnhancedProjectCard from '@/components/EnhancedProjectCard'\n\ninterface ProjectWithMetadata extends TodoistProject {\n  description: string\n  category: 'area' | 'project' | null\n  priority: 1 | 2 | 3 | 4 | null\n  due?: { date: string; string: string }\n  deadline?: { date: string; string: string }\n}\n\nexport default function ProjectsPage() {\n  const [projects, setProjects] = useState<ProjectWithMetadata[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  // Load projects with descriptions\n  useEffect(() => {\n    async function loadProjects() {\n      try {\n        setLoading(true)\n        setError(null)\n\n        const response = await fetch('/api/projects/with-metadata')\n        if (!response.ok) {\n          throw new Error('Failed to fetch projects')\n        }\n\n        const projectsData = await response.json()\n        setProjects(projectsData)\n      } catch (err) {\n        console.error('Error loading projects:', err)\n        setError(err instanceof Error ? err.message : 'Failed to load projects')\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    loadProjects()\n  }, [])\n\n  const handleMetadataChange = useCallback(async (projectId: string, metadata: {\n    description?: string\n    category?: 'area' | 'project' | null\n    priority?: 1 | 2 | 3 | 4 | null\n    dueString?: string\n    deadline?: string\n  }) => {\n    try {\n      console.log('Updating project metadata:', { projectId, metadata })\n      \n      // Update the project metadata via API\n      const response = await fetch(`/api/projects/${projectId}/metadata`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(metadata),\n      })\n\n      if (!response.ok) {\n        const errorData = await response.json()\n        console.error('API Response error:', errorData)\n        throw new Error(`Failed to update project metadata: ${errorData.error || response.statusText}`)\n      }\n\n      // Update local state\n      setProjects(prev => prev.map(project => \n        project.id === projectId \n          ? { \n              ...project, \n              ...metadata,\n              // Handle date parsing for display\n              ...(metadata.dueString && { due: { date: '', string: metadata.dueString } }),\n              ...(metadata.deadline && { deadline: { date: '', string: metadata.deadline } })\n            }\n          : project\n      ))\n\n      console.log('Project metadata updated successfully')\n    } catch (err) {\n      console.error('Error updating project metadata:', err)\n      setError(err instanceof Error ? err.message : 'Failed to update project metadata')\n    }\n  }, [])\n\n  // Group projects by hierarchy (handles unlimited nesting depth)\n  const organizeProjects = (projects: ProjectWithMetadata[]) => {\n    const projectMap = new Map(projects.map(p => [p.id, p]))\n    const organizedProjects: Array<ProjectWithMetadata & { nestingDepth: number }> = []\n    const processedIds = new Set<string>()\n    \n    // Calculate nesting depth for a project\n    const calculateDepth = (project: ProjectWithMetadata, visited = new Set<string>()): number => {\n      if (!project.parentId) return 0\n      if (visited.has(project.id)) return 0 // Avoid circular references\n      \n      const parent = projectMap.get(project.parentId)\n      if (!parent) return 0\n      \n      visited.add(project.id)\n      return 1 + calculateDepth(parent, visited)\n    }\n    \n    // Recursive function to add a project and all its descendants\n    const addProjectAndChildren = (project: ProjectWithMetadata, depth: number = 0) => {\n      if (processedIds.has(project.id)) return\n      \n      organizedProjects.push({ ...project, nestingDepth: depth })\n      processedIds.add(project.id)\n      \n      // Find and add all direct children\n      const children = projects.filter(p => p.parentId === project.id)\n      children.forEach(child => addProjectAndChildren(child, depth + 1))\n    }\n    \n    // Start with root projects (those without parents)\n    const rootProjects = projects.filter(p => !p.parentId)\n    rootProjects.forEach(rootProject => addProjectAndChildren(rootProject, 0))\n    \n    // Add any orphaned projects (projects whose parents might not exist)\n    const remainingProjects = projects.filter(p => !processedIds.has(p.id))\n    remainingProjects.forEach(project => {\n      const depth = calculateDepth(project)\n      addProjectAndChildren(project, depth)\n    })\n    \n    return organizedProjects\n  }\n\n  const organizedProjects = organizeProjects(projects)\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-todoist-blue mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading projects...</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"text-red-500 mb-4\">\n            <svg className=\"w-12 h-12 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} \n                    d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n          </div>\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Error Loading Projects</h2>\n          <p className=\"text-gray-600 mb-4\">{error}</p>\n          <button\n            onClick={() => window.location.reload()}\n            className=\"px-4 py-2 bg-todoist-blue text-white rounded-md hover:bg-blue-600 transition-colors\"\n          >\n            Retry\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-4xl mx-auto px-4 py-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h1 className=\"text-3xl font-bold text-gray-900\">Project Management</h1>\n            <Link\n              href=\"/\"\n              className=\"px-3 py-1 text-sm bg-white text-gray-700 border border-gray-300 hover:bg-gray-50 rounded-md transition-colors\"\n            >\n              Task Processor\n            </Link>\n          </div>\n          <p className=\"text-gray-600\">\n            Manage your Todoist projects and their descriptions. Descriptions are stored as special tasks \n            within each project for compatibility with other Todoist clients.\n          </p>\n        </div>\n\n        {/* Project Stats */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\">\n          <div className=\"bg-white p-4 rounded-lg shadow-sm border\">\n            <div className=\"text-2xl font-bold text-blue-600\">{projects.length}</div>\n            <div className=\"text-sm text-gray-600\">Total Projects</div>\n          </div>\n          <div className=\"bg-white p-4 rounded-lg shadow-sm border\">\n            <div className=\"text-2xl font-bold text-green-600\">\n              {projects.filter(p => p.description.trim()).length}\n            </div>\n            <div className=\"text-sm text-gray-600\">With Descriptions</div>\n          </div>\n          <div className=\"bg-white p-4 rounded-lg shadow-sm border\">\n            <div className=\"text-2xl font-bold text-purple-600\">\n              {projects.filter(p => p.parentId).length}\n            </div>\n            <div className=\"text-sm text-gray-600\">Nested Projects</div>\n          </div>\n        </div>\n\n        {/* Projects List */}\n        {organizedProjects.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <div className=\"text-gray-400 mb-4\">\n              <svg className=\"w-16 h-16 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} \n                      d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n              </svg>\n            </div>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Projects Found</h3>\n            <p className=\"text-gray-600\">No projects are available at the moment.</p>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {organizedProjects.map((project) => (\n              <ProjectCard\n                key={project.id}\n                project={project}\n                nestingDepth={project.nestingDepth}\n                onDescriptionChange={handleDescriptionChange}\n              />\n            ))}\n          </div>\n        )}\n\n        {/* Instructions */}\n        <div className=\"mt-12 p-6 bg-blue-50 rounded-lg border border-blue-200\">\n          <h3 className=\"text-lg font-medium text-blue-900 mb-2\">How Project Descriptions Work</h3>\n          <ul className=\"text-sm text-blue-800 space-y-1\">\n            <li>• Project descriptions are stored as special tasks within each project</li>\n            <li>• These tasks start with \"*\" and have the \"project description\" label</li>\n            <li>• They appear at the top of the project due to highest priority (P1)</li>\n            <li>• This approach ensures compatibility with all Todoist clients and LLM integrations</li>\n            <li>• Descriptions auto-save after 1 second of inactivity</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}