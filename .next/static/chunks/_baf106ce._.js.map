{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/lib/mock-data.ts"],"sourcesContent":["import { TodoistTask, TodoistProject, TodoistLabel, MockAISuggestion } from './types'\n\n// Mock projects data\nexport const mockProjects: TodoistProject[] = [\n  {\n    id: '1',\n    name: 'Work',\n    color: 'blue',\n    order: 1,\n    commentCount: 0,\n    isShared: false,\n    isFavorite: true,\n    isInboxProject: false,\n    isTeamInbox: false,\n    viewStyle: 'list',\n    url: '',\n  },\n  {\n    id: '2',\n    name: 'Personal',\n    color: 'green',\n    order: 2,\n    commentCount: 0,\n    isShared: false,\n    isFavorite: false,\n    isInboxProject: false,\n    isTeamInbox: false,\n    viewStyle: 'list',\n    url: '',\n  },\n  {\n    id: '3',\n    name: 'Shopping',\n    color: 'orange',\n    order: 3,\n    commentCount: 0,\n    isShared: false,\n    isFavorite: false,\n    isInboxProject: false,\n    isTeamInbox: false,\n    viewStyle: 'list',\n    url: '',\n  },\n  {\n    id: 'inbox',\n    name: 'Inbox',\n    color: 'grey',\n    order: 0,\n    commentCount: 0,\n    isShared: false,\n    isFavorite: false,\n    isInboxProject: true,\n    isTeamInbox: false,\n    viewStyle: 'list',\n    url: '',\n  },\n]\n\n// Mock labels data\nexport const mockLabels: TodoistLabel[] = [\n  { id: '1', name: 'urgent', color: 'red', order: 1, isFavorite: true },\n  { id: '2', name: 'waiting', color: 'yellow', order: 2, isFavorite: false },\n  { id: '3', name: 'someday', color: 'grey', order: 3, isFavorite: false },\n  { id: '4', name: 'email', color: 'blue', order: 4, isFavorite: false },\n  { id: '5', name: 'phone', color: 'green', order: 5, isFavorite: false },\n]\n\n// Mock inbox tasks\nexport const mockInboxTasks: TodoistTask[] = [\n  {\n    id: '1',\n    content: 'call mom about weekend plans',\n    projectId: 'inbox',\n    order: 1,\n    priority: 1,\n    labels: [],\n    url: '',\n    commentCount: 0,\n    createdAt: '2024-01-15T10:00:00Z',\n    isCompleted: false,\n  },\n  {\n    id: '2',\n    content: 'review quarterly budget report',\n    description: 'Need to check the Q4 numbers and prepare for the board meeting',\n    projectId: 'inbox',\n    order: 2,\n    priority: 1,\n    labels: [],\n    url: '',\n    commentCount: 0,\n    createdAt: '2024-01-15T10:30:00Z',\n    isCompleted: false,\n  },\n  {\n    id: '3',\n    content: 'buy groceries',\n    projectId: 'inbox',\n    order: 3,\n    priority: 1,\n    labels: [],\n    url: '',\n    commentCount: 0,\n    createdAt: '2024-01-15T11:00:00Z',\n    isCompleted: false,\n  },\n  {\n    id: '4',\n    content: 'fix the broken link on website',\n    description: 'Users are reporting 404 error on the contact page',\n    projectId: 'inbox',\n    order: 4,\n    priority: 1,\n    labels: [],\n    url: '',\n    commentCount: 0,\n    createdAt: '2024-01-15T11:30:00Z',\n    isCompleted: false,\n  },\n  {\n    id: '5',\n    content: 'schedule dentist appointment',\n    projectId: 'inbox',\n    order: 5,\n    priority: 1,\n    labels: [],\n    url: '',\n    commentCount: 0,\n    createdAt: '2024-01-15T12:00:00Z',\n    isCompleted: false,\n  },\n]\n\n// Mock AI suggestions generator\nexport function generateMockSuggestions(taskContent: string): MockAISuggestion[] {\n  const suggestions: MockAISuggestion[] = []\n  const content = taskContent.toLowerCase()\n\n  // Project suggestions\n  if (content.includes('call') || content.includes('phone') || content.includes('mom') || content.includes('family')) {\n    suggestions.push({\n      type: 'project',\n      suggestion: 'Personal',\n      confidence: 0.85,\n      reasoning: 'Personal communication task'\n    })\n  } else if (content.includes('work') || content.includes('meeting') || content.includes('report') || content.includes('budget')) {\n    suggestions.push({\n      type: 'project',\n      suggestion: 'Work',\n      confidence: 0.9,\n      reasoning: 'Work-related task'\n    })\n  } else if (content.includes('buy') || content.includes('shop') || content.includes('groceries')) {\n    suggestions.push({\n      type: 'project',\n      suggestion: 'Shopping',\n      confidence: 0.95,\n      reasoning: 'Shopping or purchasing task'\n    })\n  }\n\n  // Label suggestions\n  if (content.includes('call') || content.includes('phone')) {\n    suggestions.push({\n      type: 'label',\n      suggestion: 'phone',\n      confidence: 0.9,\n      reasoning: 'Phone communication required'\n    })\n  }\n  if (content.includes('urgent') || content.includes('asap') || content.includes('important')) {\n    suggestions.push({\n      type: 'label',\n      suggestion: 'urgent',\n      confidence: 0.8,\n      reasoning: 'Task indicates urgency'\n    })\n  }\n\n  // Priority suggestions\n  if (content.includes('urgent') || content.includes('asap') || content.includes('critical')) {\n    suggestions.push({\n      type: 'priority',\n      suggestion: '4',\n      confidence: 0.85,\n      reasoning: 'High priority language detected'\n    })\n  } else if (content.includes('important') || content.includes('deadline')) {\n    suggestions.push({\n      type: 'priority',\n      suggestion: '3',\n      confidence: 0.75,\n      reasoning: 'Medium-high priority indicated'\n    })\n  }\n\n  // Task rewrite suggestions\n  if (content.length < 30 || !content.includes(' ')) {\n    suggestions.push({\n      type: 'rewrite',\n      suggestion: makeTaskMoreActionable(taskContent),\n      confidence: 0.7,\n      reasoning: 'Make task more specific and actionable'\n    })\n  }\n\n  return suggestions\n}\n\nfunction makeTaskMoreActionable(content: string): string {\n  const lower = content.toLowerCase()\n  \n  if (lower.includes('call mom')) {\n    return 'Call mom to discuss weekend plans and confirm dinner time'\n  } else if (lower.includes('buy groceries')) {\n    return 'Go to grocery store and buy milk, bread, eggs, and vegetables for the week'\n  } else if (lower.includes('fix') && lower.includes('website')) {\n    return 'Investigate and fix the 404 error on website contact page'\n  } else if (lower.includes('dentist')) {\n    return 'Call dentist office to schedule routine cleaning appointment'\n  } else if (lower.includes('review') && lower.includes('budget')) {\n    return 'Review Q4 budget report and prepare summary for board meeting'\n  }\n  \n  return `Complete task: ${content} - add specific details and next actions`\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/lib/suggestions-cache.ts"],"sourcesContent":["interface ProjectSuggestion {\n  projectId: string\n  projectName: string\n  confidence: number\n  reasoning: string\n}\n\ninterface CachedSuggestions {\n  taskId: string\n  taskContent: string\n  taskDescription: string\n  suggestions: ProjectSuggestion[]\n  timestamp: number\n}\n\nclass SuggestionsCache {\n  private cache = new Map<string, CachedSuggestions>()\n  private readonly CACHE_DURATION = 5 * 60 * 1000 // 5 minutes\n  private readonly MAX_CACHE_SIZE = 50 // Keep cache reasonable size\n\n  private generateCacheKey(taskId: string, content: string, description: string): string {\n    // Create a hash-like key based on task content for change detection\n    const contentHash = btoa(content + (description || '')).replace(/[^a-zA-Z0-9]/g, '').slice(0, 16)\n    return `${taskId}_${contentHash}`\n  }\n\n  private isExpired(timestamp: number): boolean {\n    return Date.now() - timestamp > this.CACHE_DURATION\n  }\n\n  private cleanExpired(): void {\n    const now = Date.now()\n    for (const [key, cached] of this.cache.entries()) {\n      if (this.isExpired(cached.timestamp)) {\n        this.cache.delete(key)\n      }\n    }\n  }\n\n  private ensureCacheSize(): void {\n    if (this.cache.size > this.MAX_CACHE_SIZE) {\n      // Remove oldest entries\n      const entries = Array.from(this.cache.entries())\n        .sort((a, b) => a[1].timestamp - b[1].timestamp)\n      \n      const toRemove = entries.slice(0, this.cache.size - this.MAX_CACHE_SIZE + 10)\n      toRemove.forEach(([key]) => this.cache.delete(key))\n    }\n  }\n\n  getSuggestions(taskId: string, content: string, description: string = ''): ProjectSuggestion[] | null {\n    this.cleanExpired()\n    \n    const key = this.generateCacheKey(taskId, content, description)\n    const cached = this.cache.get(key)\n    \n    if (cached && !this.isExpired(cached.timestamp)) {\n      return cached.suggestions\n    }\n    \n    return null\n  }\n\n  setSuggestions(\n    taskId: string, \n    content: string, \n    description: string = '', \n    suggestions: ProjectSuggestion[]\n  ): void {\n    this.cleanExpired()\n    this.ensureCacheSize()\n    \n    const key = this.generateCacheKey(taskId, content, description)\n    this.cache.set(key, {\n      taskId,\n      taskContent: content,\n      taskDescription: description,\n      suggestions,\n      timestamp: Date.now()\n    })\n  }\n\n  async generateSuggestions(\n    taskId: string,\n    content: string,\n    description: string = '',\n    projectHierarchy: any,\n    currentProjectId?: string\n  ): Promise<ProjectSuggestion[]> {\n    // Check cache first\n    const cached = this.getSuggestions(taskId, content, description)\n    if (cached) {\n      return cached\n    }\n\n    try {\n      const response = await fetch('/api/llm/generate-project-suggestions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          taskContent: content,\n          taskDescription: description,\n          projectHierarchy,\n          currentProjectId,\n        }),\n      })\n\n      if (response.ok) {\n        const data = await response.json()\n        const suggestions = data.suggestions || []\n        \n        // Cache the result\n        this.setSuggestions(taskId, content, description, suggestions)\n        \n        return suggestions\n      } else {\n        console.error('Failed to generate suggestions:', response.statusText)\n        return []\n      }\n    } catch (error) {\n      console.error('Error generating suggestions:', error)\n      return []\n    }\n  }\n\n  async prefetchSuggestions(\n    tasks: Array<{ id: string; content: string; description?: string; projectId: string }>,\n    projectHierarchy: any\n  ): Promise<void> {\n    const prefetchPromises = tasks.map(task => \n      this.generateSuggestions(\n        task.id,\n        task.content,\n        task.description || '',\n        projectHierarchy,\n        task.projectId\n      )\n    )\n\n    try {\n      await Promise.all(prefetchPromises)\n    } catch (error) {\n      console.error('Error prefetching suggestions:', error)\n    }\n  }\n\n  invalidateTask(taskId: string): void {\n    // Remove all cache entries for this task ID\n    const keysToDelete = Array.from(this.cache.keys()).filter(key => \n      this.cache.get(key)?.taskId === taskId\n    )\n    keysToDelete.forEach(key => this.cache.delete(key))\n  }\n\n  clear(): void {\n    this.cache.clear()\n  }\n\n  getStats() {\n    return {\n      size: this.cache.size,\n      entries: Array.from(this.cache.values()).map(v => ({\n        taskId: v.taskId,\n        content: v.taskContent.slice(0, 30) + '...',\n        suggestionsCount: v.suggestions.length,\n        age: Math.round((Date.now() - v.timestamp) / 1000)\n      }))\n    }\n  }\n}\n\n// Export singleton instance\nexport const suggestionsCache = new SuggestionsCache()\nexport type { ProjectSuggestion }"],"names":[],"mappings":";;;AAeA,MAAM;IACI,QAAQ,IAAI,MAAgC;IACnC,iBAAiB,IAAI,KAAK,KAAK,YAAY;KAAb;IAC9B,iBAAiB,GAAG,6BAA6B;KAA9B;IAE5B,iBAAiB,MAAc,EAAE,OAAe,EAAE,WAAmB,EAAU;QACrF,oEAAoE;QACpE,MAAM,cAAc,KAAK,UAAU,CAAC,eAAe,EAAE,GAAG,OAAO,CAAC,iBAAiB,IAAI,KAAK,CAAC,GAAG;QAC9F,OAAO,GAAG,OAAO,CAAC,EAAE,aAAa;IACnC;IAEQ,UAAU,SAAiB,EAAW;QAC5C,OAAO,KAAK,GAAG,KAAK,YAAY,IAAI,CAAC,cAAc;IACrD;IAEQ,eAAqB;QAC3B,MAAM,MAAM,KAAK,GAAG;QACpB,KAAK,MAAM,CAAC,KAAK,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,GAAI;YAChD,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,SAAS,GAAG;gBACpC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YACpB;QACF;IACF;IAEQ,kBAAwB;QAC9B,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,EAAE;YACzC,wBAAwB;YACxB,MAAM,UAAU,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,IAC1C,IAAI,CAAC,CAAC,GAAG,IAAM,CAAC,CAAC,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,SAAS;YAEjD,MAAM,WAAW,QAAQ,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,GAAG;YAC1E,SAAS,OAAO,CAAC,CAAC,CAAC,IAAI,GAAK,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAChD;IACF;IAEA,eAAe,MAAc,EAAE,OAAe,EAAE,cAAsB,EAAE,EAA8B;QACpG,IAAI,CAAC,YAAY;QAEjB,MAAM,MAAM,IAAI,CAAC,gBAAgB,CAAC,QAAQ,SAAS;QACnD,MAAM,SAAS,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAE9B,IAAI,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,SAAS,GAAG;YAC/C,OAAO,OAAO,WAAW;QAC3B;QAEA,OAAO;IACT;IAEA,eACE,MAAc,EACd,OAAe,EACf,cAAsB,EAAE,EACxB,WAAgC,EAC1B;QACN,IAAI,CAAC,YAAY;QACjB,IAAI,CAAC,eAAe;QAEpB,MAAM,MAAM,IAAI,CAAC,gBAAgB,CAAC,QAAQ,SAAS;QACnD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK;YAClB;YACA,aAAa;YACb,iBAAiB;YACjB;YACA,WAAW,KAAK,GAAG;QACrB;IACF;IAEA,MAAM,oBACJ,MAAc,EACd,OAAe,EACf,cAAsB,EAAE,EACxB,gBAAqB,EACrB,gBAAyB,EACK;QAC9B,oBAAoB;QACpB,MAAM,SAAS,IAAI,CAAC,cAAc,CAAC,QAAQ,SAAS;QACpD,IAAI,QAAQ;YACV,OAAO;QACT;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,yCAAyC;gBACpE,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB,aAAa;oBACb,iBAAiB;oBACjB;oBACA;gBACF;YACF;YAEA,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,MAAM,cAAc,KAAK,WAAW,IAAI,EAAE;gBAE1C,mBAAmB;gBACnB,IAAI,CAAC,cAAc,CAAC,QAAQ,SAAS,aAAa;gBAElD,OAAO;YACT,OAAO;gBACL,QAAQ,KAAK,CAAC,mCAAmC,SAAS,UAAU;gBACpE,OAAO,EAAE;YACX;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iCAAiC;YAC/C,OAAO,EAAE;QACX;IACF;IAEA,MAAM,oBACJ,KAAsF,EACtF,gBAAqB,EACN;QACf,MAAM,mBAAmB,MAAM,GAAG,CAAC,CAAA,OACjC,IAAI,CAAC,mBAAmB,CACtB,KAAK,EAAE,EACP,KAAK,OAAO,EACZ,KAAK,WAAW,IAAI,IACpB,kBACA,KAAK,SAAS;QAIlB,IAAI;YACF,MAAM,QAAQ,GAAG,CAAC;QACpB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,kCAAkC;QAClD;IACF;IAEA,eAAe,MAAc,EAAQ;QACnC,4CAA4C;QAC5C,MAAM,eAAe,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,MAAM,CAAC,CAAA,MACxD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,WAAW;QAElC,aAAa,OAAO,CAAC,CAAA,MAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAChD;IAEA,QAAc;QACZ,IAAI,CAAC,KAAK,CAAC,KAAK;IAClB;IAEA,WAAW;QACT,OAAO;YACL,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI;YACrB,SAAS,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,CAAA,IAAK,CAAC;oBACjD,QAAQ,EAAE,MAAM;oBAChB,SAAS,EAAE,WAAW,CAAC,KAAK,CAAC,GAAG,MAAM;oBACtC,kBAAkB,EAAE,WAAW,CAAC,MAAM;oBACtC,KAAK,KAAK,KAAK,CAAC,CAAC,KAAK,GAAG,KAAK,EAAE,SAAS,IAAI;gBAC/C,CAAC;QACH;IACF;AACF;AAGO,MAAM,mBAAmB,IAAI","debugId":null}},
    {"offset": {"line": 388, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/TaskCard.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useCallback, useRef, useEffect } from 'react'\nimport { TodoistTask, TodoistProject, TodoistLabel } from '@/lib/types'\n\ninterface TaskCardProps {\n  task: TodoistTask\n  projects: TodoistProject[]\n  labels: TodoistLabel[]\n  onContentChange?: (newContent: string) => void\n  onDescriptionChange?: (newDescription: string) => void\n  onProjectClick?: () => void\n  onPriorityClick?: () => void\n  onLabelAdd?: () => void\n  onLabelRemove?: (labelName: string) => void\n  onScheduledClick?: () => void\n  onDeadlineClick?: () => void\n}\n\nexport default function TaskCard({ \n  task, \n  projects, \n  labels, \n  onContentChange, \n  onDescriptionChange,\n  onProjectClick,\n  onPriorityClick,\n  onLabelAdd,\n  onLabelRemove,\n  onScheduledClick,\n  onDeadlineClick \n}: TaskCardProps) {\n  const [content, setContent] = useState(task.content)\n  const [description, setDescription] = useState(task.description || '')\n  const [saveTimeout, setSaveTimeout] = useState<NodeJS.Timeout | null>(null)\n  const contentRef = useRef<HTMLTextAreaElement>(null)\n  const descriptionRef = useRef<HTMLTextAreaElement>(null)\n\n  // Update local state when task changes\n  useEffect(() => {\n    setContent(task.content)\n    setDescription(task.description || '')\n  }, [task.id, task.content, task.description])\n\n  // Auto-save with debounce\n  const debouncedSave = useCallback((type: 'content' | 'description', value: string) => {\n    if (saveTimeout) {\n      clearTimeout(saveTimeout)\n    }\n    \n    const timeout = setTimeout(() => {\n      if (type === 'content' && value !== task.content && onContentChange) {\n        onContentChange(value)\n      } else if (type === 'description' && value !== (task.description || '') && onDescriptionChange) {\n        onDescriptionChange(value)\n      }\n    }, 1000)\n    \n    setSaveTimeout(timeout)\n  }, [saveTimeout, task.content, task.description, onContentChange, onDescriptionChange])\n\n  const handleContentChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const newContent = e.target.value\n    setContent(newContent)\n    debouncedSave('content', newContent)\n  }\n\n  const handleDescriptionChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const newDescription = e.target.value\n    setDescription(newDescription)\n    debouncedSave('description', newDescription)\n  }\n\n  // Auto-resize textarea\n  useEffect(() => {\n    const adjustHeight = (textarea: HTMLTextAreaElement | null) => {\n      if (textarea) {\n        textarea.style.height = 'auto'\n        textarea.style.height = `${textarea.scrollHeight}px`\n      }\n    }\n    adjustHeight(contentRef.current)\n    adjustHeight(descriptionRef.current)\n  }, [content, description])\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric',\n    })\n  }\n\n  const getTodoistColor = (colorName: string) => {\n    const colorMap: { [key: string]: string } = {\n      'berry_red': '#b8256f',\n      'red': '#db4035',\n      'orange': '#ff9933',\n      'yellow': '#fad000',\n      'olive_green': '#afb83b',\n      'lime_green': '#7ecc49',\n      'green': '#299438',\n      'mint_green': '#6accbc',\n      'teal': '#158fad',\n      'sky_blue': '#14aaf5',\n      'light_blue': '#96c3eb',\n      'blue': '#4073ff',\n      'grape': '#884dff',\n      'violet': '#af38eb',\n      'lavender': '#eb96eb',\n      'magenta': '#e05194',\n      'salmon': '#ff8d85',\n      'charcoal': '#808080',\n      'grey': '#b8b8b8',\n      'taupe': '#ccac93'\n    }\n    return colorMap[colorName] || '#299fe6'\n  }\n\n  // Convert API priority (1-4) to UI priority (P4-P1)\n  const getUIPriority = (apiPriority: number) => {\n    return 5 - apiPriority // 4→P1, 3→P2, 2→P3, 1→P4\n  }\n\n  const getPriorityColor = (apiPriority: number) => {\n    const uiPriority = getUIPriority(apiPriority)\n    switch (uiPriority) {\n      case 1: return 'text-red-600 bg-red-50 border-red-200'    // P1 = Urgent\n      case 2: return 'text-orange-600 bg-orange-50 border-orange-200' // P2 = High\n      case 3: return 'text-blue-600 bg-blue-50 border-blue-200'  // P3 = Medium\n      default: return 'text-gray-600 bg-gray-50 border-gray-200' // P4 = Normal\n    }\n  }\n\n  const getPriorityLabel = (apiPriority: number) => {\n    const uiPriority = getUIPriority(apiPriority)\n    switch (uiPriority) {\n      case 1: return 'Urgent'  // P1\n      case 2: return 'High'    // P2\n      case 3: return 'Medium'  // P3\n      default: return 'Normal' // P4\n    }\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm p-6 task-card-enter\">\n      {/* Header */}\n      <div className=\"flex items-start justify-between mb-4\">\n        <div className=\"flex-1\">\n          <div className=\"flex items-center flex-wrap gap-2 mb-2\">\n            <button\n              onClick={onPriorityClick}\n              className={`px-2 py-1 text-xs font-medium rounded-md border transition-colors hover:opacity-80 cursor-pointer ${getPriorityColor(task.priority)}`}\n              title=\"Click to change priority\"\n            >\n              P{getUIPriority(task.priority)} • {getPriorityLabel(task.priority)}\n            </button>\n            <button\n              onClick={onProjectClick}\n              className=\"inline-flex items-center space-x-2 bg-gray-100 hover:bg-gray-200 px-2 py-1 rounded text-xs transition-colors cursor-pointer\"\n              title=\"Click to change project\"\n            >\n              {(() => {\n                const project = projects.find(p => p.id === task.projectId)\n                const projectColor = project ? getTodoistColor(project.color) : '#299fe6'\n                return (\n                  <>\n                    <div \n                      className=\"w-2.5 h-2.5 rounded-full flex-shrink-0\"\n                      style={{ backgroundColor: projectColor }}\n                    ></div>\n                    <span className=\"text-gray-700\">\n                      {project?.name || 'Unknown Project'}\n                    </span>\n                  </>\n                )\n              })()}\n            </button>\n            \n            {/* Scheduled Date */}\n            {task.due ? (\n              <button\n                onClick={onScheduledClick}\n                className=\"inline-flex items-center space-x-2 bg-blue-50 hover:bg-blue-100 px-2 py-1 rounded text-xs transition-colors cursor-pointer border border-blue-200\"\n                title=\"Click to change scheduled date\"\n              >\n                <svg className=\"w-3 h-3 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                </svg>\n                <span className=\"text-blue-700\">\n                  {task.due.string || formatDate(task.due.date)}\n                </span>\n              </button>\n            ) : (\n              <button\n                onClick={onScheduledClick}\n                className=\"inline-flex items-center space-x-2 text-gray-400 hover:text-blue-600 hover:bg-blue-50 px-2 py-1 rounded text-xs transition-colors\"\n                title=\"Add scheduled date\"\n              >\n                <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                </svg>\n                <span>Schedule</span>\n              </button>\n            )}\n            \n            {/* Deadline */}\n            {task.deadline ? (\n              <button\n                onClick={onDeadlineClick}\n                className=\"inline-flex items-center space-x-2 bg-red-50 hover:bg-red-100 px-2 py-1 rounded text-xs transition-colors cursor-pointer border border-red-200\"\n                title=\"Click to change deadline\"\n              >\n                <svg className=\"w-3 h-3 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                <span className=\"text-red-700\">\n                  {task.deadline.string || formatDate(task.deadline.date)}\n                </span>\n              </button>\n            ) : (\n              <button\n                onClick={onDeadlineClick}\n                className=\"inline-flex items-center space-x-2 text-gray-400 hover:text-red-600 hover:bg-red-50 px-2 py-1 rounded text-xs transition-colors\"\n                title=\"Add deadline\"\n              >\n                <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                <span>Deadline</span>\n              </button>\n            )}\n          </div>\n          \n          {/* Always-Editable Task Content */}\n          <textarea\n            ref={contentRef}\n            value={content}\n            onChange={handleContentChange}\n            className=\"w-full text-xl font-semibold text-gray-900 leading-tight bg-transparent hover:bg-gray-50 rounded-md px-2 py-1 focus:outline-none focus:bg-white focus:ring-2 focus:ring-todoist-blue resize-none transition-all overflow-hidden\"\n            style={{ minHeight: '2rem' }}\n            placeholder=\"Task name...\"\n          />\n        </div>\n      </div>\n\n      {/* Always-Editable Description */}\n      <div className=\"mb-4\">\n        <textarea\n          ref={descriptionRef}\n          value={description}\n          onChange={handleDescriptionChange}\n          className=\"w-full text-gray-600 bg-gray-50 hover:bg-gray-100 focus:bg-white rounded-md p-3 text-sm leading-relaxed focus:outline-none focus:ring-2 focus:ring-todoist-blue resize-none transition-all overflow-hidden\"\n          placeholder=\"Add a description...\"\n          style={{ minHeight: '3rem' }}\n        />\n      </div>\n\n      {/* Current Assignment */}\n      <div className=\"space-y-3 mb-6\">\n        <div>\n          <span className=\"text-sm font-medium text-gray-700\">Labels:</span>\n          <div className=\"flex flex-wrap gap-2 mt-2\">\n            {task.labels.map((labelName) => {\n              const label = labels.find(l => l.name === labelName)\n              const labelColor = label ? getTodoistColor(label.color) : '#299fe6'\n              return (\n                <div\n                  key={labelName}\n                  className=\"text-xs px-2 py-1 rounded-full flex items-center group relative transition-all\"\n                  style={{ backgroundColor: `${labelColor}20`, color: labelColor }}\n                >\n                  <div className=\"flex items-center\">\n                    <div \n                      className=\"w-2 h-2 rounded-full flex-shrink-0 mr-1 group-hover:hidden\"\n                      style={{ backgroundColor: labelColor }}\n                    ></div>\n                    <button\n                      onClick={() => onLabelRemove?.(labelName)}\n                      className=\"w-2 h-2 mr-1 rounded-full items-center justify-center hidden group-hover:flex hover:scale-125 transition-transform\"\n                      title=\"Remove label\"\n                    >\n                      <span className=\"text-xs font-bold leading-none\">×</span>\n                    </button>\n                    <span>{labelName}</span>\n                  </div>\n                </div>\n              )\n            })}\n            <button\n              onClick={onLabelAdd}\n              className=\"text-xs px-2 py-1 rounded-full flex items-center transition-colors bg-gray-100 text-gray-600 hover:bg-gray-200\"\n              title=\"Add labels\"\n            >\n              <span className=\"font-medium\">+ Add Label</span>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Metadata */}\n      <div className=\"pt-4 border-t border-gray-100\">\n        <div className=\"flex items-center justify-between text-xs text-gray-500\">\n          <span>Created: {formatDate(task.createdAt)}</span>\n          <span>ID: {task.id}</span>\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 966, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/TaskForm.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, useCallback, useRef } from 'react'\nimport { TodoistTask, TodoistProject, TodoistLabel, TaskUpdate, MockAISuggestion } from '@/lib/types'\nimport ProjectDropdown from './ProjectDropdown'\n\ninterface TaskFormProps {\n  task: TodoistTask\n  projects: TodoistProject[]\n  labels: TodoistLabel[]\n  suggestions: MockAISuggestion[]\n  onAutoSave: (updates: TaskUpdate) => void\n  onNext: () => void\n  onPrevious: () => void\n  canGoNext: boolean\n  canGoPrevious: boolean\n}\n\nexport default function TaskForm({ task, projects, labels, suggestions, onAutoSave, onNext, onPrevious, canGoNext, canGoPrevious }: TaskFormProps) {\n  const [formData, setFormData] = useState<TaskUpdate>({\n    content: task.content,\n    description: task.description || '',\n    projectId: task.projectId,\n    labels: [...task.labels],\n    dueString: '',\n  })\n\n  const [selectedLabels, setSelectedLabels] = useState<Set<string>>(new Set(task.labels))\n  const saveTimeoutRef = useRef<NodeJS.Timeout | null>(null)\n  const lastSavedDataRef = useRef<TaskUpdate | null>(null)\n\n  // Auto-save with debounce\n  const debouncedSave = useCallback((updates: TaskUpdate) => {\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current)\n    }\n    \n    saveTimeoutRef.current = setTimeout(() => {\n      // Only save if data has actually changed\n      const dataToSave = { ...updates, labels: Array.from(selectedLabels) }\n      const currentDataString = JSON.stringify(dataToSave)\n      const lastSavedString = JSON.stringify(lastSavedDataRef.current)\n      \n      if (currentDataString !== lastSavedString) {\n        console.log('Auto-saving changes:', dataToSave)\n        onAutoSave(dataToSave)\n        lastSavedDataRef.current = dataToSave\n      }\n    }, 2000)\n  }, [onAutoSave, selectedLabels])\n\n  // Reset form data when task changes\n  useEffect(() => {\n    const newFormData = {\n      content: task.content,\n      description: task.description || '',\n      projectId: task.projectId,\n      labels: [...task.labels],\n      dueString: '',\n    }\n    setFormData(newFormData)\n    setSelectedLabels(new Set(task.labels))\n    lastSavedDataRef.current = { ...newFormData, labels: task.labels }\n    \n    // Clear any pending saves when task changes\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current)\n    }\n  }, [task.id, task.content, task.description, task.projectId, task.labels])\n\n  // Trigger auto-save when form data changes\n  useEffect(() => {\n    debouncedSave(formData)\n  }, [formData, debouncedSave])\n\n  // Cleanup timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (saveTimeoutRef.current) {\n        clearTimeout(saveTimeoutRef.current)\n      }\n    }\n  }, [])\n\n  // No longer need handleSubmit since we auto-save\n\n  const handleProjectChange = (projectId: string) => {\n    setFormData(prev => ({ ...prev, projectId }))\n  }\n\n  // Priority is now handled by the overlay, no longer needed here\n\n  const toggleLabel = (labelName: string) => {\n    const newLabels = new Set(selectedLabels)\n    if (newLabels.has(labelName)) {\n      newLabels.delete(labelName)\n    } else {\n      newLabels.add(labelName)\n    }\n    setSelectedLabels(newLabels)\n    // Trigger auto-save for label changes\n    debouncedSave({ ...formData, labels: Array.from(newLabels) })\n  }\n\n  const applySuggestion = (suggestion: MockAISuggestion) => {\n    switch (suggestion.type) {\n      case 'project':\n        const project = projects.find(p => p.name === suggestion.suggestion)\n        if (project) {\n          handleProjectChange(project.id)\n        }\n        break\n      case 'label':\n        toggleLabel(suggestion.suggestion)\n        break\n      case 'rewrite':\n        setFormData(prev => ({ ...prev, content: suggestion.suggestion }))\n        break\n      case 'priority':\n        // Priority is now handled by the overlay, suggestions disabled\n        break\n    }\n  }\n\n  const getTodoistColor = (colorName: string) => {\n    const colorMap: { [key: string]: string } = {\n      'berry_red': '#b8256f',\n      'red': '#db4035',\n      'orange': '#ff9933',\n      'yellow': '#fad000',\n      'olive_green': '#afb83b',\n      'lime_green': '#7ecc49',\n      'green': '#299438',\n      'mint_green': '#6accbc',\n      'teal': '#158fad',\n      'sky_blue': '#14aaf5',\n      'light_blue': '#96c3eb',\n      'blue': '#4073ff',\n      'grape': '#884dff',\n      'violet': '#af38eb',\n      'lavender': '#eb96eb',\n      'magenta': '#e05194',\n      'salmon': '#ff8d85',\n      'charcoal': '#808080',\n      'grey': '#b8b8b8',\n      'taupe': '#ccac93'\n    }\n    return colorMap[colorName] || '#299fe6'\n  }\n\n  const projectSuggestions = suggestions.filter(s => s.type === 'project')\n  const labelSuggestions = suggestions.filter(s => s.type === 'label')\n  const rewriteSuggestions = suggestions.filter(s => s.type === 'rewrite')\n  // prioritySuggestions removed - priority is now handled by overlay\n\n  return (\n    <div>\n      {/* Navigation Buttons Only */}\n      <div className=\"flex gap-3\">\n        <button\n          type=\"button\"\n          onClick={onPrevious}\n          disabled={!canGoPrevious}\n          className={`flex-1 py-3 px-4 rounded-md font-medium transition-colors focus:ring-2 focus:ring-offset-2 ${\n            canGoPrevious\n              ? 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50 focus:ring-gray-500'\n              : 'bg-gray-100 text-gray-400 border border-gray-200 cursor-not-allowed'\n          }`}\n        >\n          ← Previous\n        </button>\n        <button\n          type=\"button\"\n          onClick={onNext}\n          disabled={!canGoNext}\n          className={`flex-1 py-3 px-4 rounded-md font-medium transition-colors focus:ring-2 focus:ring-offset-2 ${\n            canGoNext\n              ? 'bg-todoist-blue text-white hover:bg-blue-600 focus:ring-todoist-blue'\n              : 'bg-gray-100 text-gray-400 border border-gray-200 cursor-not-allowed'\n          }`}\n        >\n          Next Task →\n        </button>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1190, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/KeyboardShortcuts.tsx"],"sourcesContent":["'use client'\n\ninterface KeyboardShortcutsProps {\n  onClose: () => void\n}\n\nexport default function KeyboardShortcuts({ onClose }: KeyboardShortcutsProps) {\n  const shortcuts = [\n    { category: 'Navigation', items: [\n      { key: 'Enter', description: 'Next task' },\n      { key: '?', description: 'Toggle this help' },\n      { key: 'Esc', description: 'Close overlays/help' },\n    ]},\n    { category: 'Task Management', items: [\n      { key: 'P', description: 'Set priority' },\n      { key: '#', description: 'Change project' },\n      { key: '@', description: 'Add/remove labels' },\n      { key: '1-4', description: 'Quick priority (when P overlay open)' },\n    ]},\n    { category: 'Form', items: [\n      { key: 'Tab', description: 'Navigate between form fields' },\n      { key: 'S', description: 'Skip current task' },\n    ]},\n  ]\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full p-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-lg font-semibold text-gray-900\">Keyboard Shortcuts</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 rounded\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n        \n        <div className=\"space-y-4\">\n          {shortcuts.map((section, sectionIndex) => (\n            <div key={sectionIndex}>\n              <h3 className=\"text-sm font-medium text-gray-900 mb-2\">{section.category}</h3>\n              <div className=\"space-y-2\">\n                {section.items.map((shortcut, index) => (\n                  <div key={index} className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-gray-600\">{shortcut.description}</span>\n                    <span className=\"kbd\">{shortcut.key}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"mt-6 pt-4 border-t border-gray-200\">\n          <p className=\"text-xs text-gray-500\">\n            Press <span className=\"kbd\">?</span> anytime to toggle this help\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAAA;;AAMe,SAAS,kBAAkB,EAAE,OAAO,EAA0B;IAC3E,MAAM,YAAY;QAChB;YAAE,UAAU;YAAc,OAAO;gBAC/B;oBAAE,KAAK;oBAAS,aAAa;gBAAY;gBACzC;oBAAE,KAAK;oBAAK,aAAa;gBAAmB;gBAC5C;oBAAE,KAAK;oBAAO,aAAa;gBAAsB;aAClD;QAAA;QACD;YAAE,UAAU;YAAmB,OAAO;gBACpC;oBAAE,KAAK;oBAAK,aAAa;gBAAe;gBACxC;oBAAE,KAAK;oBAAK,aAAa;gBAAiB;gBAC1C;oBAAE,KAAK;oBAAK,aAAa;gBAAoB;gBAC7C;oBAAE,KAAK;oBAAO,aAAa;gBAAuC;aACnE;QAAA;QACD;YAAE,UAAU;YAAQ,OAAO;gBACzB;oBAAE,KAAK;oBAAO,aAAa;gBAA+B;gBAC1D;oBAAE,KAAK;oBAAK,aAAa;gBAAoB;aAC9C;QAAA;KACF;IAED,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAsC;;;;;;sCACpD,6LAAC;4BACC,SAAS;4BACT,WAAU;sCAEV,cAAA,6LAAC;gCAAI,WAAU;gCAAU,MAAK;gCAAO,QAAO;gCAAe,SAAQ;0CACjE,cAAA,6LAAC;oCAAK,eAAc;oCAAQ,gBAAe;oCAAQ,aAAY;oCAAI,GAAE;;;;;;;;;;;;;;;;;;;;;;8BAK3E,6LAAC;oBAAI,WAAU;8BACZ,UAAU,GAAG,CAAC,CAAC,SAAS,6BACvB,6LAAC;;8CACC,6LAAC;oCAAG,WAAU;8CAA0C,QAAQ,QAAQ;;;;;;8CACxE,6LAAC;oCAAI,WAAU;8CACZ,QAAQ,KAAK,CAAC,GAAG,CAAC,CAAC,UAAU,sBAC5B,6LAAC;4CAAgB,WAAU;;8DACzB,6LAAC;oDAAK,WAAU;8DAAyB,SAAS,WAAW;;;;;;8DAC7D,6LAAC;oDAAK,WAAU;8DAAO,SAAS,GAAG;;;;;;;2CAF3B;;;;;;;;;;;2BAJN;;;;;;;;;;8BAcd,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAE,WAAU;;4BAAwB;0CAC7B,6LAAC;gCAAK,WAAU;0CAAM;;;;;;4BAAQ;;;;;;;;;;;;;;;;;;;;;;;AAMhD;KA1DwB","debugId":null}},
    {"offset": {"line": 1405, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/ProgressIndicator.tsx"],"sourcesContent":["'use client'\n\ninterface ProgressIndicatorProps {\n  current: number\n  total: number\n  progress: number\n}\n\nexport default function ProgressIndicator({ current, total, progress }: ProgressIndicatorProps) {\n  return (\n    <div className=\"py-2\">\n      <div className=\"flex items-center justify-between mb-1\">\n        <span className=\"text-sm font-medium text-gray-700\">\n          Progress: {current} of {total}\n        </span>\n        <span className=\"text-sm text-gray-600\">\n          {Math.round(progress)}%\n        </span>\n      </div>\n      \n      <div className=\"w-full bg-gray-200 rounded-full h-2\">\n        <div\n          className=\"bg-todoist-blue h-2 rounded-full transition-all duration-300 ease-out\"\n          style={{ width: `${progress}%` }}\n        />\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAAA;;AAQe,SAAS,kBAAkB,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAA0B;IAC5F,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;;4BAAoC;4BACvC;4BAAQ;4BAAK;;;;;;;kCAE1B,6LAAC;wBAAK,WAAU;;4BACb,KAAK,KAAK,CAAC;4BAAU;;;;;;;;;;;;;0BAI1B,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBACC,WAAU;oBACV,OAAO;wBAAE,OAAO,GAAG,SAAS,CAAC,CAAC;oBAAC;;;;;;;;;;;;;;;;;AAKzC;KApBwB","debugId":null}},
    {"offset": {"line": 1484, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/ProjectDropdown.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, useRef } from 'react'\nimport { TodoistProject } from '@/lib/types'\n\ninterface ProjectDropdownProps {\n  projects: TodoistProject[]\n  selectedProjectId: string\n  onProjectChange: (projectId: string) => void\n  placeholder?: string\n  includeInbox?: boolean\n  className?: string\n}\n\nexport default function ProjectDropdown({ \n  projects, \n  selectedProjectId, \n  onProjectChange,\n  placeholder = \"Select project...\",\n  includeInbox = true,\n  className = \"\"\n}: ProjectDropdownProps) {\n  const [isOpen, setIsOpen] = useState(false)\n  const [searchTerm, setSearchTerm] = useState('')\n  const dropdownRef = useRef<HTMLDivElement>(null)\n  const searchInputRef = useRef<HTMLInputElement>(null)\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setIsOpen(false)\n        setSearchTerm('')\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside)\n    return () => document.removeEventListener('mousedown', handleClickOutside)\n  }, [])\n\n  // Focus search input when dropdown opens\n  useEffect(() => {\n    if (isOpen && searchInputRef.current) {\n      searchInputRef.current.focus()\n    }\n  }, [isOpen])\n\n  const getTodoistColor = (colorName: string) => {\n    const colorMap: { [key: string]: string } = {\n      'berry_red': '#b8256f',\n      'red': '#db4035',\n      'orange': '#ff9933',\n      'yellow': '#fad000',\n      'olive_green': '#afb83b',\n      'lime_green': '#7ecc49',\n      'green': '#299438',\n      'mint_green': '#6accbc',\n      'teal': '#158fad',\n      'sky_blue': '#14aaf5',\n      'light_blue': '#96c3eb',\n      'blue': '#4073ff',\n      'grape': '#884dff',\n      'violet': '#af38eb',\n      'lavender': '#eb96eb',\n      'magenta': '#e05194',\n      'salmon': '#ff8d85',\n      'charcoal': '#808080',\n      'grey': '#b8b8b8',\n      'taupe': '#ccac93'\n    }\n    return colorMap[colorName] || '#299fe6'\n  }\n\n  // Create project hierarchy\n  const createProjectHierarchy = () => {\n    const rootProjects = projects.filter(p => !p.parentId && !p.isInboxProject)\n    const childProjects = projects.filter(p => p.parentId && !p.isInboxProject)\n    \n    const hierarchy: any[] = []\n    \n    // Add inbox if requested\n    if (includeInbox) {\n      const inboxProject = projects.find(p => p.isInboxProject)\n      hierarchy.push({\n        id: inboxProject?.id || 'inbox',\n        name: 'Inbox',\n        color: inboxProject ? getTodoistColor(inboxProject.color) : '#299fe6',\n        indent: 0\n      })\n    }\n    \n    // Add root projects and their children\n    const addProjectWithChildren = (project: TodoistProject, indent: number = 0) => {\n      hierarchy.push({\n        id: project.id,\n        name: project.name,\n        color: getTodoistColor(project.color),\n        indent\n      })\n      \n      // Add children\n      const children = childProjects.filter(p => p.parentId === project.id)\n      children.forEach(child => addProjectWithChildren(child, indent + 1))\n    }\n    \n    rootProjects.forEach(project => addProjectWithChildren(project))\n    \n    return hierarchy\n  }\n\n  const projectHierarchy = createProjectHierarchy()\n  \n  // Filter projects based on search term\n  const filteredProjects = projectHierarchy.filter(project =>\n    project.name.toLowerCase().includes(searchTerm.toLowerCase())\n  )\n\n  const selectedProject = projectHierarchy.find(p => p.id === selectedProjectId)\n\n  const handleProjectSelect = (projectId: string, event: React.MouseEvent) => {\n    event.preventDefault()\n    event.stopPropagation()\n    onProjectChange(projectId)\n    setIsOpen(false)\n    setSearchTerm('')\n  }\n\n  const handleDropdownClick = (event: React.MouseEvent) => {\n    event.preventDefault()\n    event.stopPropagation()\n    setIsOpen(!isOpen)\n  }\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault()\n    event.stopPropagation()\n    setSearchTerm(event.target.value)\n  }\n\n  const handleDropdownContainerClick = (event: React.MouseEvent) => {\n    // Prevent any event bubbling from the dropdown container\n    event.preventDefault()\n    event.stopPropagation()\n  }\n\n  return (\n    <div className={`relative ${className}`} ref={dropdownRef}>\n      <button\n        type=\"button\"\n        onClick={handleDropdownClick}\n        className=\"w-full flex items-center justify-between p-3 bg-gray-50 hover:bg-gray-100 border border-gray-200 rounded-md transition-colors\"\n      >\n        <div className=\"flex items-center space-x-3\">\n          {selectedProject ? (\n            <>\n              <div \n                className=\"w-4 h-4 rounded-full flex-shrink-0\"\n                style={{ backgroundColor: selectedProject.color }}\n              ></div>\n              <span className=\"font-medium text-gray-900\">{selectedProject.name}</span>\n            </>\n          ) : (\n            <span className=\"text-gray-500\">{placeholder}</span>\n          )}\n        </div>\n        <svg \n          className={`w-4 h-4 text-gray-500 transition-transform ${isOpen ? 'rotate-180' : ''}`}\n          fill=\"none\" \n          stroke=\"currentColor\" \n          viewBox=\"0 0 24 24\"\n        >\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\" />\n        </svg>\n      </button>\n\n      {isOpen && (\n        <div \n          className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-200 rounded-md shadow-lg z-50 dropdown-open\"\n          onClick={handleDropdownContainerClick}\n        >\n          {/* Search Input */}\n          <div className=\"p-3 border-b border-gray-200\">\n            <input\n              ref={searchInputRef}\n              type=\"text\"\n              placeholder=\"Search projects...\"\n              value={searchTerm}\n              onChange={handleSearchChange}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-todoist-blue focus:border-transparent text-sm\"\n            />\n          </div>\n          \n          {/* Project List */}\n          <div className=\"max-h-64 overflow-y-auto\">\n            {filteredProjects.length > 0 ? (\n              filteredProjects.map((project) => (\n                <button\n                  type=\"button\"\n                  key={project.id}\n                  onClick={(e) => handleProjectSelect(project.id, e)}\n                  className={`w-full flex items-center space-x-3 p-3 text-left hover:bg-gray-50 transition-colors ${\n                    selectedProjectId === project.id ? 'bg-blue-50 text-blue-900' : 'text-gray-900'\n                  }`}\n                  style={{ paddingLeft: `${12 + (project.indent * 20)}px` }}\n                >\n                  <div \n                    className=\"w-4 h-4 rounded-full flex-shrink-0\"\n                    style={{ backgroundColor: project.color }}\n                  ></div>\n                  <span className=\"font-medium flex-1\">{project.name}</span>\n                  {selectedProjectId === project.id && (\n                    <svg className=\"w-4 h-4 text-blue-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                    </svg>\n                  )}\n                </button>\n              ))\n            ) : (\n              <div className=\"p-3 text-center text-gray-500 text-sm\">\n                No projects found\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1791, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/ProjectSwitcher.tsx"],"sourcesContent":["'use client'\n\nimport { TodoistProject } from '@/lib/types'\nimport ProjectDropdown from './ProjectDropdown'\n\ninterface ProjectSwitcherProps {\n  projects: TodoistProject[]\n  selectedProjectId: string\n  onProjectChange: (projectId: string) => void\n  taskCount?: number\n}\n\nexport default function ProjectSwitcher({ \n  projects, \n  selectedProjectId, \n  onProjectChange,\n  taskCount = 0\n}: ProjectSwitcherProps) {\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border p-4 mb-6\">\n      <div className=\"flex items-center justify-between mb-3\">\n        <h3 className=\"text-sm font-medium text-gray-700\">Processing Project</h3>\n        <span className=\"text-xs text-gray-500\">\n          {taskCount} tasks\n        </span>\n      </div>\n      \n      <ProjectDropdown\n        projects={projects}\n        selectedProjectId={selectedProjectId}\n        onProjectChange={onProjectChange}\n        placeholder=\"Select project to process...\"\n        includeInbox={true}\n      />\n\n      <div className=\"mt-3 text-xs text-gray-500\">\n        💡 Select a project to process its tasks. Use keyboard shortcuts: S to skip, Enter to process.\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAYe,SAAS,gBAAgB,EACtC,QAAQ,EACR,iBAAiB,EACjB,eAAe,EACf,YAAY,CAAC,EACQ;IACrB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAoC;;;;;;kCAClD,6LAAC;wBAAK,WAAU;;4BACb;4BAAU;;;;;;;;;;;;;0BAIf,6LAAC,iIAAA,CAAA,UAAe;gBACd,UAAU;gBACV,mBAAmB;gBACnB,iBAAiB;gBACjB,aAAY;gBACZ,cAAc;;;;;;0BAGhB,6LAAC;gBAAI,WAAU;0BAA6B;;;;;;;;;;;;AAKlD;KA5BwB","debugId":null}},
    {"offset": {"line": 1869, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/PriorityOverlay.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect } from 'react'\n\ninterface PriorityOverlayProps {\n  currentPriority: 1 | 2 | 3 | 4\n  onPrioritySelect: (priority: 1 | 2 | 3 | 4) => void\n  onClose: () => void\n  isVisible: boolean\n}\n\nexport default function PriorityOverlay({ currentPriority, onPrioritySelect, onClose, isVisible }: PriorityOverlayProps) {\n  // Convert API priority (1-4) to UI priority (P4-P1)\n  const getUIPriority = (apiPriority: number) => {\n    return 5 - apiPriority // 4→P1, 3→P2, 2→P3, 1→P4\n  }\n\n  const getPriorityColor = (apiPriority: number) => {\n    const uiPriority = getUIPriority(apiPriority)\n    switch (uiPriority) {\n      case 1: return 'bg-red-500 border-red-500 text-white'    // P1 = Urgent\n      case 2: return 'bg-orange-500 border-orange-500 text-white' // P2 = High\n      case 3: return 'bg-blue-500 border-blue-500 text-white'  // P3 = Medium\n      default: return 'bg-gray-500 border-gray-500 text-white' // P4 = Normal\n    }\n  }\n\n  const getPriorityLabel = (apiPriority: number) => {\n    const uiPriority = getUIPriority(apiPriority)\n    switch (uiPriority) {\n      case 1: return 'Urgent'  // P1\n      case 2: return 'High'    // P2\n      case 3: return 'Medium'  // P3\n      default: return 'Normal' // P4\n    }\n  }\n\n  // Handle keyboard input for priority selection\n  useEffect(() => {\n    if (!isVisible) return\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      e.preventDefault()\n      e.stopPropagation()\n\n      switch (e.key) {\n        case '1':\n          onPrioritySelect(4) // P1 = API priority 4\n          break\n        case '2':\n          onPrioritySelect(3) // P2 = API priority 3\n          break\n        case '3':\n          onPrioritySelect(2) // P3 = API priority 2\n          break\n        case '4':\n          onPrioritySelect(1) // P4 = API priority 1\n          break\n        case 'Escape':\n          onClose()\n          break\n      }\n    }\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (e.key === 'p' || e.key === 'P') {\n        onClose()\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyDown)\n    window.addEventListener('keyup', handleKeyUp)\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [isVisible, onPrioritySelect, onClose])\n\n  if (!isVisible) return null\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-2xl p-8 shadow-2xl max-w-lg w-full mx-4\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Set Priority</h2>\n          <p className=\"text-gray-600 mb-8\">Press 1, 2, 3, or 4 to select priority</p>\n          \n          <div className=\"grid grid-cols-2 gap-4\">\n            {[4, 3, 2, 1].map((apiPriority) => {\n              const uiPriority = getUIPriority(apiPriority)\n              const isSelected = currentPriority === apiPriority\n              \n              return (\n                <button\n                  key={apiPriority}\n                  onClick={() => onPrioritySelect(apiPriority as 1 | 2 | 3 | 4)}\n                  className={`\n                    p-6 rounded-xl border-2 font-bold text-lg transition-all duration-200 transform\n                    ${isSelected \n                      ? `${getPriorityColor(apiPriority)} scale-105 shadow-lg` \n                      : 'bg-gray-100 border-gray-300 text-gray-700 hover:bg-gray-200 hover:scale-102'\n                    }\n                  `}\n                >\n                  <div className=\"text-3xl font-black mb-2\">P{uiPriority}</div>\n                  <div className=\"text-sm opacity-90\">{getPriorityLabel(apiPriority)}</div>\n                  <div className=\"text-xs mt-2 opacity-75\">Press {uiPriority}</div>\n                </button>\n              )\n            })}\n          </div>\n          \n          <div className=\"mt-8 text-sm text-gray-500\">\n            Release <kbd className=\"px-2 py-1 bg-gray-100 rounded\">P</kbd> key to close\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAWe,SAAS,gBAAgB,EAAE,eAAe,EAAE,gBAAgB,EAAE,OAAO,EAAE,SAAS,EAAwB;;IACrH,oDAAoD;IACpD,MAAM,gBAAgB,CAAC;QACrB,OAAO,IAAI,YAAY,yBAAyB;;IAClD;IAEA,MAAM,mBAAmB,CAAC;QACxB,MAAM,aAAa,cAAc;QACjC,OAAQ;YACN,KAAK;gBAAG,OAAO,uCAA0C,cAAc;;YACvE,KAAK;gBAAG,OAAO,6CAA6C,YAAY;;YACxE,KAAK;gBAAG,OAAO,yCAA0C,cAAc;;YACvE;gBAAS,OAAO,yCAAyC,cAAc;;QACzE;IACF;IAEA,MAAM,mBAAmB,CAAC;QACxB,MAAM,aAAa,cAAc;QACjC,OAAQ;YACN,KAAK;gBAAG,OAAO,SAAU,KAAK;;YAC9B,KAAK;gBAAG,OAAO,OAAU,KAAK;;YAC9B,KAAK;gBAAG,OAAO,SAAU,KAAK;;YAC9B;gBAAS,OAAO,SAAS,KAAK;;QAChC;IACF;IAEA,+CAA+C;IAC/C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,IAAI,CAAC,WAAW;YAEhB,MAAM;2DAAgB,CAAC;oBACrB,EAAE,cAAc;oBAChB,EAAE,eAAe;oBAEjB,OAAQ,EAAE,GAAG;wBACX,KAAK;4BACH,iBAAiB,GAAG,sBAAsB;;4BAC1C;wBACF,KAAK;4BACH,iBAAiB,GAAG,sBAAsB;;4BAC1C;wBACF,KAAK;4BACH,iBAAiB,GAAG,sBAAsB;;4BAC1C;wBACF,KAAK;4BACH,iBAAiB,GAAG,sBAAsB;;4BAC1C;wBACF,KAAK;4BACH;4BACA;oBACJ;gBACF;;YAEA,MAAM;yDAAc,CAAC;oBACnB,IAAI,EAAE,GAAG,KAAK,OAAO,EAAE,GAAG,KAAK,KAAK;wBAClC;oBACF;gBACF;;YAEA,OAAO,gBAAgB,CAAC,WAAW;YACnC,OAAO,gBAAgB,CAAC,SAAS;YAEjC;6CAAO;oBACL,OAAO,mBAAmB,CAAC,WAAW;oBACtC,OAAO,mBAAmB,CAAC,SAAS;gBACtC;;QACF;oCAAG;QAAC;QAAW;QAAkB;KAAQ;IAEzC,IAAI,CAAC,WAAW,OAAO;IAEvB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAwC;;;;;;kCACtD,6LAAC;wBAAE,WAAU;kCAAqB;;;;;;kCAElC,6LAAC;wBAAI,WAAU;kCACZ;4BAAC;4BAAG;4BAAG;4BAAG;yBAAE,CAAC,GAAG,CAAC,CAAC;4BACjB,MAAM,aAAa,cAAc;4BACjC,MAAM,aAAa,oBAAoB;4BAEvC,qBACE,6LAAC;gCAEC,SAAS,IAAM,iBAAiB;gCAChC,WAAW,CAAC;;oBAEV,EAAE,aACE,GAAG,iBAAiB,aAAa,oBAAoB,CAAC,GACtD,8EACH;kBACH,CAAC;;kDAED,6LAAC;wCAAI,WAAU;;4CAA2B;4CAAE;;;;;;;kDAC5C,6LAAC;wCAAI,WAAU;kDAAsB,iBAAiB;;;;;;kDACtD,6LAAC;wCAAI,WAAU;;4CAA0B;4CAAO;;;;;;;;+BAZ3C;;;;;wBAeX;;;;;;kCAGF,6LAAC;wBAAI,WAAU;;4BAA6B;0CAClC,6LAAC;gCAAI,WAAU;0CAAgC;;;;;;4BAAO;;;;;;;;;;;;;;;;;;;;;;;AAM1E;GA7GwB;KAAA","debugId":null}},
    {"offset": {"line": 2103, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/ProjectSelectionOverlay.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, useRef, useCallback } from 'react'\nimport { TodoistTask, TodoistProject } from '@/lib/types'\n\ninterface ProjectSelectionOverlayProps {\n  projects: TodoistProject[]\n  currentProjectId: string\n  currentTask: TodoistTask\n  onProjectSelect: (projectId: string) => void\n  onClose: () => void\n  isVisible: boolean\n}\n\nexport default function ProjectSelectionOverlay({ \n  projects, \n  currentProjectId, \n  currentTask,\n  onProjectSelect, \n  onClose, \n  isVisible \n}: ProjectSelectionOverlayProps) {\n  const [searchTerm, setSearchTerm] = useState('')\n  const [selectedIndex, setSelectedIndex] = useState(0)\n  const searchInputRef = useRef<HTMLInputElement>(null)\n  const selectedProjectRef = useRef<HTMLButtonElement>(null)\n\n  const getTodoistColor = (colorName: string) => {\n    const colorMap: { [key: string]: string } = {\n      'berry_red': '#b8256f',\n      'red': '#db4035',\n      'orange': '#ff9933',\n      'yellow': '#fad000',\n      'olive_green': '#afb83b',\n      'lime_green': '#7ecc49',\n      'green': '#299438',\n      'mint_green': '#6accbc',\n      'teal': '#158fad',\n      'sky_blue': '#14aaf5',\n      'light_blue': '#96c3eb',\n      'blue': '#4073ff',\n      'grape': '#884dff',\n      'violet': '#af38eb',\n      'lavender': '#eb96eb',\n      'magenta': '#e05194',\n      'salmon': '#ff8d85',\n      'charcoal': '#808080',\n      'grey': '#b8b8b8',\n      'taupe': '#ccac93'\n    }\n    return colorMap[colorName] || '#299fe6'\n  }\n\n  // Build project hierarchy\n  const buildProjectHierarchy = () => {\n    const projectMap = new Map(projects.map(p => [p.id, p]))\n    const rootProjects = projects.filter(p => !p.parentId)\n    const result: Array<TodoistProject & { level: number }> = []\n    \n    const addProjectWithChildren = (project: TodoistProject, level: number) => {\n      if (project.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n        result.push({ ...project, level })\n      }\n      \n      // Add children\n      const children = projects.filter(p => p.parentId === project.id)\n      children.forEach(child => addProjectWithChildren(child, level + 1))\n    }\n    \n    rootProjects.forEach(project => addProjectWithChildren(project, 0))\n    return result\n  }\n  \n  const filteredProjects = buildProjectHierarchy()\n\n  // Reset when opening\n  useEffect(() => {\n    if (isVisible) {\n      setSearchTerm('')\n      setSelectedIndex(0)\n      setTimeout(() => {\n        if (searchInputRef.current) {\n          searchInputRef.current.focus()\n        }\n      }, 100)\n    }\n  }, [isVisible])\n\n  // Update selected index when filtered projects change\n  useEffect(() => {\n    if (selectedIndex >= filteredProjects.length) {\n      setSelectedIndex(Math.max(0, filteredProjects.length - 1))\n    }\n  }, [filteredProjects.length, selectedIndex])\n\n  // Auto-scroll to keep selected project in view\n  useEffect(() => {\n    if (selectedProjectRef.current) {\n      selectedProjectRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center'\n      })\n    }\n  }, [selectedIndex])\n\n  // Handle keyboard navigation\n  useEffect(() => {\n    if (!isVisible) return\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      switch (e.key) {\n        case 'ArrowDown':\n          e.preventDefault()\n          setSelectedIndex(prev => Math.min(prev + 1, filteredProjects.length - 1))\n          break\n        case 'ArrowUp':\n          e.preventDefault()\n          setSelectedIndex(prev => Math.max(prev - 1, 0))\n          break\n        case 'Enter':\n          e.preventDefault()\n          if (filteredProjects[selectedIndex]) {\n            handleProjectSelect(filteredProjects[selectedIndex].id)\n          }\n          break\n        case 'Escape':\n          e.preventDefault()\n          onClose()\n          break\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyDown)\n    return () => window.removeEventListener('keydown', handleKeyDown)\n  }, [isVisible, selectedIndex, filteredProjects])\n\n  const handleProjectSelect = useCallback((projectId: string) => {\n    onProjectSelect(projectId)\n  }, [onProjectSelect])\n\n  if (!isVisible) return null\n\n  return (\n    <div \n      className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\n      onClick={onClose}\n    >\n      <div \n        className=\"bg-white rounded-2xl shadow-2xl max-w-lg w-full mx-4 max-h-[80vh] flex flex-col\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        {/* Task Information Header */}\n        <div className=\"p-6 border-b border-gray-200 bg-blue-50 rounded-t-2xl\">\n          <div className=\"flex items-center gap-3 mb-3\">\n            <div className=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center\">\n              <span className=\"text-white font-bold text-sm\">#</span>\n            </div>\n            <div className=\"flex-1\">\n              <h2 className=\"text-lg font-bold text-blue-900\">Select Project</h2>\n            </div>\n          </div>\n          <h3 className=\"text-sm font-medium text-blue-900 leading-tight\">\n            {currentTask.content}\n          </h3>\n        </div>\n\n        {/* Search Input */}\n        <div className=\"p-6 border-b border-gray-200\">\n          <input\n            ref={searchInputRef}\n            type=\"text\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            placeholder=\"Search projects...\"\n          />\n          <div className=\"mt-2 text-sm text-gray-500\">\n            ↑↓ to navigate • Enter to select • Esc to cancel\n          </div>\n        </div>\n\n        {/* Projects List */}\n        <div className=\"flex-1 overflow-y-auto p-4\">\n          {filteredProjects.length === 0 ? (\n            <div className=\"text-center py-8 text-gray-500\">\n              {searchTerm ? `No projects found for \"${searchTerm}\"` : 'No projects available'}\n            </div>\n          ) : (\n            <div className=\"space-y-1\">\n              {filteredProjects.map((project, index) => {\n                const isSelected = index === selectedIndex\n                const isCurrent = project.id === currentProjectId\n                const projectColor = getTodoistColor(project.color)\n                \n                return (\n                  <button\n                    key={project.id}\n                    ref={isSelected ? selectedProjectRef : null}\n                    onClick={() => handleProjectSelect(project.id)}\n                    className={`\n                      w-full text-left p-3 rounded-md transition-all duration-150 flex items-center space-x-3 border\n                      ${isSelected \n                        ? 'bg-blue-50 border-blue-300' \n                        : isCurrent\n                        ? 'bg-green-50 border-green-200'\n                        : 'hover:bg-gray-50 border-transparent'\n                      }\n                    `}\n                    style={{ paddingLeft: `${1 + project.level * 1.5}rem` }}\n                  >\n                    {project.level > 0 && (\n                      <div className=\"flex items-center text-gray-400 -ml-2\">\n                        {'└'.padStart(project.level * 2, '  ')}\n                      </div>\n                    )}\n                    <div \n                      className=\"w-4 h-4 rounded-full flex-shrink-0\"\n                      style={{ backgroundColor: projectColor }}\n                    ></div>\n                    <div className=\"flex-1 min-w-0\">\n                      <div className={`font-medium text-sm ${\n                        isCurrent ? 'text-green-800' : 'text-gray-900'\n                      }`}>\n                        {project.name}\n                        {isCurrent && <span className=\"ml-2 text-green-600\">✓ Current</span>}\n                      </div>\n                    </div>\n                    {isSelected && (\n                      <div className=\"text-xs font-bold text-blue-500\">\n                        ↵\n                      </div>\n                    )}\n                  </button>\n                )\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2469, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/LabelSelectionOverlay.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, useRef, useCallback } from 'react'\nimport { TodoistTask, TodoistLabel } from '@/lib/types'\n\ninterface LabelSelectionOverlayProps {\n  labels: TodoistLabel[]\n  currentTask: TodoistTask\n  onLabelsChange: (labels: string[]) => void\n  onClose: () => void\n  isVisible: boolean\n}\n\nexport default function LabelSelectionOverlay({ \n  labels, \n  currentTask, \n  onLabelsChange, \n  onClose, \n  isVisible \n}: LabelSelectionOverlayProps) {\n  const [searchTerm, setSearchTerm] = useState('')\n  const [selectedLabels, setSelectedLabels] = useState<string[]>(currentTask.labels)\n  const [selectedIndex, setSelectedIndex] = useState(0)\n  const searchInputRef = useRef<HTMLInputElement>(null)\n  const selectedLabelRef = useRef<HTMLButtonElement>(null)\n\n  const getTodoistColor = (colorName: string) => {\n    const colorMap: { [key: string]: string } = {\n      'berry_red': '#b8256f',\n      'red': '#db4035',\n      'orange': '#ff9933',\n      'yellow': '#fad000',\n      'olive_green': '#afb83b',\n      'lime_green': '#7ecc49',\n      'green': '#299438',\n      'mint_green': '#6accbc',\n      'teal': '#158fad',\n      'sky_blue': '#14aaf5',\n      'light_blue': '#96c3eb',\n      'blue': '#4073ff',\n      'grape': '#884dff',\n      'violet': '#af38eb',\n      'lavender': '#eb96eb',\n      'magenta': '#e05194',\n      'salmon': '#ff8d85',\n      'charcoal': '#808080',\n      'grey': '#b8b8b8',\n      'taupe': '#ccac93'\n    }\n    return colorMap[colorName] || '#299fe6'\n  }\n\n  // Filter labels based on search term\n  const filteredLabels = labels.filter(label => \n    label.name.toLowerCase().includes(searchTerm.toLowerCase())\n  )\n\n  // Reset when opening\n  useEffect(() => {\n    if (isVisible) {\n      setSearchTerm('')\n      setSelectedLabels(currentTask.labels)\n      setSelectedIndex(0)\n      setTimeout(() => {\n        if (searchInputRef.current) {\n          searchInputRef.current.focus()\n        }\n      }, 100)\n    }\n  }, [isVisible, currentTask.labels])\n\n  // Update selected index when filtered labels change\n  useEffect(() => {\n    if (selectedIndex >= filteredLabels.length) {\n      setSelectedIndex(Math.max(0, filteredLabels.length - 1))\n    }\n  }, [filteredLabels.length, selectedIndex])\n\n  // Auto-scroll to keep selected label in view\n  useEffect(() => {\n    if (selectedLabelRef.current) {\n      selectedLabelRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center'\n      })\n    }\n  }, [selectedIndex])\n\n  // Handle keyboard navigation\n  useEffect(() => {\n    if (!isVisible) return\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      switch (e.key) {\n        case 'ArrowDown':\n          e.preventDefault()\n          setSelectedIndex(prev => Math.min(prev + 1, filteredLabels.length - 1))\n          break\n        case 'ArrowUp':\n          e.preventDefault()\n          setSelectedIndex(prev => Math.max(prev - 1, 0))\n          break\n        case 'Enter':\n        case ' ':\n          e.preventDefault()\n          if (filteredLabels[selectedIndex]) {\n            toggleLabel(filteredLabels[selectedIndex].name)\n          }\n          break\n        case 'Escape':\n          e.preventDefault()\n          onClose()\n          break\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyDown)\n    return () => window.removeEventListener('keydown', handleKeyDown)\n  }, [isVisible, selectedIndex, filteredLabels])\n\n  const toggleLabel = useCallback((labelName: string) => {\n    const newLabels = selectedLabels.includes(labelName)\n      ? selectedLabels.filter(l => l !== labelName)\n      : [...selectedLabels, labelName]\n    \n    setSelectedLabels(newLabels)\n    // Apply immediately\n    onLabelsChange(newLabels)\n  }, [selectedLabels, onLabelsChange])\n\n\n  if (!isVisible) return null\n\n  return (\n    <div \n      className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\n      onClick={onClose}\n    >\n      <div \n        className=\"bg-white rounded-2xl shadow-2xl max-w-lg w-full mx-4 max-h-[80vh] flex flex-col\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        {/* Task Information Header */}\n        <div className=\"p-6 border-b border-gray-200 bg-green-50 rounded-t-2xl\">\n          <div className=\"flex items-center gap-3 mb-3\">\n            <div className=\"w-8 h-8 bg-green-500 rounded-full flex items-center justify-center\">\n              <span className=\"text-white font-bold text-sm\">@</span>\n            </div>\n            <div className=\"flex-1\">\n              <h2 className=\"text-lg font-bold text-green-900\">Select Labels</h2>\n              <div className=\"text-sm text-green-700 mt-1\">\n                {selectedLabels.length} label{selectedLabels.length !== 1 ? 's' : ''} selected\n              </div>\n            </div>\n          </div>\n          <h3 className=\"text-sm font-medium text-green-900 leading-tight\">\n            {currentTask.content}\n          </h3>\n        </div>\n\n        {/* Search Input */}\n        <div className=\"p-6 border-b border-gray-200\">\n          <input\n            ref={searchInputRef}\n            type=\"text\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-green-500 focus:border-transparent\"\n            placeholder=\"Search labels...\"\n          />\n          <div className=\"mt-2 text-sm text-gray-500\">\n            ↑↓ to navigate • Enter/Space to toggle • Esc to cancel\n          </div>\n        </div>\n\n        {/* Selected Labels Summary */}\n        {selectedLabels.length > 0 && (\n          <div className=\"px-6 py-3 bg-gray-50 border-b border-gray-200\">\n            <div className=\"flex flex-wrap gap-2\">\n              {selectedLabels.map((labelName) => {\n                const label = labels.find(l => l.name === labelName)\n                const labelColor = label ? getTodoistColor(label.color) : '#299fe6'\n                return (\n                  <span\n                    key={labelName}\n                    className=\"text-xs px-2 py-1 rounded-full flex items-center space-x-1\"\n                    style={{ backgroundColor: `${labelColor}20`, color: labelColor }}\n                  >\n                    <div \n                      className=\"w-2 h-2 rounded-full flex-shrink-0\"\n                      style={{ backgroundColor: labelColor }}\n                    ></div>\n                    <span>{labelName}</span>\n                    <button\n                      onClick={() => toggleLabel(labelName)}\n                      className=\"ml-1 hover:scale-125 transition-transform\"\n                    >\n                      ×\n                    </button>\n                  </span>\n                )\n              })}\n            </div>\n          </div>\n        )}\n\n        {/* Labels List */}\n        <div className=\"flex-1 overflow-y-auto p-4\">\n          {filteredLabels.length === 0 ? (\n            <div className=\"text-center py-8 text-gray-500\">\n              {searchTerm ? `No labels found for \"${searchTerm}\"` : 'No labels available'}\n            </div>\n          ) : (\n            <div className=\"space-y-1\">\n              {filteredLabels.map((label, index) => {\n                const isSelected = index === selectedIndex\n                const isChecked = selectedLabels.includes(label.name)\n                const labelColor = getTodoistColor(label.color)\n                \n                return (\n                  <button\n                    key={label.id}\n                    ref={isSelected ? selectedLabelRef : null}\n                    onClick={() => toggleLabel(label.name)}\n                    className={`\n                      w-full text-left p-3 rounded-md transition-all duration-150 flex items-center space-x-3 border\n                      ${isSelected \n                        ? 'bg-green-50 border-green-300' \n                        : isChecked\n                        ? 'bg-gray-50 border-gray-200'\n                        : 'hover:bg-gray-50 border-transparent'\n                      }\n                    `}\n                  >\n                    <div className=\"flex items-center\">\n                      <input\n                        type=\"checkbox\"\n                        checked={isChecked}\n                        onChange={() => {}} // Handled by button click\n                        className=\"w-4 h-4 rounded focus:ring-green-500\"\n                        style={{ accentColor: labelColor }}\n                      />\n                    </div>\n                    <div \n                      className=\"w-4 h-4 rounded-full flex-shrink-0\"\n                      style={{ backgroundColor: labelColor }}\n                    ></div>\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"font-medium text-sm text-gray-900\">\n                        {label.name}\n                      </div>\n                    </div>\n                    {isSelected && (\n                      <div className=\"text-xs font-bold text-green-500\">\n                        ↵\n                      </div>\n                    )}\n                  </button>\n                )\n              })}\n            </div>\n          )}\n        </div>\n\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2898, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/SmartDueDateInput.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useCallback, useRef, useEffect, forwardRef } from 'react'\n\ninterface SmartDueDateInputProps {\n  value: string\n  onChange: (value: string) => void\n  placeholder?: string\n}\n\n// Common natural language patterns that Todoist recognizes\nconst RECOGNIZED_PATTERNS = [\n  // Relative dates\n  /\\b(today|tomorrow|yesterday)\\b/gi,\n  /\\b(next|this)\\s+(monday|tuesday|wednesday|thursday|friday|saturday|sunday|week|month|year)\\b/gi,\n  /\\bin\\s+(\\d+)\\s+(day|week|month|year)s?\\b/gi,\n  /\\b(\\d+)\\s+(day|week|month|year)s?\\s+(from\\s+now|later)\\b/gi,\n  \n  // Specific dates\n  /\\b(jan|january|feb|february|mar|march|apr|april|may|jun|june|jul|july|aug|august|sep|september|oct|october|nov|november|dec|december)\\s+(\\d{1,2})\\b/gi,\n  /\\b(\\d{1,2})\\/(\\d{1,2})(\\/\\d{2,4})?\\b/gi,\n  /\\b(\\d{1,2})-(\\d{1,2})(-\\d{2,4})?\\b/gi,\n  \n  // Times\n  /\\b(at\\s+)?(\\d{1,2}):(\\d{2})\\s*(am|pm)?\\b/gi,\n  /\\b(at\\s+)?(\\d{1,2})\\s*(am|pm)\\b/gi,\n  /\\b(morning|afternoon|evening|night|noon|midnight)\\b/gi,\n  \n  // Days of week\n  /\\b(monday|tuesday|wednesday|thursday|friday|saturday|sunday|mon|tue|wed|thu|fri|sat|sun)\\b/gi,\n  \n  // Special keywords\n  /\\b(end\\s+of\\s+(week|month|year)|beginning\\s+of\\s+(week|month|year))\\b/gi,\n  /\\b(every\\s+(day|week|month|year)|daily|weekly|monthly|yearly)\\b/gi,\n]\n\nconst SmartDueDateInput = forwardRef<HTMLInputElement, SmartDueDateInputProps>(function SmartDueDateInput({ value, onChange, placeholder = \"e.g., tomorrow, next friday, in 2 weeks...\" }, ref) {\n  const [highlightedText, setHighlightedText] = useState<JSX.Element[]>([])\n  const internalRef = useRef<HTMLInputElement>(null)\n  const inputRef = ref || internalRef\n  \n  const highlightText = useCallback((text: string) => {\n    if (!text) {\n      setHighlightedText([])\n      return\n    }\n\n    let lastIndex = 0\n    const parts: JSX.Element[] = []\n    const matches: Array<{ start: number; end: number; match: string }> = []\n    \n    // Find all matches\n    RECOGNIZED_PATTERNS.forEach(pattern => {\n      let match\n      while ((match = pattern.exec(text)) !== null) {\n        matches.push({\n          start: match.index,\n          end: match.index + match[0].length,\n          match: match[0]\n        })\n      }\n    })\n    \n    // Sort matches by position and remove overlaps\n    matches.sort((a, b) => a.start - b.start)\n    const validMatches = matches.filter((match, index) => {\n      if (index === 0) return true\n      const prevMatch = matches[index - 1]\n      return match.start >= prevMatch.end\n    })\n    \n    // Build highlighted text\n    validMatches.forEach((match, index) => {\n      // Add text before match\n      if (match.start > lastIndex) {\n        parts.push(\n          <span key={`text-${index}`} className=\"text-gray-900\">\n            {text.slice(lastIndex, match.start)}\n          </span>\n        )\n      }\n      \n      // Add highlighted match\n      parts.push(\n        <span \n          key={`match-${index}`} \n          className=\"bg-blue-100 text-blue-800 px-1 rounded font-medium\"\n        >\n          {match.match}\n        </span>\n      )\n      \n      lastIndex = match.end\n    })\n    \n    // Add remaining text\n    if (lastIndex < text.length) {\n      parts.push(\n        <span key=\"remaining\" className=\"text-gray-900\">\n          {text.slice(lastIndex)}\n        </span>\n      )\n    }\n    \n    setHighlightedText(parts)\n  }, [])\n  \n  useEffect(() => {\n    highlightText(value)\n  }, [value, highlightText])\n  \n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = e.target.value\n    onChange(newValue)\n    highlightText(newValue)\n  }\n  \n  const hasRecognizedPatterns = highlightedText.some(part => \n    part.props.className?.includes('bg-blue-100')\n  )\n  \n  return (\n    <div className=\"relative\">\n      <div className=\"relative\">\n        {/* Invisible overlay showing highlighted text */}\n        <div \n          className=\"absolute inset-0 px-3 py-2 pointer-events-none whitespace-pre-wrap break-words text-transparent border border-transparent\"\n          style={{ \n            font: 'inherit',\n            lineHeight: 'inherit',\n            wordWrap: 'break-word',\n            whiteSpace: 'pre-wrap'\n          }}\n        >\n          {highlightedText.length > 0 ? highlightedText : (\n            <span className=\"text-gray-400\">{value ? '' : placeholder}</span>\n          )}\n        </div>\n        \n        {/* Actual input */}\n        <input\n          ref={inputRef}\n          type=\"text\"\n          value={value}\n          onChange={handleInputChange}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-todoist-blue focus:border-transparent bg-transparent relative z-10\"\n          placeholder={placeholder}\n          style={{ color: 'transparent' }}\n        />\n      </div>\n      \n      {/* Status indicator */}\n      <div className=\"mt-1 flex items-center justify-between text-xs\">\n        <span className=\"text-gray-500\">\n          Use natural language like \"tomorrow\", \"next Friday\", \"in 2 weeks\"\n        </span>\n        {value && (\n          <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n            hasRecognizedPatterns \n              ? 'bg-green-100 text-green-700' \n              : 'bg-yellow-100 text-yellow-700'\n          }`}>\n            {hasRecognizedPatterns ? '✓ Recognized' : '⚠ May not parse correctly'}\n          </span>\n        )}\n      </div>\n    </div>\n  )\n})\n\nexport default SmartDueDateInput"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3114, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/ScheduledDateSelector.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, useRef, useCallback } from 'react'\nimport { TodoistTask } from '@/lib/types'\nimport SmartDueDateInput from './SmartDueDateInput'\n\ninterface ScheduledDateSelectorProps {\n  currentTask: TodoistTask\n  onScheduledDateChange: (dateString: string) => void\n  onClose: () => void\n  isVisible: boolean\n}\n\ninterface DateSuggestion {\n  id: string\n  label: string\n  sublabel?: string\n  dateString: string\n  icon?: string\n}\n\nexport default function ScheduledDateSelector({ \n  currentTask,\n  onScheduledDateChange, \n  onClose, \n  isVisible \n}: ScheduledDateSelectorProps) {\n  const [searchTerm, setSearchTerm] = useState('')\n  const [selectedIndex, setSelectedIndex] = useState(0)\n  const searchInputRef = useRef<HTMLInputElement>(null)\n  const selectedSuggestionRef = useRef<HTMLButtonElement>(null)\n  \n  // Convert API priority (1-4) to UI priority (P4-P1) \n  const getUIPriority = (apiPriority: number) => {\n    return 5 - apiPriority // 4→P1, 3→P2, 2→P3, 1→P4\n  }\n\n  const getPriorityColor = (apiPriority: number) => {\n    const uiPriority = getUIPriority(apiPriority)\n    switch (uiPriority) {\n      case 1: return 'text-red-600 bg-red-50 border-red-200'    // P1 = Urgent\n      case 2: return 'text-orange-600 bg-orange-50 border-orange-200' // P2 = High\n      case 3: return 'text-blue-600 bg-blue-50 border-blue-200'  // P3 = Medium\n      default: return 'text-gray-600 bg-gray-50 border-gray-200' // P4 = Normal\n    }\n  }\n\n  // Generate smart suggestions based on current context\n  const generateSuggestions = useCallback((): DateSuggestion[] => {\n    const today = new Date()\n    const suggestions: DateSuggestion[] = []\n    \n    // Priority-based suggestions\n    const uiPriority = getUIPriority(currentTask.priority)\n    \n    if (uiPriority === 1) { // P1 - Urgent\n      suggestions.push(\n        { id: 'now', label: 'Right now', sublabel: 'Start immediately', dateString: 'now', icon: '🔥' },\n        { id: 'today', label: 'Today', sublabel: 'Within the day', dateString: 'today', icon: '📅' },\n        { id: 'tomorrow-morning', label: 'Tomorrow morning', sublabel: 'Early start', dateString: 'tomorrow at 9am', icon: '🌅' }\n      )\n    } else if (uiPriority === 2) { // P2 - High\n      suggestions.push(\n        { id: 'today', label: 'Today', sublabel: 'Get it done today', dateString: 'today', icon: '📅' },\n        { id: 'tomorrow', label: 'Tomorrow', sublabel: 'Next business day', dateString: 'tomorrow', icon: '➡️' },\n        { id: 'monday', label: 'Monday morning', sublabel: 'Start of week', dateString: 'Monday at 9am', icon: '🌅' }\n      )\n    } else { // P3/P4 - Medium/Normal\n      suggestions.push(\n        { id: 'tomorrow', label: 'Tomorrow', sublabel: 'Next day', dateString: 'tomorrow', icon: '➡️' },\n        { id: 'next-week', label: 'Next week', sublabel: 'When you have time', dateString: 'next Monday', icon: '📅' },\n        { id: 'weekend', label: 'This weekend', sublabel: 'Saturday morning', dateString: 'Saturday at 10am', icon: '🏠' }\n      )\n    }\n    \n    // Add contextual suggestions based on deadline\n    if (currentTask.deadline) {\n      const deadlineDate = new Date(currentTask.deadline.date)\n      const daysUntilDeadline = Math.ceil((deadlineDate.getTime() - today.getTime()) / (1000 * 60 * 60 * 24))\n      \n      if (daysUntilDeadline > 7) {\n        suggestions.push({ id: 'week-before', label: 'Week before deadline', sublabel: 'Leave time for completion', dateString: 'in ' + (daysUntilDeadline - 7) + ' days', icon: '⏰' })\n      }\n      if (daysUntilDeadline > 3) {\n        suggestions.push({ id: 'few-days-before', label: 'Few days before deadline', sublabel: 'Final push', dateString: 'in ' + (daysUntilDeadline - 3) + ' days', icon: '⚡' })\n      }\n    }\n    \n    // Common scheduling options\n    suggestions.push(\n      { id: 'tonight', label: 'Tonight', sublabel: 'After work', dateString: 'today at 7pm', icon: '🌙' },\n      { id: 'lunch', label: 'During lunch', sublabel: 'Quick session', dateString: 'today at 12pm', icon: '🍽️' },\n      { id: 'end-of-week', label: 'End of week', sublabel: 'Friday afternoon', dateString: 'Friday at 3pm', icon: '📋' }\n    )\n    \n    return suggestions\n  }, [currentTask.priority, currentTask.deadline])\n\n  const suggestions = generateSuggestions()\n  \n  // Filter suggestions based on search term and add custom option\n  const filteredSuggestions = (() => {\n    const filtered = suggestions.filter(suggestion => \n      suggestion.label.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      suggestion.sublabel?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      suggestion.dateString.toLowerCase().includes(searchTerm.toLowerCase())\n    )\n    \n    // Add custom option at top if user is typing something specific\n    if (searchTerm.trim() && !filtered.some(s => s.dateString.toLowerCase() === searchTerm.toLowerCase())) {\n      filtered.unshift({\n        id: 'custom',\n        label: `\"${searchTerm}\"`,\n        sublabel: 'Use your custom input',\n        dateString: searchTerm,\n        icon: '✏️'\n      })\n    }\n    \n    return filtered\n  })()\n\n  // Reset when opening\n  useEffect(() => {\n    if (isVisible) {\n      setSearchTerm('')\n      setSelectedIndex(0)\n      setTimeout(() => {\n        if (searchInputRef.current) {\n          searchInputRef.current.focus()\n        }\n      }, 100)\n    }\n  }, [isVisible])\n\n  // Update selected index when filtered suggestions change\n  useEffect(() => {\n    if (selectedIndex >= filteredSuggestions.length) {\n      setSelectedIndex(Math.max(0, filteredSuggestions.length - 1))\n    }\n  }, [filteredSuggestions.length, selectedIndex])\n\n  // Auto-scroll to keep selected suggestion in view\n  useEffect(() => {\n    if (selectedSuggestionRef.current) {\n      selectedSuggestionRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center'\n      })\n    }\n  }, [selectedIndex])\n\n  // Handle keyboard navigation and auto-focus typing\n  useEffect(() => {\n    if (!isVisible) return\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      // First handle special navigation keys\n      switch (e.key) {\n        case 'ArrowDown':\n          e.preventDefault()\n          setSelectedIndex(prev => Math.min(prev + 1, filteredSuggestions.length - 1))\n          return\n        case 'ArrowUp':\n          e.preventDefault()\n          setSelectedIndex(prev => Math.max(prev - 1, 0))\n          return\n        case 'Enter':\n          e.preventDefault()\n          if (searchTerm.trim()) {\n            // Use custom search term\n            handleApply(searchTerm.trim())\n          } else if (filteredSuggestions[selectedIndex]) {\n            // Use selected suggestion\n            handleApply(filteredSuggestions[selectedIndex].dateString)\n          }\n          return\n        case 'Escape':\n          e.preventDefault()\n          onClose()\n          return\n        case 'Tab':\n          // Allow tab for accessibility but don't capture other keys if tabbing\n          return\n      }\n\n      // For all other keys (letters, numbers, space, etc.), focus the input and let it handle the typing\n      if (searchInputRef.current && document.activeElement !== searchInputRef.current) {\n        // Only capture printable characters and backspace/delete\n        const isPrintable = e.key.length === 1 || e.key === 'Backspace' || e.key === 'Delete'\n        if (isPrintable) {\n          e.preventDefault()\n          searchInputRef.current.focus()\n          \n          // If it's a printable character, add it to the search term\n          if (e.key.length === 1) {\n            setSearchTerm(prev => prev + e.key)\n          } else if (e.key === 'Backspace') {\n            setSearchTerm(prev => prev.slice(0, -1))\n          }\n        }\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyDown)\n    return () => window.removeEventListener('keydown', handleKeyDown)\n  }, [isVisible, selectedIndex, filteredSuggestions, searchTerm])\n\n  const handleApply = (dateString: string) => {\n    onScheduledDateChange(dateString)\n    onClose()\n  }\n\n  const handleSuggestionClick = useCallback((dateString: string) => {\n    handleApply(dateString)\n  }, [])\n\n  const handleClearDate = () => {\n    onScheduledDateChange('')\n    onClose()\n  }\n\n  if (!isVisible) return null\n\n  return (\n    <div \n      className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\n      onClick={onClose}\n    >\n      <div \n        className=\"bg-white rounded-2xl shadow-2xl max-w-lg w-full mx-4 max-h-[80vh] flex flex-col\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        {/* Task Information Header */}\n        <div className=\"p-6 border-b border-gray-200 bg-blue-50 rounded-t-2xl\">\n          <div className=\"flex items-center gap-3 mb-3\">\n            <div className=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center\">\n              <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n              </svg>\n            </div>\n            <div className=\"flex-1\">\n              <h2 className=\"text-lg font-bold text-blue-900\">Schedule Task</h2>\n              <div className=\"flex items-center gap-2 mt-1\">\n                <span className={`px-2 py-1 text-xs font-medium rounded-md border ${getPriorityColor(currentTask.priority)}`}>\n                  P{getUIPriority(currentTask.priority)}\n                </span>\n              </div>\n            </div>\n          </div>\n          <h3 className=\"text-sm font-medium text-blue-900 leading-tight\">\n            {currentTask.content}\n          </h3>\n        </div>\n\n        {/* Search Input */}\n        <div className=\"p-6 border-b border-gray-200\">\n          <SmartDueDateInput\n            ref={searchInputRef}\n            value={searchTerm}\n            onChange={setSearchTerm}\n            placeholder=\"When will you work on this? (e.g., tomorrow, next week)\"\n          />\n          <div className=\"mt-2 text-sm text-gray-500\">\n            Type or select from suggestions below • ↑↓ to navigate • Enter to apply\n          </div>\n        </div>\n\n        {/* Suggestions List */}\n        <div className=\"flex-1 overflow-y-auto p-4\">\n          {currentTask.due && (\n            <div className=\"mb-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"text-sm\">\n                  <span className=\"font-medium text-blue-800\">Currently scheduled: </span>\n                  <span className=\"text-blue-700\">{currentTask.due.string}</span>\n                </div>\n                <button\n                  onClick={handleClearDate}\n                  className=\"text-xs text-blue-600 hover:text-blue-800 hover:underline\"\n                >\n                  Clear\n                </button>\n              </div>\n            </div>\n          )}\n          \n          {filteredSuggestions.length === 0 ? (\n            <div className=\"text-center py-8 text-gray-500\">\n              {searchTerm ? `No suggestions for \"${searchTerm}\"` : 'No suggestions available'}\n            </div>\n          ) : (\n            <div className=\"space-y-1\">\n              {filteredSuggestions.map((suggestion, index) => {\n                const isSelected = index === selectedIndex\n                \n                return (\n                  <button\n                    key={suggestion.id}\n                    ref={isSelected ? selectedSuggestionRef : null}\n                    onClick={() => handleSuggestionClick(suggestion.dateString)}\n                    className={`\n                      w-full text-left p-3 rounded-md transition-all duration-150 flex items-center space-x-3 border\n                      ${isSelected \n                        ? 'bg-blue-50 border-blue-300' \n                        : suggestion.id === 'custom'\n                        ? 'bg-green-50 border-green-200 hover:bg-green-100'\n                        : 'hover:bg-gray-50 border-transparent'\n                      }\n                    `}\n                  >\n                    <div className=\"text-sm flex-shrink-0\">\n                      {suggestion.icon}\n                    </div>\n                    <div className=\"flex-1 min-w-0\">\n                      <div className={`font-medium text-sm ${\n                        suggestion.id === 'custom' ? 'text-green-800' : 'text-gray-900'\n                      }`}>\n                        {suggestion.label}\n                      </div>\n                      {suggestion.sublabel && (\n                        <div className=\"text-xs text-gray-500 truncate\">\n                          {suggestion.sublabel}\n                        </div>\n                      )}\n                    </div>\n                    {isSelected && (\n                      <div className={`text-xs font-bold ${\n                        suggestion.id === 'custom' ? 'text-green-600' : 'text-blue-500'\n                      }`}>\n                        ↵\n                      </div>\n                    )}\n                  </button>\n                )\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3690, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/DeadlineSelector.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, useRef, useCallback } from 'react'\nimport { TodoistTask } from '@/lib/types'\nimport SmartDueDateInput from './SmartDueDateInput'\n\ninterface DeadlineSelectorProps {\n  currentTask: TodoistTask\n  onDeadlineChange: (dateString: string) => void\n  onClose: () => void\n  isVisible: boolean\n}\n\ninterface DateSuggestion {\n  id: string\n  label: string\n  sublabel?: string\n  dateString: string\n  icon?: string\n}\n\nexport default function DeadlineSelector({ \n  currentTask,\n  onDeadlineChange, \n  onClose, \n  isVisible \n}: DeadlineSelectorProps) {\n  const [searchTerm, setSearchTerm] = useState('')\n  const [selectedIndex, setSelectedIndex] = useState(0)\n  const searchInputRef = useRef<HTMLInputElement>(null)\n  const selectedSuggestionRef = useRef<HTMLButtonElement>(null)\n  \n  // Convert API priority (1-4) to UI priority (P4-P1) \n  const getUIPriority = (apiPriority: number) => {\n    return 5 - apiPriority // 4→P1, 3→P2, 2→P3, 1→P4\n  }\n\n  const getPriorityColor = (apiPriority: number) => {\n    const uiPriority = getUIPriority(apiPriority)\n    switch (uiPriority) {\n      case 1: return 'text-red-600 bg-red-50 border-red-200'    // P1 = Urgent\n      case 2: return 'text-orange-600 bg-orange-50 border-orange-200' // P2 = High\n      case 3: return 'text-blue-600 bg-blue-50 border-blue-200'  // P3 = Medium\n      default: return 'text-gray-600 bg-gray-50 border-gray-200' // P4 = Normal\n    }\n  }\n\n  // Generate smart suggestions based on current context\n  const generateSuggestions = useCallback((): DateSuggestion[] => {\n    const today = new Date()\n    const suggestions: DateSuggestion[] = []\n    \n    // Priority-based suggestions\n    const uiPriority = getUIPriority(currentTask.priority)\n    \n    if (uiPriority === 1) { // P1 - Urgent\n      suggestions.push(\n        { id: 'today', label: 'End of today', sublabel: 'Must be done today', dateString: 'today', icon: '🔥' },\n        { id: 'tomorrow', label: 'Tomorrow', sublabel: 'Absolute deadline', dateString: 'tomorrow', icon: '⚡' },\n        { id: 'end-of-week', label: 'End of week', sublabel: 'Latest possible', dateString: 'Friday', icon: '📋' }\n      )\n    } else if (uiPriority === 2) { // P2 - High\n      suggestions.push(\n        { id: 'end-of-week', label: 'End of week', sublabel: 'This Friday', dateString: 'Friday', icon: '📋' },\n        { id: 'next-week', label: 'Next week', sublabel: 'Next Friday', dateString: 'next Friday', icon: '📅' },\n        { id: 'two-weeks', label: 'In 2 weeks', sublabel: 'Reasonable timeline', dateString: 'in 2 weeks', icon: '🗓️' }\n      )\n    } else { // P3/P4 - Medium/Normal\n      suggestions.push(\n        { id: 'next-week', label: 'Next week', sublabel: 'End of next week', dateString: 'next Friday', icon: '📅' },\n        { id: 'end-of-month', label: 'End of month', sublabel: 'Monthly goal', dateString: 'end of month', icon: '🗓️' },\n        { id: 'next-month', label: 'Next month', sublabel: 'Flexible deadline', dateString: 'next month', icon: '📆' }\n      )\n    }\n    \n    // Add contextual suggestions based on scheduled date\n    if (currentTask.due) {\n      const scheduledDate = new Date(currentTask.due.date)\n      const tomorrow = new Date(today)\n      tomorrow.setDate(tomorrow.getDate() + 1)\n      \n      // If scheduled for today/tomorrow, suggest short deadlines\n      if (scheduledDate <= tomorrow) {\n        suggestions.unshift({ \n          id: 'after-scheduled', \n          label: 'Day after scheduled', \n          sublabel: 'Complete after working on it', \n          dateString: 'in 2 days', \n          icon: '✅' \n        })\n      } else {\n        const daysFromScheduled = Math.ceil((scheduledDate.getTime() - today.getTime()) / (1000 * 60 * 60 * 24))\n        suggestions.unshift({ \n          id: 'week-after-scheduled', \n          label: 'Week after scheduled', \n          sublabel: 'Time to complete after starting', \n          dateString: `in ${daysFromScheduled + 7} days`, \n          icon: '✅' \n        })\n      }\n    }\n    \n    // Business deadlines (no times since deadlines don't support times)\n    suggestions.push(\n      { id: 'eod-today', label: 'End of today', sublabel: 'Due by end of day', dateString: 'today', icon: '🕔' },\n      { id: 'monday', label: 'Next Monday', sublabel: 'Start of week', dateString: 'next Monday', icon: '📊' },\n      { id: 'quarter-end', label: 'End of quarter', sublabel: 'Quarterly goal', dateString: 'end of quarter', icon: '🎯' }\n    )\n    \n    return suggestions\n  }, [currentTask.priority, currentTask.due])\n\n  const suggestions = generateSuggestions()\n  \n  // Filter suggestions based on search term and add custom option\n  const filteredSuggestions = (() => {\n    const filtered = suggestions.filter(suggestion => \n      suggestion.label.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      suggestion.sublabel?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      suggestion.dateString.toLowerCase().includes(searchTerm.toLowerCase())\n    )\n    \n    // Add custom option at top if user is typing something specific\n    if (searchTerm.trim() && !filtered.some(s => s.dateString.toLowerCase() === searchTerm.toLowerCase())) {\n      filtered.unshift({\n        id: 'custom',\n        label: `\"${searchTerm}\"`,\n        sublabel: 'Use your custom input',\n        dateString: searchTerm,\n        icon: '✏️'\n      })\n    }\n    \n    return filtered\n  })()\n\n  // Reset when opening\n  useEffect(() => {\n    if (isVisible) {\n      setSearchTerm('')\n      setSelectedIndex(0)\n      setTimeout(() => {\n        if (searchInputRef.current) {\n          searchInputRef.current.focus()\n        }\n      }, 100)\n    }\n  }, [isVisible])\n\n  // Update selected index when filtered suggestions change\n  useEffect(() => {\n    if (selectedIndex >= filteredSuggestions.length) {\n      setSelectedIndex(Math.max(0, filteredSuggestions.length - 1))\n    }\n  }, [filteredSuggestions.length, selectedIndex])\n\n  // Auto-scroll to keep selected suggestion in view\n  useEffect(() => {\n    if (selectedSuggestionRef.current) {\n      selectedSuggestionRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center'\n      })\n    }\n  }, [selectedIndex])\n\n  // Handle keyboard navigation and auto-focus typing\n  useEffect(() => {\n    if (!isVisible) return\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      // First handle special navigation keys\n      switch (e.key) {\n        case 'ArrowDown':\n          e.preventDefault()\n          setSelectedIndex(prev => Math.min(prev + 1, filteredSuggestions.length - 1))\n          return\n        case 'ArrowUp':\n          e.preventDefault()\n          setSelectedIndex(prev => Math.max(prev - 1, 0))\n          return\n        case 'Enter':\n          e.preventDefault()\n          if (searchTerm.trim()) {\n            // Use custom search term\n            handleApply(searchTerm.trim())\n          } else if (filteredSuggestions[selectedIndex]) {\n            // Use selected suggestion\n            handleApply(filteredSuggestions[selectedIndex].dateString)\n          }\n          return\n        case 'Escape':\n          e.preventDefault()\n          onClose()\n          return\n        case 'Tab':\n          // Allow tab for accessibility but don't capture other keys if tabbing\n          return\n      }\n\n      // For all other keys (letters, numbers, space, etc.), focus the input and let it handle the typing\n      if (searchInputRef.current && document.activeElement !== searchInputRef.current) {\n        // Only capture printable characters and backspace/delete\n        const isPrintable = e.key.length === 1 || e.key === 'Backspace' || e.key === 'Delete'\n        if (isPrintable) {\n          e.preventDefault()\n          searchInputRef.current.focus()\n          \n          // If it's a printable character, add it to the search term\n          if (e.key.length === 1) {\n            setSearchTerm(prev => prev + e.key)\n          } else if (e.key === 'Backspace') {\n            setSearchTerm(prev => prev.slice(0, -1))\n          }\n        }\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyDown)\n    return () => window.removeEventListener('keydown', handleKeyDown)\n  }, [isVisible, selectedIndex, filteredSuggestions, searchTerm])\n\n  const handleApply = (dateString: string) => {\n    onDeadlineChange(dateString)\n    onClose()\n  }\n\n  const handleSuggestionClick = useCallback((dateString: string) => {\n    handleApply(dateString)\n  }, [])\n\n  const handleClearDate = () => {\n    onDeadlineChange('')\n    onClose()\n  }\n\n  if (!isVisible) return null\n\n  return (\n    <div \n      className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\n      onClick={onClose}\n    >\n      <div \n        className=\"bg-white rounded-2xl shadow-2xl max-w-lg w-full mx-4 max-h-[80vh] flex flex-col\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        {/* Task Information Header */}\n        <div className=\"p-6 border-b border-gray-200 bg-red-50 rounded-t-2xl\">\n          <div className=\"flex items-center gap-3 mb-3\">\n            <div className=\"w-8 h-8 bg-red-500 rounded-full flex items-center justify-center\">\n              <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n            </div>\n            <div className=\"flex-1\">\n              <h2 className=\"text-lg font-bold text-red-900\">Set Deadline</h2>\n              <div className=\"flex items-center gap-2 mt-1\">\n                <span className={`px-2 py-1 text-xs font-medium rounded-md border ${getPriorityColor(currentTask.priority)}`}>\n                  P{getUIPriority(currentTask.priority)}\n                </span>\n              </div>\n            </div>\n          </div>\n          <h3 className=\"text-sm font-medium text-red-900 leading-tight\">\n            {currentTask.content}\n          </h3>\n        </div>\n\n        {/* Search Input */}\n        <div className=\"p-6 border-b border-gray-200\">\n          <SmartDueDateInput\n            ref={searchInputRef}\n            value={searchTerm}\n            onChange={setSearchTerm}\n            placeholder=\"When must this be done? (e.g., Friday, end of week)\"\n          />\n          <div className=\"mt-2 text-sm text-gray-500\">\n            Type or select from suggestions below • ↑↓ to navigate • Enter to apply\n          </div>\n        </div>\n\n        {/* Suggestions List */}\n        <div className=\"flex-1 overflow-y-auto p-4\">\n          {currentTask.deadline && (\n            <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"text-sm\">\n                  <span className=\"font-medium text-red-800\">Current deadline: </span>\n                  <span className=\"text-red-700\">{currentTask.deadline.string}</span>\n                </div>\n                <button\n                  onClick={handleClearDate}\n                  className=\"text-xs text-red-600 hover:text-red-800 hover:underline\"\n                >\n                  Clear\n                </button>\n              </div>\n            </div>\n          )}\n          \n          {filteredSuggestions.length === 0 ? (\n            <div className=\"text-center py-8 text-gray-500\">\n              {searchTerm ? `No suggestions for \"${searchTerm}\"` : 'No suggestions available'}\n            </div>\n          ) : (\n            <div className=\"space-y-1\">\n              {filteredSuggestions.map((suggestion, index) => {\n                const isSelected = index === selectedIndex\n                \n                return (\n                  <button\n                    key={suggestion.id}\n                    ref={isSelected ? selectedSuggestionRef : null}\n                    onClick={() => handleSuggestionClick(suggestion.dateString)}\n                    className={`\n                      w-full text-left p-3 rounded-md transition-all duration-150 flex items-center space-x-3 border\n                      ${isSelected \n                        ? 'bg-red-50 border-red-300' \n                        : suggestion.id === 'custom'\n                        ? 'bg-green-50 border-green-200 hover:bg-green-100'\n                        : 'hover:bg-gray-50 border-transparent'\n                      }\n                    `}\n                  >\n                    <div className=\"text-sm flex-shrink-0\">\n                      {suggestion.icon}\n                    </div>\n                    <div className=\"flex-1 min-w-0\">\n                      <div className={`font-medium text-sm ${\n                        suggestion.id === 'custom' ? 'text-green-800' : 'text-gray-900'\n                      }`}>\n                        {suggestion.label}\n                      </div>\n                      {suggestion.sublabel && (\n                        <div className=\"text-xs text-gray-500 truncate\">\n                          {suggestion.sublabel}\n                        </div>\n                      )}\n                    </div>\n                    {isSelected && (\n                      <div className={`text-xs font-bold ${\n                        suggestion.id === 'custom' ? 'text-green-600' : 'text-red-500'\n                      }`}>\n                        ↵\n                      </div>\n                    )}\n                  </button>\n                )\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4268, "column": 0}, "map": {"version":3,"sources":["file:///Users/mimen/Documents/GitHub/todoist-mcp/todoist-inbox-processor/components/TaskProcessor.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, useCallback } from 'react'\nimport { TodoistTask, TodoistProject, TodoistLabel, ProcessingState, TaskUpdate } from '@/lib/types'\nimport { generateMockSuggestions } from '@/lib/mock-data'\nimport { suggestionsCache } from '@/lib/suggestions-cache'\nimport TaskCard from './TaskCard'\nimport TaskForm from './TaskForm'\nimport KeyboardShortcuts from './KeyboardShortcuts'\nimport ProgressIndicator from './ProgressIndicator'\nimport ProjectSwitcher from './ProjectSwitcher'\nimport PriorityOverlay from './PriorityOverlay'\nimport ProjectSelectionOverlay from './ProjectSelectionOverlay'\nimport LabelSelectionOverlay from './LabelSelectionOverlay'\nimport ScheduledDateSelector from './ScheduledDateSelector'\nimport DeadlineSelector from './DeadlineSelector'\nimport ProjectSuggestions from './ProjectSuggestions'\n\nexport default function TaskProcessor() {\n  const [state, setState] = useState<ProcessingState>({\n    currentTask: null,\n    queuedTasks: [],\n    processedTasks: [],\n    skippedTasks: [],\n  })\n  \n  const [projects, setProjects] = useState<TodoistProject[]>([])\n  const [labels, setLabels] = useState<TodoistLabel[]>([])\n  const [projectHierarchy, setProjectHierarchy] = useState<any>(null)\n  const [showShortcuts, setShowShortcuts] = useState(false)\n  const [loading, setLoading] = useState(true)\n  const [loadingTasks, setLoadingTasks] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [selectedProjectId, setSelectedProjectId] = useState<string>('')\n  const [allTasks, setAllTasks] = useState<TodoistTask[]>([])\n  const [taskKey, setTaskKey] = useState(0) // Force re-render of TaskForm\n  const [showPriorityOverlay, setShowPriorityOverlay] = useState(false)\n  const [showProjectOverlay, setShowProjectOverlay] = useState(false)\n  const [showLabelOverlay, setShowLabelOverlay] = useState(false)\n  const [showScheduledOverlay, setShowScheduledOverlay] = useState(false)\n  const [showDeadlineOverlay, setShowDeadlineOverlay] = useState(false)\n  const [showArchiveConfirm, setShowArchiveConfirm] = useState(false)\n  const [showCompleteConfirm, setShowCompleteConfirm] = useState(false)\n\n  // Load initial data (projects and labels)\n  useEffect(() => {\n    async function loadInitialData() {\n      try {\n        setLoading(true)\n        setError(null)\n\n        // Fetch projects, labels, and project hierarchy\n        const [projectsRes, labelsRes, hierarchyRes] = await Promise.all([\n          fetch('/api/todoist/projects'),\n          fetch('/api/todoist/labels'),\n          fetch('/api/projects/hierarchy?format=context'),\n        ])\n\n        if (!projectsRes.ok || !labelsRes.ok || !hierarchyRes.ok) {\n          throw new Error('Failed to fetch data from Todoist API')\n        }\n\n        const [projectsData, labelsData, hierarchyData] = await Promise.all([\n          projectsRes.json(),\n          labelsRes.json(),\n          hierarchyRes.json(),\n        ])\n\n        setProjects(projectsData)\n        setLabels(labelsData)\n        setProjectHierarchy(hierarchyData)\n        \n        // Set default to actual inbox project if it exists\n        const inboxProject = projectsData.find((p: any) => p.isInboxProject)\n        setSelectedProjectId(inboxProject?.id || 'inbox')\n      } catch (err) {\n        console.error('Error loading initial data:', err)\n        setError(err instanceof Error ? err.message : 'Failed to load data')\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    loadInitialData()\n  }, [])\n\n  // Load tasks for selected project\n  const loadProjectTasks = useCallback(async (projectId: string) => {\n    if (!projectId) return\n    \n    try {\n      setLoadingTasks(true)\n      setError(null)\n      console.log('Loading tasks for project:', projectId)\n      \n      const tasksRes = await fetch(`/api/todoist/tasks?projectId=${projectId}`)\n      \n      if (!tasksRes.ok) {\n        throw new Error('Failed to fetch tasks')\n      }\n\n      const tasksData = await tasksRes.json()\n      console.log('Loaded tasks:', tasksData)\n      setAllTasks(tasksData)\n\n      // Prefetch suggestions for all tasks when they're loaded\n      if (tasksData.length > 0 && projectHierarchy) {\n        try {\n          await suggestionsCache.prefetchSuggestions(tasksData, projectHierarchy)\n        } catch (error) {\n          console.warn('Failed to prefetch suggestions:', error)\n        }\n      }\n\n      // Set up task processing queue and force form re-render\n      if (tasksData.length > 0) {\n        setState({\n          currentTask: tasksData[0],\n          queuedTasks: tasksData.slice(1),\n          processedTasks: [],\n          skippedTasks: [],\n        })\n        setTaskKey(prev => prev + 1) // Force TaskForm to re-render with new task\n      } else {\n        setState({\n          currentTask: null,\n          queuedTasks: [],\n          processedTasks: [],\n          skippedTasks: [],\n        })\n      }\n    } catch (err) {\n      console.error('Error loading project tasks:', err)\n      setError(err instanceof Error ? err.message : 'Failed to load tasks')\n    } finally {\n      setLoadingTasks(false)\n    }\n  }, [])\n\n  // Load tasks when project changes\n  useEffect(() => {\n    if (projects.length > 0 && selectedProjectId) {\n      loadProjectTasks(selectedProjectId)\n    }\n  }, [selectedProjectId, projects.length, loadProjectTasks])\n  \n  // Update task key when current task changes to force form re-render\n  const moveToNext = useCallback(() => {\n    setState(prev => {\n      const nextTask = prev.queuedTasks[0] || null\n      const remainingQueue = prev.queuedTasks.slice(1)\n      \n      // Force form re-render when task changes\n      if (nextTask) {\n        setTaskKey(prevKey => prevKey + 1)\n        \n        // Prefetch suggestions for the next few tasks if we have project hierarchy\n        if (projectHierarchy && remainingQueue.length > 0) {\n          const tasksToPreload = remainingQueue.slice(0, 3) // Preload next 3 tasks\n          suggestionsCache.prefetchSuggestions(tasksToPreload, projectHierarchy).catch(error => {\n            console.warn('Failed to prefetch suggestions for upcoming tasks:', error)\n          })\n        }\n      }\n      \n      return {\n        ...prev,\n        currentTask: nextTask,\n        queuedTasks: remainingQueue,\n      }\n    })\n  }, [projectHierarchy])\n\n  const autoSaveTask = useCallback(async (taskId: string, updates: TaskUpdate) => {\n    try {\n      console.log('TaskProcessor.autoSaveTask called with:', { taskId, updates })\n      \n      // Update the task via API\n      const response = await fetch(`/api/todoist/tasks/${taskId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updates),\n      })\n\n      console.log('API Response status:', response.status)\n      \n      if (!response.ok) {\n        const errorData = await response.json()\n        console.error('API Response error:', errorData)\n        throw new Error(`Failed to update task: ${errorData.error || response.statusText}`)\n      }\n\n      const responseData = await response.json()\n      console.log('API Response data:', responseData)\n    } catch (err) {\n      console.error('Error auto-saving task:', err)\n      setError(err instanceof Error ? err.message : 'Failed to auto-save task')\n    }\n  }, [])\n\n  const handleContentChange = useCallback(async (newContent: string) => {\n    if (state.currentTask) {\n      // Invalidate suggestions cache since content changed\n      suggestionsCache.invalidateTask(state.currentTask.id)\n      await autoSaveTask(state.currentTask.id, { content: newContent })\n    }\n  }, [state.currentTask, autoSaveTask])\n\n  const handleNext = useCallback(() => {\n    if (!state.currentTask) return\n    \n    setState(prev => ({\n      ...prev,\n      processedTasks: [...prev.processedTasks, prev.currentTask!.id],\n    }))\n    \n    moveToNext()\n  }, [state.currentTask, moveToNext])\n\n  const handlePrioritySelect = useCallback((priority: 1 | 2 | 3 | 4) => {\n    if (state.currentTask) {\n      // Update the task immediately in the UI\n      setState(prev => ({\n        ...prev,\n        currentTask: prev.currentTask ? { ...prev.currentTask, priority } : null\n      }))\n      \n      // Queue the auto-save\n      autoSaveTask(state.currentTask.id, { priority })\n    }\n    setShowPriorityOverlay(false)\n  }, [state.currentTask, autoSaveTask])\n\n  const handleProjectSelect = useCallback((projectId: string) => {\n    if (state.currentTask) {\n      // Update the task immediately in the UI\n      setState(prev => ({\n        ...prev,\n        currentTask: prev.currentTask ? { ...prev.currentTask, projectId } : null\n      }))\n      \n      // Queue the auto-save\n      autoSaveTask(state.currentTask.id, { projectId })\n    }\n    setShowProjectOverlay(false)\n  }, [state.currentTask, autoSaveTask])\n\n  const handleLabelsChange = useCallback((labels: string[]) => {\n    if (state.currentTask) {\n      // Update the task immediately in the UI\n      setState(prev => ({\n        ...prev,\n        currentTask: prev.currentTask ? { ...prev.currentTask, labels } : null\n      }))\n      \n      // Queue the auto-save\n      autoSaveTask(state.currentTask.id, { labels })\n    }\n  }, [state.currentTask, autoSaveTask])\n\n  const handleDescriptionChange = useCallback(async (newDescription: string) => {\n    if (state.currentTask) {\n      // Invalidate suggestions cache since description changed\n      suggestionsCache.invalidateTask(state.currentTask.id)\n      \n      // Update the task immediately in the UI\n      setState(prev => ({\n        ...prev,\n        currentTask: prev.currentTask ? { ...prev.currentTask, description: newDescription } : null\n      }))\n      \n      await autoSaveTask(state.currentTask.id, { description: newDescription })\n    }\n  }, [state.currentTask, autoSaveTask])\n\n  const handleLabelRemove = useCallback((labelName: string) => {\n    if (state.currentTask) {\n      const newLabels = state.currentTask.labels.filter(l => l !== labelName)\n      handleLabelsChange(newLabels)\n    }\n  }, [state.currentTask, handleLabelsChange])\n\n  const navigateToNextTask = useCallback(() => {\n    if (!state.currentTask) return\n    \n    setState(prev => ({\n      ...prev,\n      processedTasks: [...prev.processedTasks, prev.currentTask!.id],\n    }))\n    \n    moveToNext()\n  }, [state.currentTask, moveToNext])\n\n  const navigateToPrevTask = useCallback(() => {\n    if (state.processedTasks.length === 0) return\n    \n    // Move the last processed task back to current\n    setState(prev => {\n      const lastProcessedId = prev.processedTasks[prev.processedTasks.length - 1]\n      const lastProcessedTask = allTasks.find(task => task.id === lastProcessedId)\n      \n      if (!lastProcessedTask) return prev\n      \n      return {\n        ...prev,\n        currentTask: lastProcessedTask,\n        queuedTasks: prev.currentTask ? [prev.currentTask, ...prev.queuedTasks] : prev.queuedTasks,\n        processedTasks: prev.processedTasks.slice(0, -1)\n      }\n    })\n    \n    setTaskKey(prev => prev + 1) // Force re-render\n  }, [state.processedTasks, allTasks])\n\n  const handleScheduledDateChange = useCallback(async (dateString: string) => {\n    if (state.currentTask) {\n      try {\n        // For Todoist, \"scheduled\" means setting a due date with time/duration\n        const updates = { dueString: dateString }\n        await autoSaveTask(state.currentTask.id, updates)\n        \n        // Update UI state\n        if (dateString) {\n          setState(prev => ({\n            ...prev,\n            currentTask: prev.currentTask ? { \n              ...prev.currentTask, \n              due: { \n                date: dateString, \n                string: dateString,\n                recurring: false \n              }\n            } : null\n          }))\n        } else {\n          // Clear the due date\n          setState(prev => ({\n            ...prev,\n            currentTask: prev.currentTask ? { \n              ...prev.currentTask, \n              due: undefined \n            } : null\n          }))\n        }\n      } catch (error) {\n        console.error('Error updating scheduled date:', error)\n      }\n    }\n  }, [state.currentTask, autoSaveTask])\n\n  const handleDeadlineChange = useCallback(async (dateString: string) => {\n    if (state.currentTask) {\n      try {\n        // For Todoist, \"deadline\" is a separate field from due date\n        const updates = { deadline: dateString }\n        await autoSaveTask(state.currentTask.id, updates)\n        \n        // Update UI state\n        if (dateString) {\n          setState(prev => ({\n            ...prev,\n            currentTask: prev.currentTask ? { \n              ...prev.currentTask, \n              deadline: { \n                date: dateString, \n                string: dateString \n              }\n            } : null\n          }))\n        } else {\n          // Clear the deadline\n          setState(prev => ({\n            ...prev,\n            currentTask: prev.currentTask ? { \n              ...prev.currentTask, \n              deadline: undefined \n            } : null\n          }))\n        }\n      } catch (error) {\n        console.error('Error updating deadline:', error)\n      }\n    }\n  }, [state.currentTask, autoSaveTask])\n\n  const handleArchiveTask = useCallback(async () => {\n    if (!state.currentTask) return\n    \n    try {\n      // Use the DELETE endpoint to archive/close the task\n      const response = await fetch(`/api/todoist/tasks/${state.currentTask.id}`, {\n        method: 'DELETE',\n      })\n\n      if (!response.ok) {\n        throw new Error('Failed to archive task')\n      }\n\n      // Move to next task after successful archive\n      setState(prev => ({\n        ...prev,\n        processedTasks: [...prev.processedTasks, prev.currentTask!.id],\n      }))\n      \n      moveToNext()\n    } catch (err) {\n      console.error('Error archiving task:', err)\n      setError(err instanceof Error ? err.message : 'Failed to archive task')\n    }\n    \n    setShowArchiveConfirm(false)\n  }, [state.currentTask, moveToNext])\n\n  const handleCompleteTask = useCallback(async () => {\n    if (!state.currentTask) return\n    \n    try {\n      // Use the DELETE endpoint to complete/close the task\n      const response = await fetch(`/api/todoist/tasks/${state.currentTask.id}`, {\n        method: 'DELETE',\n      })\n\n      if (!response.ok) {\n        throw new Error('Failed to complete task')\n      }\n\n      // Move to next task after successful completion\n      setState(prev => ({\n        ...prev,\n        processedTasks: [...prev.processedTasks, prev.currentTask!.id],\n      }))\n      \n      moveToNext()\n    } catch (err) {\n      console.error('Error completing task:', err)\n      setError(err instanceof Error ? err.message : 'Failed to complete task')\n    }\n    \n    setShowCompleteConfirm(false)\n  }, [state.currentTask, moveToNext])\n\n  const skipTask = useCallback(() => {\n    if (!state.currentTask) return\n    \n    setState(prev => ({\n      ...prev,\n      skippedTasks: [...prev.skippedTasks, prev.currentTask!.id],\n    }))\n    \n    moveToNext()\n  }, [state.currentTask, moveToNext])\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      // Don't handle shortcuts when overlays are open - they handle their own keys\n      if (showPriorityOverlay || showProjectOverlay || showLabelOverlay || showScheduledOverlay || showDeadlineOverlay) {\n        return\n      }\n\n      // Only handle shortcuts when not typing in an input or when dropdowns are open\n      if (e.target instanceof HTMLInputElement || \n          e.target instanceof HTMLTextAreaElement ||\n          document.querySelector('[role=\"listbox\"]') ||\n          document.querySelector('.dropdown-open')) {\n        return\n      }\n\n      switch (e.key) {\n        case 'p':\n        case 'P':\n          e.preventDefault()\n          setShowPriorityOverlay(true)\n          break\n        case '#':\n          e.preventDefault()\n          setShowProjectOverlay(true)\n          break\n        case '@':\n          e.preventDefault()\n          setShowLabelOverlay(true)\n          break\n        case 's':\n        case 'S':\n          e.preventDefault()\n          setShowScheduledOverlay(true)\n          break\n        case 'd':\n        case 'D':\n          e.preventDefault()\n          setShowDeadlineOverlay(true)\n          break\n        case 'j':\n        case 'J':\n        case 'Enter':\n        case 'ArrowRight':\n          e.preventDefault()\n          navigateToNextTask()\n          break\n        case 'k':\n        case 'K':\n        case 'ArrowLeft':\n          e.preventDefault()\n          navigateToPrevTask()\n          break\n        case 'e':\n        case 'E':\n          e.preventDefault()\n          setShowArchiveConfirm(true)\n          break\n        case 'c':\n        case 'C':\n          e.preventDefault()\n          setShowCompleteConfirm(true)\n          break\n        case '?':\n          e.preventDefault()\n          setShowShortcuts(!showShortcuts)\n          break\n        case 'Escape':\n          setShowShortcuts(false)\n          setShowPriorityOverlay(false)\n          setShowProjectOverlay(false)\n          setShowLabelOverlay(false)\n          setShowScheduledOverlay(false)\n          setShowDeadlineOverlay(false)\n          setShowArchiveConfirm(false)\n          setShowCompleteConfirm(false)\n          break\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyDown)\n    return () => window.removeEventListener('keydown', handleKeyDown)\n  }, [navigateToNextTask, navigateToPrevTask, showShortcuts, showPriorityOverlay, showProjectOverlay, showLabelOverlay, showScheduledOverlay, showDeadlineOverlay])\n\n  const totalTasks = allTasks.length\n  const completedTasks = state.processedTasks.length + state.skippedTasks.length\n  const progress = totalTasks > 0 ? (completedTasks / totalTasks) * 100 : 0\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-todoist-blue mx-auto\"></div>\n          <h1 className=\"text-2xl font-bold text-gray-900 mt-4\">Loading Todoist Data...</h1>\n          <p className=\"text-gray-600\">Fetching your inbox tasks, projects, and labels</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"text-6xl mb-4\">❌</div>\n          <h1 className=\"text-3xl font-bold text-red-600 mb-2\">Error Loading Data</h1>\n          <p className=\"text-gray-600 mb-4\">{error}</p>\n          <button\n            onClick={() => window.location.reload()}\n            className=\"px-4 py-2 bg-todoist-blue text-white rounded-md hover:bg-blue-600 transition-colors\"\n          >\n            Retry\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  if (!state.currentTask && state.queuedTasks.length === 0 && !loading) {\n    const projectName = selectedProjectId === 'inbox' ? 'Inbox' : \n                       projects.find(p => p.id === selectedProjectId)?.name || 'Project'\n    \n    return (\n      <div className=\"min-h-screen p-4\">\n        <div className=\"max-w-4xl mx-auto\">\n          {/* Header */}\n          <div className=\"mb-8\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h1 className=\"text-3xl font-bold text-gray-900\">Task Processor</h1>\n              <button\n                onClick={() => setShowShortcuts(!showShortcuts)}\n                className=\"px-3 py-1 text-sm bg-gray-100 hover:bg-gray-200 rounded-md transition-colors\"\n              >\n                Shortcuts <span className=\"kbd\">?</span>\n              </button>\n            </div>\n            \n            {/* Project Switcher */}\n            <ProjectSwitcher\n              projects={projects}\n              selectedProjectId={selectedProjectId}\n              onProjectChange={setSelectedProjectId}\n              taskCount={totalTasks}\n            />\n            \n            {/* Loading State for Task Switching */}\n            {loadingTasks && (\n              <div className=\"bg-white rounded-lg shadow-sm border p-4 mb-6\">\n                <div className=\"flex items-center justify-center space-x-3\">\n                  <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-todoist-blue\"></div>\n                  <span className=\"text-gray-600\">Loading tasks...</span>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Empty State */}\n          {!loadingTasks && (\n            <div className=\"flex items-center justify-center\" style={{ minHeight: '50vh' }}>\n              <div className=\"text-center\">\n                <div className=\"text-6xl mb-4\">\n                  {totalTasks === 0 ? '📭' : '🎉'}\n                </div>\n                <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n                  {totalTasks === 0 ? `${projectName} is Empty` : `${projectName} Complete!`}\n                </h1>\n                <p className=\"text-gray-600 mb-4\">\n                  {totalTasks === 0 \n                    ? `No tasks found in ${projectName}. Try selecting a different project.`\n                    : 'All tasks have been processed.'\n                  }\n                </p>\n                {totalTasks > 0 && (\n                  <div className=\"text-sm text-gray-500\">\n                    Processed: {state.processedTasks.length} • Skipped: {state.skippedTasks.length}\n                  </div>\n                )}\n                <button\n                  onClick={() => loadProjectTasks(selectedProjectId)}\n                  className=\"mt-4 px-4 py-2 bg-todoist-blue text-white rounded-md hover:bg-blue-600 transition-colors\"\n                >\n                  Refresh Tasks\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n        \n        {/* Keyboard Shortcuts Modal */}\n        {showShortcuts && (\n          <KeyboardShortcuts onClose={() => setShowShortcuts(false)} />\n        )}\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen p-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h1 className=\"text-3xl font-bold text-gray-900\">Task Processor</h1>\n            <button\n              onClick={() => setShowShortcuts(!showShortcuts)}\n              className=\"px-3 py-1 text-sm bg-gray-100 hover:bg-gray-200 rounded-md transition-colors\"\n            >\n              Shortcuts <span className=\"kbd\">?</span>\n            </button>\n          </div>\n          \n          {/* Project Switcher */}\n          <ProjectSwitcher\n            projects={projects}\n            selectedProjectId={selectedProjectId}\n            onProjectChange={setSelectedProjectId}\n            taskCount={totalTasks}\n          />\n          \n          {/* Loading State for Task Switching */}\n          {loadingTasks && (\n            <div className=\"bg-white rounded-lg shadow-sm border p-4 mb-6\">\n              <div className=\"flex items-center justify-center space-x-3\">\n                <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-todoist-blue\"></div>\n                <span className=\"text-gray-600\">Loading tasks...</span>\n              </div>\n            </div>\n          )}\n          \n          {totalTasks > 0 && (\n            <ProgressIndicator\n              current={completedTasks + 1}\n              total={totalTasks}\n              progress={progress}\n            />\n          )}\n        </div>\n\n        {/* Main Processing Area */}\n        {state.currentTask && !loadingTasks && (\n          <div className=\"space-y-6\">\n            {/* Full-width Task Card */}\n            <TaskCard \n              task={state.currentTask} \n              projects={projects} \n              labels={labels} \n              onContentChange={handleContentChange}\n              onDescriptionChange={handleDescriptionChange}\n              onProjectClick={() => setShowProjectOverlay(true)}\n              onPriorityClick={() => setShowPriorityOverlay(true)}\n              onLabelAdd={() => setShowLabelOverlay(true)}\n              onLabelRemove={handleLabelRemove}\n              onScheduledClick={() => setShowScheduledOverlay(true)}\n              onDeadlineClick={() => setShowDeadlineOverlay(true)}\n            />\n\n            {/* Task Form Controls */}\n            <TaskForm\n              key={taskKey} // Force re-render when task changes\n              task={state.currentTask}\n              projects={projects}\n              labels={labels}\n              suggestions={generateMockSuggestions(state.currentTask.content)}\n              onAutoSave={(updates) => autoSaveTask(state.currentTask!.id, updates)}\n              onNext={navigateToNextTask}\n              onPrevious={navigateToPrevTask}\n              canGoNext={state.queuedTasks.length > 0}\n              canGoPrevious={state.processedTasks.length > 0}\n            />\n          </div>\n        )}\n\n        {/* Queue Preview */}\n        {state.queuedTasks.length > 0 && (\n          <div className=\"mt-8 p-4 bg-gray-50 rounded-lg\">\n            <h3 className=\"text-sm font-medium text-gray-700 mb-3\">\n              Next in queue ({state.queuedTasks.length} remaining)\n            </h3>\n            <div className=\"space-y-2\">\n              {state.queuedTasks.slice(0, 3).map((task, index) => (\n                <div key={task.id} className=\"text-sm text-gray-600 truncate\">\n                  {index + 1}. {task.content}\n                </div>\n              ))}\n              {state.queuedTasks.length > 3 && (\n                <div className=\"text-sm text-gray-400\">\n                  + {state.queuedTasks.length - 3} more...\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Keyboard Shortcuts Modal */}\n      {showShortcuts && (\n        <KeyboardShortcuts onClose={() => setShowShortcuts(false)} />\n      )}\n\n      {/* Priority Overlay */}\n      {state.currentTask && (\n        <PriorityOverlay\n          currentPriority={state.currentTask.priority}\n          onPrioritySelect={handlePrioritySelect}\n          onClose={() => setShowPriorityOverlay(false)}\n          isVisible={showPriorityOverlay}\n        />\n      )}\n\n      {/* Project Selection Overlay */}\n      {state.currentTask && (\n        <ProjectSelectionOverlay\n          projects={projects}\n          currentProjectId={state.currentTask.projectId}\n          currentTask={state.currentTask}\n          onProjectSelect={handleProjectSelect}\n          onClose={() => setShowProjectOverlay(false)}\n          isVisible={showProjectOverlay}\n        />\n      )}\n\n      {/* Label Selection Overlay */}\n      {state.currentTask && (\n        <LabelSelectionOverlay\n          labels={labels}\n          currentTask={state.currentTask}\n          onLabelsChange={handleLabelsChange}\n          onClose={() => setShowLabelOverlay(false)}\n          isVisible={showLabelOverlay}\n        />\n      )}\n\n      {/* Scheduled Date Selector */}\n      {state.currentTask && (\n        <ScheduledDateSelector\n          currentTask={state.currentTask}\n          onScheduledDateChange={handleScheduledDateChange}\n          onClose={() => setShowScheduledOverlay(false)}\n          isVisible={showScheduledOverlay}\n        />\n      )}\n\n      {/* Deadline Selector */}\n      {state.currentTask && (\n        <DeadlineSelector\n          currentTask={state.currentTask}\n          onDeadlineChange={handleDeadlineChange}\n          onClose={() => setShowDeadlineOverlay(false)}\n          isVisible={showDeadlineOverlay}\n        />\n      )}\n\n      {/* Archive Confirmation Dialog */}\n      {showArchiveConfirm && state.currentTask && (\n        <div \n          className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\n          onClick={() => setShowArchiveConfirm(false)}\n        >\n          <div \n            className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4 p-6\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <h3 className=\"text-lg font-bold text-gray-900 mb-2\">Archive Task?</h3>\n            <p className=\"text-gray-600 mb-4\">\n              This will remove the task from your active list. You can still find it in your completed tasks.\n            </p>\n            <p className=\"text-sm font-medium text-gray-800 mb-6 p-3 bg-gray-50 rounded\">\n              \"{state.currentTask.content}\"\n            </p>\n            <div className=\"flex gap-3\">\n              <button\n                onClick={() => setShowArchiveConfirm(false)}\n                className=\"flex-1 py-2 px-4 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 transition-colors\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleArchiveTask}\n                className=\"flex-1 py-2 px-4 bg-yellow-600 text-white rounded-md hover:bg-yellow-700 transition-colors\"\n              >\n                Archive\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Complete Confirmation Dialog */}\n      {showCompleteConfirm && state.currentTask && (\n        <div \n          className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\n          onClick={() => setShowCompleteConfirm(false)}\n        >\n          <div \n            className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4 p-6\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <h3 className=\"text-lg font-bold text-gray-900 mb-2\">Complete Task?</h3>\n            <p className=\"text-gray-600 mb-4\">\n              Mark this task as completed. This action can be undone from your completed tasks.\n            </p>\n            <p className=\"text-sm font-medium text-gray-800 mb-6 p-3 bg-gray-50 rounded\">\n              \"{state.currentTask.content}\"\n            </p>\n            <div className=\"flex gap-3\">\n              <button\n                onClick={() => setShowCompleteConfirm(false)}\n                className=\"flex-1 py-2 px-4 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 transition-colors\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleCompleteTask}\n                className=\"flex-1 py-2 px-4 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors\"\n              >\n                Complete\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}